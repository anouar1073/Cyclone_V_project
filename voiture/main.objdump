
C:/Users/anoua/Desktop/projetSEM/voiture/main.elf:     file format elf32-littlenios2
C:/Users/anoua/Desktop/projetSEM/voiture/main.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001a8

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f014 memsz 0x0000f014 flags r-x
    LOAD off    0x00010034 vaddr 0x0000f034 paddr 0x00010b58 align 2**12
         filesz 0x00001b24 memsz 0x00001b24 flags rw-
    LOAD off    0x0001267c vaddr 0x0001267c paddr 0x0001267c align 2**12
         filesz 0x00000000 memsz 0x000001a8 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000188  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000eb90  000001a8  000001a8  000011a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000002fc  0000ed38  0000ed38  0000fd38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b24  0000f034  00010b58  00010034  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000001a8  0001267c  0001267c  0001267c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00012824  00012824  00011b58  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00011b58  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000df0  00000000  00000000  00011b80  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002299f  00000000  00000000  00012970  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008e75  00000000  00000000  0003530f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b16a  00000000  00000000  0003e184  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001c68  00000000  00000000  000492f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000389c  00000000  00000000  0004af58  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001912d  00000000  00000000  0004e7f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00067924  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018f0  00000000  00000000  00067938  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c170  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c173  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c17f  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c180  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c181  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c18c  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c197  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000b  00000000  00000000  0006c1a2  2**0
                  CONTENTS, READONLY
 25 .sopcinfo     00053ffa  00000000  00000000  0006c1ad  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001a8 l    d  .text	00000000 .text
0000ed38 l    d  .rodata	00000000 .rodata
0000f034 l    d  .rwdata	00000000 .rwdata
0001267c l    d  .bss	00000000 .bss
00012824 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 BSP//obj/HAL/src/crt0.o
000001e0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000ed7e l     O .rodata	00000010 zeroes.4404
00002ae4 l     F .text	000000bc __sbprintf
0000ed8e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002cf4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000484c l     F .text	00000008 __fp_unlock
00004860 l     F .text	0000019c __sinit.part.1
000049fc l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000f034 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0000f478 l     O .rwdata	00000020 lc_ctype_charset
0000f458 l     O .rwdata	00000020 lc_message_charset
0000f498 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000edc0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000073e0 l     F .text	000000fc __sprint_r.part.0
0000eee4 l     O .rodata	00000010 zeroes.4349
00008a1c l     F .text	000000bc __sbprintf
0000eef4 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000d590 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_lseek.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00010b4c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000fab0 l     O .rwdata	00001060 jtag_uart_0
0000fa80 l     O .rwdata	00000030 audio_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000df64 l     F .text	00000048 altera_avalon_jtag_uart_timeout
0000dfac l     F .text	00000108 altera_avalon_jtag_uart_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000e4dc l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e5d0 l     F .text	00000080 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000126f8 g     O .bss	00000004 alt_instruction_exception_handler
00006ef0 g     F .text	00000074 _mprec_log10
00006fdc g     F .text	0000008c __any_on
00009498 g     F .text	00000054 _isatty_r
0000edcc g     O .rodata	00000028 __mprec_tinytens
0000d9f4 g     F .text	00000050 alt_main
00012724 g     O .bss	00000100 alt_irq
000094ec g     F .text	00000060 _lseek_r
00010b58 g       *ABS*	00000000 __flash_rwdata_start
0000be10 g     F .text	00000088 .hidden __eqdf2
00012824 g       *ABS*	00000000 __alt_heap_start
000007b0 g     F .text	0000003c printf
00009dc4 g     F .text	0000009c _wcrtomb_r
00007208 g     F .text	0000005c __sseek
00004bac g     F .text	00000010 __sinit
00009c6c g     F .text	00000140 __swbuf_r
000051b8 g     F .text	0000007c _setlocale_r
00004a04 g     F .text	00000078 __sfmoreglue
0000da48 g     F .text	00000004 __malloc_unlock
0000954c g     F .text	0000015c memmove
00004b94 g     F .text	00000018 _cleanup
00005fb0 g     F .text	000000a8 _Balloc
0000be98 g     F .text	000000dc .hidden __gtdf2
0000e8a0 g     F .text	00000008 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00008f74 g     F .text	0000005c _fstat_r
000126dc g     O .bss	00000004 errno
00007184 g     F .text	00000008 __seofread
00012694 g     O .bss	00000004 edge_capture_ptr2
000126e8 g     O .bss	00000004 alt_argv
00012684 g     O .bss	00000004 alternance_hex_4
00018b10 g       *ABS*	00000000 _gp
0000f8d8 g     O .rwdata	00000180 alt_fd_list
0000e8a8 g     F .text	0000007c alt_find_dev
00005d40 g     F .text	00000148 memcpy
00004854 g     F .text	0000000c _cleanup_r
00012690 g     O .bss	00000004 alternance_hex_1
0000d250 g     F .text	000000dc .hidden __floatsidf
0000e650 g     F .text	00000094 alt_io_redirect
0000bf74 g     F .text	000000f4 .hidden __ltdf2
0000ea7c g     F .text	00000074 alt_exception_cause_generated_bad_addr
00007068 g     F .text	00000074 __fpclassifyd
00006e4c g     F .text	000000a4 __ratio
00008a00 g     F .text	0000001c __vfiprintf_internal
0000e1e8 g     F .text	00000158 altera_avalon_jtag_uart_read
00000780 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
000006c4 g     F .text	00000064 .hidden __udivsi3
0000d6f8 g     F .text	000000a0 isatty
0000ee1c g     O .rodata	000000c8 __mprec_tens
00005234 g     F .text	0000000c __locale_charset
000126d8 g     O .bss	00000004 __malloc_top_pad
0000044c g     F .text	00000074 position
00010b20 g     O .rwdata	00000004 __mb_cur_max
00005264 g     F .text	0000000c _localeconv_r
00008fd0 g     F .text	000004c8 __sfvwrite_r
000063e4 g     F .text	0000003c __i2b
000070dc g     F .text	00000054 _sbrk_r
000096a8 g     F .text	00000060 _read_r
00010b30 g     O .rwdata	00000004 alt_max_fd
00008c68 g     F .text	000000f0 _fclose_r
0000481c g     F .text	00000030 fflush
000126d4 g     O .bss	00000004 __malloc_max_sbrked_mem
0000d64c g     F .text	000000ac alt_irq_register
0000ab94 g     F .text	000008ac .hidden __adddf3
00006bf4 g     F .text	0000010c __b2d
0000a5a8 g     F .text	000005c4 .hidden __umoddi3
0000d91c g     F .text	000000d8 lseek
00010b18 g     O .rwdata	00000004 _global_impure_ptr
00009708 g     F .text	00000564 _realloc_r
00012824 g       *ABS*	00000000 __bss_end
0000dc54 g     F .text	000000cc alt_tick
00009fac g     F .text	000005fc .hidden __udivdi3
00008ed0 g     F .text	00000024 _fputwc_r
0000edf4 g     O .rodata	00000028 __mprec_bigtens
000061c8 g     F .text	00000104 __s2b
0000d32c g     F .text	000000a8 .hidden __floatunsidf
00006934 g     F .text	00000060 __mcmp
00012698 g     O .bss	00000004 tps
00004bcc g     F .text	00000018 __fp_lock_all
0000dc1c g     F .text	00000038 alt_alarm_stop
0001269c g     O .bss	00000004 byte_value_3
000126e0 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	00000070 alt_irq_handler
0000fa58 g     O .rwdata	00000028 alt_dev_null
0000e554 g     F .text	00000004 alt_dcache_flush_all
000062cc g     F .text	00000068 __hi0bits
0000d1d0 g     F .text	00000080 .hidden __fixdfsi
00010b58 g       *ABS*	00000000 __ram_rwdata_end
00010b34 g     O .rwdata	00000008 alt_dev_list
0000dd20 g     F .text	00000124 write
0000f034 g       *ABS*	00000000 __ram_rodata_end
0000d598 g     F .text	000000b4 fstat
0000bf74 g     F .text	000000f4 .hidden __ledf2
000066ac g     F .text	00000140 __pow5mult
000074f4 g     F .text	0000150c ___vfiprintf_internal_r
000126cc g     O .bss	00000004 __nlocale_changed
00000728 g     F .text	00000058 .hidden __umodsi3
00012824 g       *ABS*	00000000 end
0000e0b4 g     F .text	00000070 altera_avalon_jtag_uart_init
0000016c g     F .exceptions	0000003c alt_instruction_exception_entry
00030d40 g       *ABS*	00000000 __alt_stack_pointer
0000e518 g     F .text	0000003c alt_avalon_timer_sc_init
0000d3d4 g     F .text	00000064 .hidden __clzsi2
0000e340 g     F .text	0000019c altera_avalon_jtag_uart_write
00004bbc g     F .text	00000004 __sfp_lock_acquire
00005c5c g     F .text	000000e4 memchr
000007ec g     F .text	000022dc ___vfprintf_internal_r
00004d20 g     F .text	00000310 _free_r
00005240 g     F .text	00000010 __locale_mb_cur_max
0000eba4 g     F .text	00000180 __call_exitprocs
000126c8 g     O .bss	00000004 __mlocale_changed
00010b24 g     O .rwdata	00000004 __malloc_sbrk_base
000001a8 g     F .text	0000003c _start
000126f4 g     O .bss	00000004 _alt_tick_rate
000067ec g     F .text	00000148 __lshift
000126f0 g     O .bss	00000004 _alt_nticks
0000da4c g     F .text	00000128 read
0000de64 g     F .text	00000074 alt_sys_init
000126a0 g     O .bss	00000004 KEY_value
00006420 g     F .text	0000028c __multiply
0000e124 g     F .text	0000003c altera_avalon_jtag_uart_close
0000ab6c g     F .text	00000028 .hidden __mulsi3
0000f034 g       *ABS*	00000000 __ram_rwdata_start
0000ed38 g       *ABS*	00000000 __ram_rodata_start
000126fc g     O .bss	00000028 __malloc_current_mallinfo
00006d00 g     F .text	0000014c __d2b
00012680 g     O .bss	00000004 alternance_sw_3
0000ded8 g     F .text	00000024 altera_avalon_jtag_uart_read_fd
0000e9e4 g     F .text	00000098 alt_get_fd
00008b38 g     F .text	00000054 _close_r
0000eb28 g     F .text	0000007c memcmp
0000df20 g     F .text	00000024 altera_avalon_jtag_uart_close_fd
0001268c g     O .bss	00000004 alternance_hex_2
00012824 g       *ABS*	00000000 __alt_stack_base
0000df44 g     F .text	00000020 altera_avalon_jtag_uart_ioctl_fd
00002ba0 g     F .text	00000154 __swsetup_r
0000b440 g     F .text	000009d0 .hidden __divdf3
00004a7c g     F .text	00000118 __sfp
00006f64 g     F .text	00000078 __copybits
0000f4d0 g     O .rwdata	00000408 __malloc_av_
00004bc8 g     F .text	00000004 __sinit_lock_release
0000c068 g     F .text	0000086c .hidden __muldf3
00007130 g     F .text	00000054 __sread
000126a4 g     O .bss	00000004 byte_value_1
0000e924 g     F .text	000000c0 alt_find_file
0000e558 g     F .text	00000074 alt_dev_llist_insert
0000da44 g     F .text	00000004 __malloc_lock
0000dbd0 g     F .text	0000004c sbrk
000047c0 g     F .text	0000005c _fflush_r
00008b8c g     F .text	000000dc _calloc_r
00010b10 g     O .rwdata	00000004 alternance_2
0001267c g       *ABS*	00000000 __bss_start
00005e88 g     F .text	00000128 memset
000004c0 g     F .text	0000010c main
000126e4 g     O .bss	00000004 alt_envp
000126d0 g     O .bss	00000004 __malloc_max_total_mem
0000defc g     F .text	00000024 altera_avalon_jtag_uart_write_fd
00009dac g     F .text	00000018 __swbuf
00007264 g     F .text	00000008 __sclose
00030d40 g       *ABS*	00000000 __alt_heap_limit
00008d58 g     F .text	00000014 fclose
00002f1c g     F .text	00001688 _dtoa_r
00005450 g     F .text	0000080c _malloc_r
00009f20 g     F .text	00000030 __ascii_wctomb
00010b44 g     O .rwdata	00000004 alt_errno
00005030 g     F .text	000000c4 _fwalk
000005cc g     F .text	00000084 .hidden __divsi3
00004bfc g     F .text	00000124 _malloc_trim_r
000126a8 g     O .bss	00000004 byte_value_4
0000726c g     F .text	000000dc strcmp
000126ac g     O .bss	00000004 problem
0000ed38 g       *ABS*	00000000 __flash_rodata_start
0000be10 g     F .text	00000088 .hidden __nedf2
0000de44 g     F .text	00000020 alt_irq_init
0000db74 g     F .text	0000005c alt_release_fd
0000ef04 g     O .rodata	00000100 .hidden __clz_tab
000126c4 g     O .bss	00000004 _PathLocale
00008ad8 g     F .text	00000060 _write_r
00005270 g     F .text	00000018 setlocale
000002a8 g     F .text	000001a4 pushbutton_ISR
00010b1c g     O .rwdata	00000004 _impure_ptr
000126ec g     O .bss	00000004 alt_argc
000045a4 g     F .text	0000021c __sflush_r
0000525c g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006b90 g     F .text	00000064 __ulp
00004be4 g     F .text	00000018 __fp_unlock_all
00010b3c g     O .rwdata	00000008 alt_fs_list
000001e4 g     F .text	000000c4 alarm_1_callback
000126b0 g     O .bss	00000004 urgence_var
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005288 g     F .text	0000000c localeconv
00010b58 g       *ABS*	00000000 _edata
00012824 g       *ABS*	00000000 _end
00008d6c g     F .text	00000164 __fputwc
000001a8 g       *ABS*	00000000 __ram_exceptions_end
0000e160 g     F .text	00000088 altera_avalon_jtag_uart_ioctl
000126b4 g     O .bss	00000004 edge_capture_ptr
000126b8 g     O .bss	00000004 hex_value
0000718c g     F .text	0000007c __swrite
00010b28 g     O .rwdata	00000004 __malloc_trim_threshold
00005250 g     F .text	0000000c __locale_msgcharset
0000eaf0 g     F .text	00000038 exit
000050f4 g     F .text	000000c4 _fwalk_reent
00006994 g     F .text	000001fc __mdiff
00010b14 g     O .rwdata	00000004 alternance_1
00000650 g     F .text	00000074 .hidden __modsi3
00030d40 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004bc0 g     F .text	00000004 __sfp_lock_release
0001267c g     O .bss	00000004 alternance_sw_4
0000ed24 g     F .text	00000014 _exit
0000d438 g     F .text	00000080 alt_alarm_start
00005294 g     F .text	000001bc __smakebuf_r
00007348 g     F .text	00000098 strlen
0000e6e4 g     F .text	000001bc open
0000be98 g     F .text	000000dc .hidden __gedf2
00010b2c g     O .rwdata	00000004 __wctomb
000074dc g     F .text	00000018 __sprint_r
0000e5cc g     F .text	00000004 alt_icache_flush_all
000126bc g     O .bss	00000004 byte_value_2
00010b48 g     O .rwdata	00000004 alt_priority_mask
000126c0 g     O .bss	00000004 byte_value_4_1
00002ac8 g     F .text	0000001c __vfprintf_internal
00009f50 g     F .text	0000005c _wctomb_r
00012688 g     O .bss	00000004 alternance_hex_3
0000c8d4 g     F .text	000008fc .hidden __subdf3
00006334 g     F .text	000000b0 __lo0bits
00010b50 g     O .rwdata	00000008 alt_alarm_list
00009e60 g     F .text	000000c0 wcrtomb
0000d4b8 g     F .text	000000d8 close
0000d798 g     F .text	00000184 alt_load
00008ef4 g     F .text	00000080 fputwc
00004bc4 g     F .text	00000004 __sinit_lock_acquire
00006080 g     F .text	00000148 __multadd
00006058 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08406a14 	ori	at,at,424
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	000016c0 	call	16c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defffe04 	addi	sp,sp,-8
 100:	dfc00115 	stw	ra,4(sp)
 104:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 108:	0009313a 	rdctl	r4,ipending
      if (active & mask)
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 10c:	04000074 	movhi	r16,1
 110:	8409c904 	addi	r16,r16,10020
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 114:	2080004c 	andi	r2,r4,1
 118:	10000926 	beq	r2,zero,140 <alt_irq_handler+0x44>

  active = alt_irq_pending ();

  do
  {
    i = 0;
 11c:	000b883a 	mov	r5,zero
      if (active & mask)
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 120:	280490fa 	slli	r2,r5,3
 124:	8085883a 	add	r2,r16,r2
 128:	10c00017 	ldw	r3,0(r2)
 12c:	11000117 	ldw	r4,4(r2)
 130:	183ee83a 	callr	r3
 134:	0009313a 	rdctl	r4,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
 138:	203ff61e 	bne	r4,zero,114 <__alt_data_end+0xfffcf3d4>
 13c:	00000706 	br	15c <alt_irq_handler+0x60>
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 140:	000b883a 	mov	r5,zero
 144:	00800044 	movi	r2,1
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 148:	1085883a 	add	r2,r2,r2
      i++;
 14c:	29400044 	addi	r5,r5,1
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 150:	2086703a 	and	r3,r4,r2
 154:	183ffc26 	beq	r3,zero,148 <__alt_data_end+0xfffcf408>
 158:	003ff106 	br	120 <__alt_data_end+0xfffcf3e0>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 15c:	dfc00117 	ldw	ra,4(sp)
 160:	dc000017 	ldw	r16,0(sp)
 164:	dec00204 	addi	sp,sp,8
 168:	f800283a 	ret

0000016c <alt_instruction_exception_entry>:
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 16c:	d0a6fa17 	ldw	r2,-25624(gp)
 170:	10000726 	beq	r2,zero,190 <alt_instruction_exception_entry+0x24>
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 174:	deffff04 	addi	sp,sp,-4
 178:	dfc00015 	stw	ra,0(sp)
 17c:	200b883a 	mov	r5,r4
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 180:	000d883a 	mov	r6,zero
 184:	013fffc4 	movi	r4,-1
 188:	103ee83a 	callr	r2
 18c:	00000306 	br	19c <alt_instruction_exception_entry+0x30>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 190:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 194:	0005883a 	mov	r2,zero
 198:	f800283a 	ret
}
 19c:	dfc00017 	ldw	ra,0(sp)
 1a0:	dec00104 	addi	sp,sp,4
 1a4:	f800283a 	ret

Disassembly of section .text:

000001a8 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1a8:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
     1ac:	dec35014 	ori	sp,sp,3392
    movhi gp, %hi(_gp)
     1b0:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1b4:	d6a2c414 	ori	gp,gp,35600
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1b8:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1bc:	10899f14 	ori	r2,r2,9852

    movhi r3, %hi(__bss_end)
     1c0:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1c4:	18ca0914 	ori	r3,r3,10276

    beq r2, r3, 1f
     1c8:	10c00326 	beq	r2,r3,1d8 <_start+0x30>

0:
    stw zero, (r2)
     1cc:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1d0:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1d4:	10fffd36 	bltu	r2,r3,1cc <__alt_data_end+0xfffcf48c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1d8:	000d7980 	call	d798 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1dc:	000d9f40 	call	d9f4 <alt_main>

000001e0 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1e0:	003fff06 	br	1e0 <__alt_data_end+0xfffcf4a0>

000001e4 <alarm_1_callback>:
	int byte_value_4_1;
	int hex_value;
unsigned int tps;

alt_u32 alarm_1_callback (void* context)
{
     1e4:	deffff04 	addi	sp,sp,-4
     1e8:	dfc00015 	stw	ra,0(sp)
int switch1,switch2;
int led_val;
int value_bit_1;
int value_bit_2;
	
	switch1 = IORD_ALTERA_AVALON_PIO_DATA(SWITCHES_BASE)& BIT1;
     1ec:	00800134 	movhi	r2,4
     1f0:	10841404 	addi	r2,r2,4176
     1f4:	10c00037 	ldwio	r3,0(r2)
	switch2 = IORD_ALTERA_AVALON_PIO_DATA(SWITCHES_BASE)& BIT2;
     1f8:	10800037 	ldwio	r2,0(r2)
     1fc:	1080008c 	andi	r2,r2,2
	led_val = IORD_ALTERA_AVALON_PIO_DATA(LEDS_BASE);
     200:	01000134 	movhi	r4,4
     204:	21041004 	addi	r4,r4,4160
     208:	21000037 	ldwio	r4,0(r4)
	if(switch1 ==0x1){
     20c:	18c0004c 	andi	r3,r3,1
     210:	18000f26 	beq	r3,zero,250 <alarm_1_callback+0x6c>
		if(alternance_1==0)	{
     214:	d0e00117 	ldw	r3,-32764(gp)
     218:	1800071e 	bne	r3,zero,238 <alarm_1_callback+0x54>
			value_bit_1 = led_val | ON_1;
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE ,value_bit_1);
     21c:	20c00054 	ori	r3,r4,1
     220:	01400134 	movhi	r5,4
     224:	29441004 	addi	r5,r5,4160
     228:	28c00035 	stwio	r3,0(r5)
			alternance_1=1;
     22c:	00c00044 	movi	r3,1
     230:	d0e00115 	stw	r3,-32764(gp)
     234:	00000606 	br	250 <alarm_1_callback+0x6c>
		} else {
			value_bit_1= led_val & OFF_1;
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE ,value_bit_1);
     238:	00ffff84 	movi	r3,-2
     23c:	20c6703a 	and	r3,r4,r3
     240:	01400134 	movhi	r5,4
     244:	29441004 	addi	r5,r5,4160
     248:	28c00035 	stwio	r3,0(r5)
			alternance_1=0;
     24c:	d0200115 	stw	zero,-32764(gp)
		}
	}
	if(switch2==0x2){
     250:	10000f26 	beq	r2,zero,290 <alarm_1_callback+0xac>
		if(alternance_2==0){
     254:	d0a00017 	ldw	r2,-32768(gp)
     258:	1000071e 	bne	r2,zero,278 <alarm_1_callback+0x94>
			value_bit_2 = led_val | (ON_1 <<1);
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE ,value_bit_2);
     25c:	21000094 	ori	r4,r4,2
     260:	00800134 	movhi	r2,4
     264:	10841004 	addi	r2,r2,4160
     268:	11000035 	stwio	r4,0(r2)
			alternance_2 =1;
     26c:	00800044 	movi	r2,1
     270:	d0a00015 	stw	r2,-32768(gp)
     274:	00000606 	br	290 <alarm_1_callback+0xac>
		} else {
			value_bit_2 = led_val & (OFF_1<<1);
			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE ,value_bit_2);
     278:	00bfff04 	movi	r2,-4
     27c:	2088703a 	and	r4,r4,r2
     280:	00800134 	movhi	r2,4
     284:	10841004 	addi	r2,r2,4160
     288:	11000035 	stwio	r4,0(r2)
			alternance_2=0;
     28c:	d0200015 	stw	zero,-32768(gp)
		}
	}
	
	return tps/3;
     290:	014000c4 	movi	r5,3
     294:	d126e217 	ldw	r4,-25720(gp)
     298:	00006c40 	call	6c4 <__udivsi3>
}
     29c:	dfc00017 	ldw	ra,0(sp)
     2a0:	dec00104 	addi	sp,sp,4
     2a4:	f800283a 	ret

000002a8 <pushbutton_ISR>:

void pushbutton_ISR(unsigned int id)
{
	
	//read the pushbutton interrupt register 
	KEY_value= IORD_ALTERA_AVALON_PIO_EDGE_CAP(BOUTONS_BASE);
     2a8:	00c00134 	movhi	r3,4
     2ac:	18c40b04 	addi	r3,r3,4140
     2b0:	18800037 	ldwio	r2,0(r3)
     2b4:	d0a6e415 	stw	r2,-25712(gp)
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BOUTONS_BASE, KEY_value&0xF); // clear the interrupt
     2b8:	108003cc 	andi	r2,r2,15
     2bc:	18800035 	stwio	r2,0(r3)

	int KEY1 = KEY_value&BIT1;
     2c0:	d0a6e417 	ldw	r2,-25712(gp)
	int KEY2 = (KEY_value&BIT2)>>1;
     2c4:	1140008c 	andi	r5,r2,2
     2c8:	280bd07a 	srai	r5,r5,1
	int KEY3 = (KEY_value&BIT3)>>2;
     2cc:	1100010c 	andi	r4,r2,4
     2d0:	2009d0ba 	srai	r4,r4,2
	int KEY4 = (KEY_value&BIT4)>>3;
     2d4:	10c0020c 	andi	r3,r2,8
     2d8:	1807d0fa 	srai	r3,r3,3

	hex_value = IORD_ALTERA_AVALON_PIO_DATA(HEX_0_BASE);
     2dc:	01800134 	movhi	r6,4
     2e0:	31840c04 	addi	r6,r6,4144
     2e4:	31800037 	ldwio	r6,0(r6)
     2e8:	d1a6ea15 	stw	r6,-25688(gp)
	if(KEY1==0x1){
     2ec:	1080004c 	andi	r2,r2,1
     2f0:	10001426 	beq	r2,zero,344 <pushbutton_ISR+0x9c>
		// write 1 in hex0 for fault 1
		if (alternance_hex_1==0) {
     2f4:	d0a6e017 	ldw	r2,-25728(gp)
     2f8:	10000c1e 	bne	r2,zero,32c <pushbutton_ISR+0x84>
				byte_value_1= hex_value | ON_8;
     2fc:	31803fd4 	ori	r6,r6,255
				IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_1);
     300:	01c00134 	movhi	r7,4
     304:	39c40c04 	addi	r7,r7,4144
     308:	39800035 	stwio	r6,0(r7)
				byte_value_1 = hex_value & ONE;
     30c:	00bffe44 	movi	r2,-7
     310:	d1a6ea17 	ldw	r6,-25688(gp)
     314:	3084703a 	and	r2,r6,r2
     318:	d0a6e515 	stw	r2,-25708(gp)
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_1);
     31c:	38800035 	stwio	r2,0(r7)
			alternance_hex_1=1;
     320:	00800044 	movi	r2,1
     324:	d0a6e015 	stw	r2,-25728(gp)
     328:	00000606 	br	344 <pushbutton_ISR+0x9c>
			}
		else {
			byte_value_1= hex_value | ON_8;
     32c:	31803fd4 	ori	r6,r6,255
     330:	d1a6e515 	stw	r6,-25708(gp)
			//byte_value_1= hex_value & OFF_8;
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_1);
     334:	00800134 	movhi	r2,4
     338:	10840c04 	addi	r2,r2,4144
     33c:	11800035 	stwio	r6,0(r2)
			alternance_hex_1=0;
     340:	d026e015 	stw	zero,-25728(gp)
		}
	}
	if(KEY2==0x1){
     344:	28001626 	beq	r5,zero,3a0 <pushbutton_ISR+0xf8>
		// write 1 in hex0 for fault 1
		if (alternance_hex_2==0) {
     348:	d0a6df17 	ldw	r2,-25732(gp)
     34c:	10000d1e 	bne	r2,zero,384 <pushbutton_ISR+0xdc>
			byte_value_2 = hex_value | ON_8;
     350:	d0a6ea17 	ldw	r2,-25688(gp)
     354:	10803fd4 	ori	r2,r2,255
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_2);
     358:	01400134 	movhi	r5,4
     35c:	29440c04 	addi	r5,r5,4144
     360:	28800035 	stwio	r2,0(r5)
			byte_value_2 = hex_value & TWO;
     364:	00bfe904 	movi	r2,-92
     368:	d1a6ea17 	ldw	r6,-25688(gp)
     36c:	3084703a 	and	r2,r6,r2
     370:	d0a6eb15 	stw	r2,-25684(gp)
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_2);
     374:	28800035 	stwio	r2,0(r5)
			alternance_hex_2=1;
     378:	00800044 	movi	r2,1
     37c:	d0a6df15 	stw	r2,-25732(gp)
     380:	00000706 	br	3a0 <pushbutton_ISR+0xf8>
			}
		else {
			byte_value_2 = hex_value | ON_8;
     384:	d0a6ea17 	ldw	r2,-25688(gp)
     388:	10803fd4 	ori	r2,r2,255
     38c:	d0a6eb15 	stw	r2,-25684(gp)
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_2);
     390:	01400134 	movhi	r5,4
     394:	29440c04 	addi	r5,r5,4144
     398:	28800035 	stwio	r2,0(r5)
			alternance_hex_2=0;
     39c:	d026df15 	stw	zero,-25732(gp)
		}
	}
	if(KEY3==0x1){
     3a0:	20001626 	beq	r4,zero,3fc <pushbutton_ISR+0x154>
		// write 1 in hex0 for fault 1
		if (alternance_hex_3==0) {
     3a4:	d0a6de17 	ldw	r2,-25736(gp)
     3a8:	10000d1e 	bne	r2,zero,3e0 <pushbutton_ISR+0x138>
				byte_value_3 = hex_value | ON_8;
     3ac:	d0a6ea17 	ldw	r2,-25688(gp)
     3b0:	10803fd4 	ori	r2,r2,255
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_3);
     3b4:	01000134 	movhi	r4,4
     3b8:	21040c04 	addi	r4,r4,4144
     3bc:	20800035 	stwio	r2,0(r4)
				byte_value_3 = hex_value & THREE;
     3c0:	00bfec04 	movi	r2,-80
     3c4:	d166ea17 	ldw	r5,-25688(gp)
     3c8:	2884703a 	and	r2,r5,r2
     3cc:	d0a6e315 	stw	r2,-25716(gp)
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_3);
     3d0:	20800035 	stwio	r2,0(r4)
			alternance_hex_3=1;
     3d4:	00800044 	movi	r2,1
     3d8:	d0a6de15 	stw	r2,-25736(gp)
     3dc:	00000706 	br	3fc <pushbutton_ISR+0x154>
			}
		else {
			byte_value_3 = hex_value | ON_8;
     3e0:	d0a6ea17 	ldw	r2,-25688(gp)
     3e4:	10803fd4 	ori	r2,r2,255
     3e8:	d0a6e315 	stw	r2,-25716(gp)
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,byte_value_3);
     3ec:	01000134 	movhi	r4,4
     3f0:	21040c04 	addi	r4,r4,4144
     3f4:	20800035 	stwio	r2,0(r4)
			alternance_hex_3=0;
     3f8:	d026de15 	stw	zero,-25736(gp)
		}
	}
	if(KEY4==0x1){
     3fc:	18001226 	beq	r3,zero,448 <pushbutton_ISR+0x1a0>

  	return;
}

void pushbutton_ISR(unsigned int id)
{
     400:	deffff04 	addi	sp,sp,-4
     404:	dfc00015 	stw	ra,0(sp)
			alternance_hex_3=0;
		}
	}
	if(KEY4==0x1){
		// write 1 in hex0 for fault 1
		if (urgence_var==0) {
     408:	d0a6e817 	ldw	r2,-25696(gp)
     40c:	1000071e 	bne	r2,zero,42c <pushbutton_ISR+0x184>
				urgence_var =1;
     410:	00800044 	movi	r2,1
     414:	d0a6e815 	stw	r2,-25696(gp)
				printf("%d\n",urgence_var);
     418:	d166e817 	ldw	r5,-25696(gp)
     41c:	01000074 	movhi	r4,1
     420:	213b4e04 	addi	r4,r4,-4808
     424:	00007b00 	call	7b0 <printf>
     428:	00000506 	br	440 <pushbutton_ISR+0x198>
		}
		else {
				urgence_var=0;
     42c:	d026e815 	stw	zero,-25696(gp)
				printf("%d\n",urgence_var);
     430:	d166e817 	ldw	r5,-25696(gp)
     434:	01000074 	movhi	r4,1
     438:	213b4e04 	addi	r4,r4,-4808
     43c:	00007b00 	call	7b0 <printf>
	}
	}
		
	return;
	}
     440:	dfc00017 	ldw	ra,0(sp)
     444:	dec00104 	addi	sp,sp,4
     448:	f800283a 	ret

0000044c <position>:
	return tps/3;
}

void position(void) {

	int SW_value= IORD_ALTERA_AVALON_PIO_DATA(SWITCHES_BASE);
     44c:	00800134 	movhi	r2,4
     450:	10841404 	addi	r2,r2,4176
     454:	10c00037 	ldwio	r3,0(r2)
  	int SW2= ((SW_value)&0x4)!=0;
 	int SW3= ((SW_value)&0x8)!=0;
     458:	1900020c 	andi	r4,r3,8

  	int led_value = IORD_ALTERA_AVALON_PIO_DATA(LEDS_BASE);
     45c:	00800134 	movhi	r2,4
     460:	10841004 	addi	r2,r2,4160
     464:	10800037 	ldwio	r2,0(r2)

	if(SW2){
     468:	18c0010c 	andi	r3,r3,4
     46c:	18000526 	beq	r3,zero,484 <position+0x38>
    	led_value=led_value|0xC; //Allumer LED2 et LED3
     470:	10800314 	ori	r2,r2,12
    	IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE,led_value);
     474:	00c00134 	movhi	r3,4
     478:	18c41004 	addi	r3,r3,4160
     47c:	18800035 	stwio	r2,0(r3)
     480:	00000406 	br	494 <position+0x48>
  	}
  	else {
    	led_value=led_value&0x7F3; //Eteindre LED2 et LED3
     484:	1081fccc 	andi	r2,r2,2035
    	IOWR_ALTERA_AVALON_PIO_DATA(  LEDS_BASE,led_value);
     488:	00c00134 	movhi	r3,4
     48c:	18c41004 	addi	r3,r3,4160
     490:	18800035 	stwio	r2,0(r3)
  	}

  	if(SW3){
     494:	20000526 	beq	r4,zero,4ac <position+0x60>
    	led_value=led_value|0x30; //Allumer LED4 et LED5
    	IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE,led_value);
     498:	10800c14 	ori	r2,r2,48
     49c:	00c00134 	movhi	r3,4
     4a0:	18c41004 	addi	r3,r3,4160
     4a4:	18800035 	stwio	r2,0(r3)
     4a8:	f800283a 	ret
  	}
  	else{
    	led_value=led_value&0x7CF; //Eteindre LED4 et LED5
    	IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE,led_value);
     4ac:	1081f3cc 	andi	r2,r2,1999
     4b0:	00c00134 	movhi	r3,4
     4b4:	18c41004 	addi	r3,r3,4160
     4b8:	18800035 	stwio	r2,0(r3)
     4bc:	f800283a 	ret

000004c0 <main>:
	return;
	}
	
//void switch_ISR (unsigned int id);
int main() 
{
     4c0:	defff204 	addi	sp,sp,-56
     4c4:	dfc00d15 	stw	ra,52(sp)
     4c8:	dd800c15 	stw	r22,48(sp)
     4cc:	dd400b15 	stw	r21,44(sp)
     4d0:	dd000a15 	stw	r20,40(sp)
     4d4:	dcc00915 	stw	r19,36(sp)
     4d8:	dc800815 	stw	r18,32(sp)
     4dc:	dc400715 	stw	r17,28(sp)
     4e0:	dc000615 	stw	r16,24(sp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
     4e4:	d166f917 	ldw	r5,-25628(gp)
	// alarm setup
		alt_alarm alarm_1;
		tps = alt_ticks_per_second();
     4e8:	d166e215 	stw	r5,-25720(gp)
		alt_alarm_start ( &alarm_1,tps, alarm_1_callback, NULL );
     4ec:	000f883a 	mov	r7,zero
     4f0:	01800034 	movhi	r6,0
     4f4:	31807904 	addi	r6,r6,484
     4f8:	d809883a 	mov	r4,sp
     4fc:	000d4380 	call	d438 <alt_alarm_start>
	
	/* enable interrupts for all pushbuttons */
		IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0xF);
     500:	008003c4 	movi	r2,15
     504:	00c00134 	movhi	r3,4
     508:	18c40a04 	addi	r3,r3,4136
     50c:	18800035 	stwio	r2,0(r3)
    
		/* Reset the edge capture register. */
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BOUTONS_BASE, 0xF);  
     510:	00c00134 	movhi	r3,4
     514:	18c40b04 	addi	r3,r3,4140
     518:	18800035 	stwio	r2,0(r3)
		alt_irq_register(BOUTONS_IRQ, edge_capture_ptr, (void *) pushbutton_ISR);
     51c:	01800034 	movhi	r6,0
     520:	3180aa04 	addi	r6,r6,680
     524:	d166e917 	ldw	r5,-25692(gp)
     528:	01000104 	movi	r4,4
     52c:	000d64c0 	call	d64c <alt_irq_register>
	

	//alt_irq_register (1, NULL, (void *) pushbutton_ISR_2);
	// initialisation du 7 segment
	
	int etat =initialisation;
     530:	0021883a 	mov	r16,zero
	while(1) {
	switch(etat) {
     534:	04400044 	movi	r17,1
     538:	04800084 	movi	r18,2
	case initialisation:
			etat=fonctionnement;
	break;
	case fonctionnement:
		position();
		IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0xF);
     53c:	050003c4 	movi	r20,15
		if( urgence_var ) {
				/* disable interrupts for all pushbuttons exept emergency button*/
				//alt_irq_disable(BOUTONS_IRQ);
				IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0x8);
     540:	05800204 	movi	r22,8
			}	
	break;
	case urgence:
			
			//byte_value_4 = hex_value | 0x20;
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,0x3F);
     544:	04c00fc4 	movi	r19,63
			if(urgence_var==0){
					alt_alarm_start ( &alarm_1,tps, alarm_1_callback, NULL );
     548:	05400034 	movhi	r21,0
     54c:	ad407904 	addi	r21,r21,484
     550:	00000106 	br	558 <main+0x98>
	
	int etat =initialisation;
	while(1) {
	switch(etat) {
	case initialisation:
			etat=fonctionnement;
     554:	8821883a 	mov	r16,r17
	//alt_irq_register (1, NULL, (void *) pushbutton_ISR_2);
	// initialisation du 7 segment
	
	int etat =initialisation;
	while(1) {
	switch(etat) {
     558:	84400326 	beq	r16,r17,568 <main+0xa8>
     55c:	84800f26 	beq	r16,r18,59c <main+0xdc>
     560:	803ffd1e 	bne	r16,zero,558 <__alt_data_end+0xfffcf818>
     564:	003ffb06 	br	554 <__alt_data_end+0xfffcf814>
	case initialisation:
			etat=fonctionnement;
	break;
	case fonctionnement:
		position();
     568:	000044c0 	call	44c <position>
		IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0xF);
     56c:	00800134 	movhi	r2,4
     570:	10840a04 	addi	r2,r2,4136
     574:	15000035 	stwio	r20,0(r2)
		if( urgence_var ) {
     578:	d0a6e817 	ldw	r2,-25696(gp)
     57c:	103ff626 	beq	r2,zero,558 <__alt_data_end+0xfffcf818>
				/* disable interrupts for all pushbuttons exept emergency button*/
				//alt_irq_disable(BOUTONS_IRQ);
				IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0x8);
     580:	00800134 	movhi	r2,4
     584:	10840a04 	addi	r2,r2,4136
     588:	15800035 	stwio	r22,0(r2)
				etat=urgence;
				alt_alarm_stop(&alarm_1);	
     58c:	d809883a 	mov	r4,sp
     590:	000dc1c0 	call	dc1c <alt_alarm_stop>
		IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0xF);
		if( urgence_var ) {
				/* disable interrupts for all pushbuttons exept emergency button*/
				//alt_irq_disable(BOUTONS_IRQ);
				IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BOUTONS_BASE, 0x8);
				etat=urgence;
     594:	9021883a 	mov	r16,r18
     598:	003fef06 	br	558 <__alt_data_end+0xfffcf818>
			}	
	break;
	case urgence:
			
			//byte_value_4 = hex_value | 0x20;
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_0_BASE ,0x3F);
     59c:	00800134 	movhi	r2,4
     5a0:	10840c04 	addi	r2,r2,4144
     5a4:	14c00035 	stwio	r19,0(r2)
			if(urgence_var==0){
     5a8:	d0a6e817 	ldw	r2,-25696(gp)
     5ac:	103fea1e 	bne	r2,zero,558 <__alt_data_end+0xfffcf818>
					alt_alarm_start ( &alarm_1,tps, alarm_1_callback, NULL );
     5b0:	000f883a 	mov	r7,zero
     5b4:	a80d883a 	mov	r6,r21
     5b8:	d166e217 	ldw	r5,-25720(gp)
     5bc:	d809883a 	mov	r4,sp
     5c0:	000d4380 	call	d438 <alt_alarm_start>
				etat=initialisation;
     5c4:	0021883a 	mov	r16,zero
     5c8:	003fe306 	br	558 <__alt_data_end+0xfffcf818>

000005cc <__divsi3>:
     5cc:	20001b16 	blt	r4,zero,63c <__divsi3+0x70>
     5d0:	000f883a 	mov	r7,zero
     5d4:	28001616 	blt	r5,zero,630 <__divsi3+0x64>
     5d8:	200d883a 	mov	r6,r4
     5dc:	29001a2e 	bgeu	r5,r4,648 <__divsi3+0x7c>
     5e0:	00800804 	movi	r2,32
     5e4:	00c00044 	movi	r3,1
     5e8:	00000106 	br	5f0 <__divsi3+0x24>
     5ec:	10000d26 	beq	r2,zero,624 <__divsi3+0x58>
     5f0:	294b883a 	add	r5,r5,r5
     5f4:	10bfffc4 	addi	r2,r2,-1
     5f8:	18c7883a 	add	r3,r3,r3
     5fc:	293ffb36 	bltu	r5,r4,5ec <__alt_data_end+0xfffcf8ac>
     600:	0005883a 	mov	r2,zero
     604:	18000726 	beq	r3,zero,624 <__divsi3+0x58>
     608:	0005883a 	mov	r2,zero
     60c:	31400236 	bltu	r6,r5,618 <__divsi3+0x4c>
     610:	314dc83a 	sub	r6,r6,r5
     614:	10c4b03a 	or	r2,r2,r3
     618:	1806d07a 	srli	r3,r3,1
     61c:	280ad07a 	srli	r5,r5,1
     620:	183ffa1e 	bne	r3,zero,60c <__alt_data_end+0xfffcf8cc>
     624:	38000126 	beq	r7,zero,62c <__divsi3+0x60>
     628:	0085c83a 	sub	r2,zero,r2
     62c:	f800283a 	ret
     630:	014bc83a 	sub	r5,zero,r5
     634:	39c0005c 	xori	r7,r7,1
     638:	003fe706 	br	5d8 <__alt_data_end+0xfffcf898>
     63c:	0109c83a 	sub	r4,zero,r4
     640:	01c00044 	movi	r7,1
     644:	003fe306 	br	5d4 <__alt_data_end+0xfffcf894>
     648:	00c00044 	movi	r3,1
     64c:	003fee06 	br	608 <__alt_data_end+0xfffcf8c8>

00000650 <__modsi3>:
     650:	20001716 	blt	r4,zero,6b0 <__modsi3+0x60>
     654:	000f883a 	mov	r7,zero
     658:	2005883a 	mov	r2,r4
     65c:	28001216 	blt	r5,zero,6a8 <__modsi3+0x58>
     660:	2900162e 	bgeu	r5,r4,6bc <__modsi3+0x6c>
     664:	01800804 	movi	r6,32
     668:	00c00044 	movi	r3,1
     66c:	00000106 	br	674 <__modsi3+0x24>
     670:	30000a26 	beq	r6,zero,69c <__modsi3+0x4c>
     674:	294b883a 	add	r5,r5,r5
     678:	31bfffc4 	addi	r6,r6,-1
     67c:	18c7883a 	add	r3,r3,r3
     680:	293ffb36 	bltu	r5,r4,670 <__alt_data_end+0xfffcf930>
     684:	18000526 	beq	r3,zero,69c <__modsi3+0x4c>
     688:	1806d07a 	srli	r3,r3,1
     68c:	11400136 	bltu	r2,r5,694 <__modsi3+0x44>
     690:	1145c83a 	sub	r2,r2,r5
     694:	280ad07a 	srli	r5,r5,1
     698:	183ffb1e 	bne	r3,zero,688 <__alt_data_end+0xfffcf948>
     69c:	38000126 	beq	r7,zero,6a4 <__modsi3+0x54>
     6a0:	0085c83a 	sub	r2,zero,r2
     6a4:	f800283a 	ret
     6a8:	014bc83a 	sub	r5,zero,r5
     6ac:	003fec06 	br	660 <__alt_data_end+0xfffcf920>
     6b0:	0109c83a 	sub	r4,zero,r4
     6b4:	01c00044 	movi	r7,1
     6b8:	003fe706 	br	658 <__alt_data_end+0xfffcf918>
     6bc:	00c00044 	movi	r3,1
     6c0:	003ff106 	br	688 <__alt_data_end+0xfffcf948>

000006c4 <__udivsi3>:
     6c4:	200d883a 	mov	r6,r4
     6c8:	2900152e 	bgeu	r5,r4,720 <__udivsi3+0x5c>
     6cc:	28001416 	blt	r5,zero,720 <__udivsi3+0x5c>
     6d0:	00800804 	movi	r2,32
     6d4:	00c00044 	movi	r3,1
     6d8:	00000206 	br	6e4 <__udivsi3+0x20>
     6dc:	10000e26 	beq	r2,zero,718 <__udivsi3+0x54>
     6e0:	28000516 	blt	r5,zero,6f8 <__udivsi3+0x34>
     6e4:	294b883a 	add	r5,r5,r5
     6e8:	10bfffc4 	addi	r2,r2,-1
     6ec:	18c7883a 	add	r3,r3,r3
     6f0:	293ffa36 	bltu	r5,r4,6dc <__alt_data_end+0xfffcf99c>
     6f4:	18000826 	beq	r3,zero,718 <__udivsi3+0x54>
     6f8:	0005883a 	mov	r2,zero
     6fc:	31400236 	bltu	r6,r5,708 <__udivsi3+0x44>
     700:	314dc83a 	sub	r6,r6,r5
     704:	10c4b03a 	or	r2,r2,r3
     708:	1806d07a 	srli	r3,r3,1
     70c:	280ad07a 	srli	r5,r5,1
     710:	183ffa1e 	bne	r3,zero,6fc <__alt_data_end+0xfffcf9bc>
     714:	f800283a 	ret
     718:	0005883a 	mov	r2,zero
     71c:	f800283a 	ret
     720:	00c00044 	movi	r3,1
     724:	003ff406 	br	6f8 <__alt_data_end+0xfffcf9b8>

00000728 <__umodsi3>:
     728:	2005883a 	mov	r2,r4
     72c:	2900122e 	bgeu	r5,r4,778 <__umodsi3+0x50>
     730:	28001116 	blt	r5,zero,778 <__umodsi3+0x50>
     734:	01800804 	movi	r6,32
     738:	00c00044 	movi	r3,1
     73c:	00000206 	br	748 <__umodsi3+0x20>
     740:	30000c26 	beq	r6,zero,774 <__umodsi3+0x4c>
     744:	28000516 	blt	r5,zero,75c <__umodsi3+0x34>
     748:	294b883a 	add	r5,r5,r5
     74c:	31bfffc4 	addi	r6,r6,-1
     750:	18c7883a 	add	r3,r3,r3
     754:	293ffa36 	bltu	r5,r4,740 <__alt_data_end+0xfffcfa00>
     758:	18000626 	beq	r3,zero,774 <__umodsi3+0x4c>
     75c:	1806d07a 	srli	r3,r3,1
     760:	11400136 	bltu	r2,r5,768 <__umodsi3+0x40>
     764:	1145c83a 	sub	r2,r2,r5
     768:	280ad07a 	srli	r5,r5,1
     76c:	183ffb1e 	bne	r3,zero,75c <__alt_data_end+0xfffcfa1c>
     770:	f800283a 	ret
     774:	f800283a 	ret
     778:	00c00044 	movi	r3,1
     77c:	003ff706 	br	75c <__alt_data_end+0xfffcfa1c>

00000780 <_printf_r>:
     780:	defffd04 	addi	sp,sp,-12
     784:	2805883a 	mov	r2,r5
     788:	dfc00015 	stw	ra,0(sp)
     78c:	d9800115 	stw	r6,4(sp)
     790:	d9c00215 	stw	r7,8(sp)
     794:	21400217 	ldw	r5,8(r4)
     798:	d9c00104 	addi	r7,sp,4
     79c:	100d883a 	mov	r6,r2
     7a0:	00007ec0 	call	7ec <___vfprintf_internal_r>
     7a4:	dfc00017 	ldw	ra,0(sp)
     7a8:	dec00304 	addi	sp,sp,12
     7ac:	f800283a 	ret

000007b0 <printf>:
     7b0:	defffc04 	addi	sp,sp,-16
     7b4:	dfc00015 	stw	ra,0(sp)
     7b8:	d9400115 	stw	r5,4(sp)
     7bc:	d9800215 	stw	r6,8(sp)
     7c0:	d9c00315 	stw	r7,12(sp)
     7c4:	00800074 	movhi	r2,1
     7c8:	1082c704 	addi	r2,r2,2844
     7cc:	10800017 	ldw	r2,0(r2)
     7d0:	200b883a 	mov	r5,r4
     7d4:	d9800104 	addi	r6,sp,4
     7d8:	11000217 	ldw	r4,8(r2)
     7dc:	0002ac80 	call	2ac8 <__vfprintf_internal>
     7e0:	dfc00017 	ldw	ra,0(sp)
     7e4:	dec00404 	addi	sp,sp,16
     7e8:	f800283a 	ret

000007ec <___vfprintf_internal_r>:
     7ec:	deffb804 	addi	sp,sp,-288
     7f0:	dfc04715 	stw	ra,284(sp)
     7f4:	ddc04515 	stw	r23,276(sp)
     7f8:	dd404315 	stw	r21,268(sp)
     7fc:	d9002d15 	stw	r4,180(sp)
     800:	282f883a 	mov	r23,r5
     804:	302b883a 	mov	r21,r6
     808:	d9c02e15 	stw	r7,184(sp)
     80c:	df004615 	stw	fp,280(sp)
     810:	dd804415 	stw	r22,272(sp)
     814:	dd004215 	stw	r20,264(sp)
     818:	dcc04115 	stw	r19,260(sp)
     81c:	dc804015 	stw	r18,256(sp)
     820:	dc403f15 	stw	r17,252(sp)
     824:	dc003e15 	stw	r16,248(sp)
     828:	00052640 	call	5264 <_localeconv_r>
     82c:	10800017 	ldw	r2,0(r2)
     830:	1009883a 	mov	r4,r2
     834:	d8803415 	stw	r2,208(sp)
     838:	00073480 	call	7348 <strlen>
     83c:	d8803715 	stw	r2,220(sp)
     840:	d8802d17 	ldw	r2,180(sp)
     844:	10000226 	beq	r2,zero,850 <___vfprintf_internal_r+0x64>
     848:	10800e17 	ldw	r2,56(r2)
     84c:	1000fb26 	beq	r2,zero,c3c <___vfprintf_internal_r+0x450>
     850:	b880030b 	ldhu	r2,12(r23)
     854:	10c8000c 	andi	r3,r2,8192
     858:	1800061e 	bne	r3,zero,874 <___vfprintf_internal_r+0x88>
     85c:	b9001917 	ldw	r4,100(r23)
     860:	00f7ffc4 	movi	r3,-8193
     864:	10880014 	ori	r2,r2,8192
     868:	20c6703a 	and	r3,r4,r3
     86c:	b880030d 	sth	r2,12(r23)
     870:	b8c01915 	stw	r3,100(r23)
     874:	10c0020c 	andi	r3,r2,8
     878:	1800c326 	beq	r3,zero,b88 <___vfprintf_internal_r+0x39c>
     87c:	b8c00417 	ldw	r3,16(r23)
     880:	1800c126 	beq	r3,zero,b88 <___vfprintf_internal_r+0x39c>
     884:	1080068c 	andi	r2,r2,26
     888:	00c00284 	movi	r3,10
     88c:	10c0c626 	beq	r2,r3,ba8 <___vfprintf_internal_r+0x3bc>
     890:	d8c00404 	addi	r3,sp,16
     894:	05000074 	movhi	r20,1
     898:	d9001e04 	addi	r4,sp,120
     89c:	a53b5f84 	addi	r20,r20,-4738
     8a0:	d8c01e15 	stw	r3,120(sp)
     8a4:	d8002015 	stw	zero,128(sp)
     8a8:	d8001f15 	stw	zero,124(sp)
     8ac:	d8003315 	stw	zero,204(sp)
     8b0:	d8003615 	stw	zero,216(sp)
     8b4:	d8003815 	stw	zero,224(sp)
     8b8:	1811883a 	mov	r8,r3
     8bc:	d8003915 	stw	zero,228(sp)
     8c0:	d8003a15 	stw	zero,232(sp)
     8c4:	d8002f15 	stw	zero,188(sp)
     8c8:	d9002815 	stw	r4,160(sp)
     8cc:	a8800007 	ldb	r2,0(r21)
     8d0:	10028b26 	beq	r2,zero,1300 <___vfprintf_internal_r+0xb14>
     8d4:	00c00944 	movi	r3,37
     8d8:	a823883a 	mov	r17,r21
     8dc:	10c0021e 	bne	r2,r3,8e8 <___vfprintf_internal_r+0xfc>
     8e0:	00001406 	br	934 <___vfprintf_internal_r+0x148>
     8e4:	10c00326 	beq	r2,r3,8f4 <___vfprintf_internal_r+0x108>
     8e8:	8c400044 	addi	r17,r17,1
     8ec:	88800007 	ldb	r2,0(r17)
     8f0:	103ffc1e 	bne	r2,zero,8e4 <__alt_data_end+0xfffcfba4>
     8f4:	8d61c83a 	sub	r16,r17,r21
     8f8:	80000e26 	beq	r16,zero,934 <___vfprintf_internal_r+0x148>
     8fc:	d8c02017 	ldw	r3,128(sp)
     900:	d8801f17 	ldw	r2,124(sp)
     904:	45400015 	stw	r21,0(r8)
     908:	1c07883a 	add	r3,r3,r16
     90c:	10800044 	addi	r2,r2,1
     910:	d8c02015 	stw	r3,128(sp)
     914:	44000115 	stw	r16,4(r8)
     918:	d8801f15 	stw	r2,124(sp)
     91c:	00c001c4 	movi	r3,7
     920:	1880a916 	blt	r3,r2,bc8 <___vfprintf_internal_r+0x3dc>
     924:	42000204 	addi	r8,r8,8
     928:	d9402f17 	ldw	r5,188(sp)
     92c:	2c0b883a 	add	r5,r5,r16
     930:	d9402f15 	stw	r5,188(sp)
     934:	88800007 	ldb	r2,0(r17)
     938:	1000aa26 	beq	r2,zero,be4 <___vfprintf_internal_r+0x3f8>
     93c:	8d400044 	addi	r21,r17,1
     940:	8c400047 	ldb	r17,1(r17)
     944:	0021883a 	mov	r16,zero
     948:	00bfffc4 	movi	r2,-1
     94c:	0025883a 	mov	r18,zero
     950:	dc002905 	stb	r16,164(sp)
     954:	d8002785 	stb	zero,158(sp)
     958:	d8002b05 	stb	zero,172(sp)
     95c:	d8802a15 	stw	r2,168(sp)
     960:	d8003115 	stw	zero,196(sp)
     964:	04c01604 	movi	r19,88
     968:	05800244 	movi	r22,9
     96c:	9021883a 	mov	r16,r18
     970:	4039883a 	mov	fp,r8
     974:	ad400044 	addi	r21,r21,1
     978:	88bff804 	addi	r2,r17,-32
     97c:	98833236 	bltu	r19,r2,1648 <___vfprintf_internal_r+0xe5c>
     980:	100490ba 	slli	r2,r2,2
     984:	00c00034 	movhi	r3,0
     988:	18c26604 	addi	r3,r3,2456
     98c:	10c5883a 	add	r2,r2,r3
     990:	10800017 	ldw	r2,0(r2)
     994:	1000683a 	jmp	r2
     998:	00001540 	call	154 <alt_irq_handler+0x58>
     99c:	00001648 	cmpgei	zero,zero,89
     9a0:	00001648 	cmpgei	zero,zero,89
     9a4:	00001560 	cmpeqi	zero,zero,85
     9a8:	00001648 	cmpgei	zero,zero,89
     9ac:	00001648 	cmpgei	zero,zero,89
     9b0:	00001648 	cmpgei	zero,zero,89
     9b4:	00001648 	cmpgei	zero,zero,89
     9b8:	00001648 	cmpgei	zero,zero,89
     9bc:	00001648 	cmpgei	zero,zero,89
     9c0:	00000c48 	cmpgei	zero,zero,49
     9c4:	00001450 	cmplti	zero,zero,81
     9c8:	00001648 	cmpgei	zero,zero,89
     9cc:	00000b0c 	andi	zero,zero,44
     9d0:	00000c6c 	andhi	zero,zero,49
     9d4:	00001648 	cmpgei	zero,zero,89
     9d8:	00000cbc 	xorhi	zero,zero,50
     9dc:	00000cc8 	cmpgei	zero,zero,51
     9e0:	00000cc8 	cmpgei	zero,zero,51
     9e4:	00000cc8 	cmpgei	zero,zero,51
     9e8:	00000cc8 	cmpgei	zero,zero,51
     9ec:	00000cc8 	cmpgei	zero,zero,51
     9f0:	00000cc8 	cmpgei	zero,zero,51
     9f4:	00000cc8 	cmpgei	zero,zero,51
     9f8:	00000cc8 	cmpgei	zero,zero,51
     9fc:	00000cc8 	cmpgei	zero,zero,51
     a00:	00001648 	cmpgei	zero,zero,89
     a04:	00001648 	cmpgei	zero,zero,89
     a08:	00001648 	cmpgei	zero,zero,89
     a0c:	00001648 	cmpgei	zero,zero,89
     a10:	00001648 	cmpgei	zero,zero,89
     a14:	00001648 	cmpgei	zero,zero,89
     a18:	00001648 	cmpgei	zero,zero,89
     a1c:	00001648 	cmpgei	zero,zero,89
     a20:	00001648 	cmpgei	zero,zero,89
     a24:	00001648 	cmpgei	zero,zero,89
     a28:	00000d04 	movi	zero,52
     a2c:	00000dcc 	andi	zero,zero,55
     a30:	00001648 	cmpgei	zero,zero,89
     a34:	00000dcc 	andi	zero,zero,55
     a38:	00001648 	cmpgei	zero,zero,89
     a3c:	00001648 	cmpgei	zero,zero,89
     a40:	00001648 	cmpgei	zero,zero,89
     a44:	00001648 	cmpgei	zero,zero,89
     a48:	00000e78 	rdprs	zero,zero,57
     a4c:	00001648 	cmpgei	zero,zero,89
     a50:	00001648 	cmpgei	zero,zero,89
     a54:	00000e84 	movi	zero,58
     a58:	00001648 	cmpgei	zero,zero,89
     a5c:	00001648 	cmpgei	zero,zero,89
     a60:	00001648 	cmpgei	zero,zero,89
     a64:	00001648 	cmpgei	zero,zero,89
     a68:	00001648 	cmpgei	zero,zero,89
     a6c:	00001308 	cmpgei	zero,zero,76
     a70:	00001648 	cmpgei	zero,zero,89
     a74:	00001648 	cmpgei	zero,zero,89
     a78:	00001374 	movhi	zero,77
     a7c:	00001648 	cmpgei	zero,zero,89
     a80:	00001648 	cmpgei	zero,zero,89
     a84:	00001648 	cmpgei	zero,zero,89
     a88:	00001648 	cmpgei	zero,zero,89
     a8c:	00001648 	cmpgei	zero,zero,89
     a90:	00001648 	cmpgei	zero,zero,89
     a94:	00001648 	cmpgei	zero,zero,89
     a98:	00001648 	cmpgei	zero,zero,89
     a9c:	00001648 	cmpgei	zero,zero,89
     aa0:	00001648 	cmpgei	zero,zero,89
     aa4:	000015ec 	andhi	zero,zero,87
     aa8:	0000156c 	andhi	zero,zero,85
     aac:	00000dcc 	andi	zero,zero,55
     ab0:	00000dcc 	andi	zero,zero,55
     ab4:	00000dcc 	andi	zero,zero,55
     ab8:	0000158c 	andi	zero,zero,86
     abc:	0000156c 	andhi	zero,zero,85
     ac0:	00001648 	cmpgei	zero,zero,89
     ac4:	00001648 	cmpgei	zero,zero,89
     ac8:	00001598 	cmpnei	zero,zero,86
     acc:	00001648 	cmpgei	zero,zero,89
     ad0:	000015ac 	andhi	zero,zero,86
     ad4:	00001430 	cmpltui	zero,zero,80
     ad8:	00000b18 	cmpnei	zero,zero,44
     adc:	00001468 	cmpgeui	zero,zero,81
     ae0:	00001648 	cmpgei	zero,zero,89
     ae4:	00001474 	movhi	zero,81
     ae8:	00001648 	cmpgei	zero,zero,89
     aec:	000014d8 	cmpnei	zero,zero,83
     af0:	00001648 	cmpgei	zero,zero,89
     af4:	00001648 	cmpgei	zero,zero,89
     af8:	000014f8 	rdprs	zero,zero,83
     afc:	d8c03117 	ldw	r3,196(sp)
     b00:	d8802e15 	stw	r2,184(sp)
     b04:	00c7c83a 	sub	r3,zero,r3
     b08:	d8c03115 	stw	r3,196(sp)
     b0c:	84000114 	ori	r16,r16,4
     b10:	ac400007 	ldb	r17,0(r21)
     b14:	003f9706 	br	974 <__alt_data_end+0xfffcfc34>
     b18:	00800c04 	movi	r2,48
     b1c:	d8802705 	stb	r2,156(sp)
     b20:	00801e04 	movi	r2,120
     b24:	d8802745 	stb	r2,157(sp)
     b28:	d9002a17 	ldw	r4,168(sp)
     b2c:	d8802e17 	ldw	r2,184(sp)
     b30:	d8002785 	stb	zero,158(sp)
     b34:	e011883a 	mov	r8,fp
     b38:	10c00104 	addi	r3,r2,4
     b3c:	14c00017 	ldw	r19,0(r2)
     b40:	002d883a 	mov	r22,zero
     b44:	80800094 	ori	r2,r16,2
     b48:	2002ca16 	blt	r4,zero,1674 <___vfprintf_internal_r+0xe88>
     b4c:	00bfdfc4 	movi	r2,-129
     b50:	80a4703a 	and	r18,r16,r2
     b54:	d8c02e15 	stw	r3,184(sp)
     b58:	94800094 	ori	r18,r18,2
     b5c:	9802b41e 	bne	r19,zero,1630 <___vfprintf_internal_r+0xe44>
     b60:	01400074 	movhi	r5,1
     b64:	297b5804 	addi	r5,r5,-4768
     b68:	d9403915 	stw	r5,228(sp)
     b6c:	04401e04 	movi	r17,120
     b70:	d8802a17 	ldw	r2,168(sp)
     b74:	0039883a 	mov	fp,zero
     b78:	1001fa26 	beq	r2,zero,1364 <___vfprintf_internal_r+0xb78>
     b7c:	0027883a 	mov	r19,zero
     b80:	002d883a 	mov	r22,zero
     b84:	00021906 	br	13ec <___vfprintf_internal_r+0xc00>
     b88:	d9002d17 	ldw	r4,180(sp)
     b8c:	b80b883a 	mov	r5,r23
     b90:	0002ba00 	call	2ba0 <__swsetup_r>
     b94:	1005dc1e 	bne	r2,zero,2308 <___vfprintf_internal_r+0x1b1c>
     b98:	b880030b 	ldhu	r2,12(r23)
     b9c:	00c00284 	movi	r3,10
     ba0:	1080068c 	andi	r2,r2,26
     ba4:	10ff3a1e 	bne	r2,r3,890 <__alt_data_end+0xfffcfb50>
     ba8:	b880038f 	ldh	r2,14(r23)
     bac:	103f3816 	blt	r2,zero,890 <__alt_data_end+0xfffcfb50>
     bb0:	d9c02e17 	ldw	r7,184(sp)
     bb4:	d9002d17 	ldw	r4,180(sp)
     bb8:	a80d883a 	mov	r6,r21
     bbc:	b80b883a 	mov	r5,r23
     bc0:	0002ae40 	call	2ae4 <__sbprintf>
     bc4:	00001106 	br	c0c <___vfprintf_internal_r+0x420>
     bc8:	d9002d17 	ldw	r4,180(sp)
     bcc:	d9801e04 	addi	r6,sp,120
     bd0:	b80b883a 	mov	r5,r23
     bd4:	00074dc0 	call	74dc <__sprint_r>
     bd8:	1000081e 	bne	r2,zero,bfc <___vfprintf_internal_r+0x410>
     bdc:	da000404 	addi	r8,sp,16
     be0:	003f5106 	br	928 <__alt_data_end+0xfffcfbe8>
     be4:	d8802017 	ldw	r2,128(sp)
     be8:	10000426 	beq	r2,zero,bfc <___vfprintf_internal_r+0x410>
     bec:	d9002d17 	ldw	r4,180(sp)
     bf0:	d9801e04 	addi	r6,sp,120
     bf4:	b80b883a 	mov	r5,r23
     bf8:	00074dc0 	call	74dc <__sprint_r>
     bfc:	b880030b 	ldhu	r2,12(r23)
     c00:	1080100c 	andi	r2,r2,64
     c04:	1005c01e 	bne	r2,zero,2308 <___vfprintf_internal_r+0x1b1c>
     c08:	d8802f17 	ldw	r2,188(sp)
     c0c:	dfc04717 	ldw	ra,284(sp)
     c10:	df004617 	ldw	fp,280(sp)
     c14:	ddc04517 	ldw	r23,276(sp)
     c18:	dd804417 	ldw	r22,272(sp)
     c1c:	dd404317 	ldw	r21,268(sp)
     c20:	dd004217 	ldw	r20,264(sp)
     c24:	dcc04117 	ldw	r19,260(sp)
     c28:	dc804017 	ldw	r18,256(sp)
     c2c:	dc403f17 	ldw	r17,252(sp)
     c30:	dc003e17 	ldw	r16,248(sp)
     c34:	dec04804 	addi	sp,sp,288
     c38:	f800283a 	ret
     c3c:	d9002d17 	ldw	r4,180(sp)
     c40:	0004bac0 	call	4bac <__sinit>
     c44:	003f0206 	br	850 <__alt_data_end+0xfffcfb10>
     c48:	d9002e17 	ldw	r4,184(sp)
     c4c:	d9402e17 	ldw	r5,184(sp)
     c50:	21000017 	ldw	r4,0(r4)
     c54:	28800104 	addi	r2,r5,4
     c58:	d9003115 	stw	r4,196(sp)
     c5c:	203fa716 	blt	r4,zero,afc <__alt_data_end+0xfffcfdbc>
     c60:	d8802e15 	stw	r2,184(sp)
     c64:	ac400007 	ldb	r17,0(r21)
     c68:	003f4206 	br	974 <__alt_data_end+0xfffcfc34>
     c6c:	ac400007 	ldb	r17,0(r21)
     c70:	01000a84 	movi	r4,42
     c74:	a8c00044 	addi	r3,r21,1
     c78:	89075826 	beq	r17,r4,29dc <___vfprintf_internal_r+0x21f0>
     c7c:	8cbff404 	addi	r18,r17,-48
     c80:	b486ae36 	bltu	r22,r18,273c <___vfprintf_internal_r+0x1f50>
     c84:	0009883a 	mov	r4,zero
     c88:	1823883a 	mov	r17,r3
     c8c:	01400284 	movi	r5,10
     c90:	000ab6c0 	call	ab6c <__mulsi3>
     c94:	88c00007 	ldb	r3,0(r17)
     c98:	1489883a 	add	r4,r2,r18
     c9c:	8d400044 	addi	r21,r17,1
     ca0:	1cbff404 	addi	r18,r3,-48
     ca4:	a823883a 	mov	r17,r21
     ca8:	b4bff82e 	bgeu	r22,r18,c8c <__alt_data_end+0xfffcff4c>
     cac:	1823883a 	mov	r17,r3
     cb0:	2005f616 	blt	r4,zero,248c <___vfprintf_internal_r+0x1ca0>
     cb4:	d9002a15 	stw	r4,168(sp)
     cb8:	003f2f06 	br	978 <__alt_data_end+0xfffcfc38>
     cbc:	84002014 	ori	r16,r16,128
     cc0:	ac400007 	ldb	r17,0(r21)
     cc4:	003f2b06 	br	974 <__alt_data_end+0xfffcfc34>
     cc8:	8cbff404 	addi	r18,r17,-48
     ccc:	d8003115 	stw	zero,196(sp)
     cd0:	0009883a 	mov	r4,zero
     cd4:	a823883a 	mov	r17,r21
     cd8:	01400284 	movi	r5,10
     cdc:	000ab6c0 	call	ab6c <__mulsi3>
     ce0:	88c00007 	ldb	r3,0(r17)
     ce4:	9089883a 	add	r4,r18,r2
     ce8:	ad400044 	addi	r21,r21,1
     cec:	1cbff404 	addi	r18,r3,-48
     cf0:	a823883a 	mov	r17,r21
     cf4:	b4bff82e 	bgeu	r22,r18,cd8 <__alt_data_end+0xfffcff98>
     cf8:	1823883a 	mov	r17,r3
     cfc:	d9003115 	stw	r4,196(sp)
     d00:	003f1d06 	br	978 <__alt_data_end+0xfffcfc38>
     d04:	8025883a 	mov	r18,r16
     d08:	dc002903 	ldbu	r16,164(sp)
     d0c:	e011883a 	mov	r8,fp
     d10:	84003fcc 	andi	r16,r16,255
     d14:	8007531e 	bne	r16,zero,2a64 <___vfprintf_internal_r+0x2278>
     d18:	94800414 	ori	r18,r18,16
     d1c:	9080080c 	andi	r2,r18,32
     d20:	1003a326 	beq	r2,zero,1bb0 <___vfprintf_internal_r+0x13c4>
     d24:	d9002e17 	ldw	r4,184(sp)
     d28:	20800117 	ldw	r2,4(r4)
     d2c:	24c00017 	ldw	r19,0(r4)
     d30:	21000204 	addi	r4,r4,8
     d34:	d9002e15 	stw	r4,184(sp)
     d38:	102d883a 	mov	r22,r2
     d3c:	10047316 	blt	r2,zero,1f0c <___vfprintf_internal_r+0x1720>
     d40:	d9002a17 	ldw	r4,168(sp)
     d44:	df002783 	ldbu	fp,158(sp)
     d48:	2003e416 	blt	r4,zero,1cdc <___vfprintf_internal_r+0x14f0>
     d4c:	00ffdfc4 	movi	r3,-129
     d50:	9d84b03a 	or	r2,r19,r22
     d54:	90e4703a 	and	r18,r18,r3
     d58:	10018026 	beq	r2,zero,135c <___vfprintf_internal_r+0xb70>
     d5c:	b003ab26 	beq	r22,zero,1c0c <___vfprintf_internal_r+0x1420>
     d60:	dc402915 	stw	r17,164(sp)
     d64:	dc001e04 	addi	r16,sp,120
     d68:	b023883a 	mov	r17,r22
     d6c:	402d883a 	mov	r22,r8
     d70:	9809883a 	mov	r4,r19
     d74:	880b883a 	mov	r5,r17
     d78:	01800284 	movi	r6,10
     d7c:	000f883a 	mov	r7,zero
     d80:	000a5a80 	call	a5a8 <__umoddi3>
     d84:	10800c04 	addi	r2,r2,48
     d88:	843fffc4 	addi	r16,r16,-1
     d8c:	9809883a 	mov	r4,r19
     d90:	880b883a 	mov	r5,r17
     d94:	80800005 	stb	r2,0(r16)
     d98:	01800284 	movi	r6,10
     d9c:	000f883a 	mov	r7,zero
     da0:	0009fac0 	call	9fac <__udivdi3>
     da4:	1027883a 	mov	r19,r2
     da8:	10c4b03a 	or	r2,r2,r3
     dac:	1823883a 	mov	r17,r3
     db0:	103fef1e 	bne	r2,zero,d70 <__alt_data_end+0xfffd0030>
     db4:	d8c02817 	ldw	r3,160(sp)
     db8:	dc402917 	ldw	r17,164(sp)
     dbc:	b011883a 	mov	r8,r22
     dc0:	1c07c83a 	sub	r3,r3,r16
     dc4:	d8c02b15 	stw	r3,172(sp)
     dc8:	00005f06 	br	f48 <___vfprintf_internal_r+0x75c>
     dcc:	8025883a 	mov	r18,r16
     dd0:	dc002903 	ldbu	r16,164(sp)
     dd4:	e011883a 	mov	r8,fp
     dd8:	84003fcc 	andi	r16,r16,255
     ddc:	80071e1e 	bne	r16,zero,2a58 <___vfprintf_internal_r+0x226c>
     de0:	9080020c 	andi	r2,r18,8
     de4:	1004af26 	beq	r2,zero,20a4 <___vfprintf_internal_r+0x18b8>
     de8:	d9002e17 	ldw	r4,184(sp)
     dec:	d9402e17 	ldw	r5,184(sp)
     df0:	d8802e17 	ldw	r2,184(sp)
     df4:	21000017 	ldw	r4,0(r4)
     df8:	29400117 	ldw	r5,4(r5)
     dfc:	10800204 	addi	r2,r2,8
     e00:	d9003615 	stw	r4,216(sp)
     e04:	d9403815 	stw	r5,224(sp)
     e08:	d8802e15 	stw	r2,184(sp)
     e0c:	d9003617 	ldw	r4,216(sp)
     e10:	d9403817 	ldw	r5,224(sp)
     e14:	da003d15 	stw	r8,244(sp)
     e18:	04000044 	movi	r16,1
     e1c:	00070680 	call	7068 <__fpclassifyd>
     e20:	da003d17 	ldw	r8,244(sp)
     e24:	1404441e 	bne	r2,r16,1f38 <___vfprintf_internal_r+0x174c>
     e28:	d9003617 	ldw	r4,216(sp)
     e2c:	d9403817 	ldw	r5,224(sp)
     e30:	000d883a 	mov	r6,zero
     e34:	000f883a 	mov	r7,zero
     e38:	000bf740 	call	bf74 <__ledf2>
     e3c:	da003d17 	ldw	r8,244(sp)
     e40:	1005e316 	blt	r2,zero,25d0 <___vfprintf_internal_r+0x1de4>
     e44:	df002783 	ldbu	fp,158(sp)
     e48:	008011c4 	movi	r2,71
     e4c:	1445580e 	bge	r2,r17,23b0 <___vfprintf_internal_r+0x1bc4>
     e50:	04000074 	movhi	r16,1
     e54:	843b5004 	addi	r16,r16,-4800
     e58:	00c000c4 	movi	r3,3
     e5c:	00bfdfc4 	movi	r2,-129
     e60:	d8c02915 	stw	r3,164(sp)
     e64:	90a4703a 	and	r18,r18,r2
     e68:	d8c02b15 	stw	r3,172(sp)
     e6c:	d8002a15 	stw	zero,168(sp)
     e70:	d8003215 	stw	zero,200(sp)
     e74:	00003a06 	br	f60 <___vfprintf_internal_r+0x774>
     e78:	84000214 	ori	r16,r16,8
     e7c:	ac400007 	ldb	r17,0(r21)
     e80:	003ebc06 	br	974 <__alt_data_end+0xfffcfc34>
     e84:	8025883a 	mov	r18,r16
     e88:	dc002903 	ldbu	r16,164(sp)
     e8c:	e011883a 	mov	r8,fp
     e90:	84003fcc 	andi	r16,r16,255
     e94:	8007001e 	bne	r16,zero,2a98 <___vfprintf_internal_r+0x22ac>
     e98:	94800414 	ori	r18,r18,16
     e9c:	9080080c 	andi	r2,r18,32
     ea0:	1002fa26 	beq	r2,zero,1a8c <___vfprintf_internal_r+0x12a0>
     ea4:	d9002e17 	ldw	r4,184(sp)
     ea8:	d9402a17 	ldw	r5,168(sp)
     eac:	d8002785 	stb	zero,158(sp)
     eb0:	20800204 	addi	r2,r4,8
     eb4:	24c00017 	ldw	r19,0(r4)
     eb8:	25800117 	ldw	r22,4(r4)
     ebc:	2804b116 	blt	r5,zero,2184 <___vfprintf_internal_r+0x1998>
     ec0:	013fdfc4 	movi	r4,-129
     ec4:	9d86b03a 	or	r3,r19,r22
     ec8:	d8802e15 	stw	r2,184(sp)
     ecc:	9124703a 	and	r18,r18,r4
     ed0:	1802fb1e 	bne	r3,zero,1ac0 <___vfprintf_internal_r+0x12d4>
     ed4:	d8c02a17 	ldw	r3,168(sp)
     ed8:	0039883a 	mov	fp,zero
     edc:	1805e526 	beq	r3,zero,2674 <___vfprintf_internal_r+0x1e88>
     ee0:	0027883a 	mov	r19,zero
     ee4:	002d883a 	mov	r22,zero
     ee8:	dc001e04 	addi	r16,sp,120
     eec:	9806d0fa 	srli	r3,r19,3
     ef0:	b008977a 	slli	r4,r22,29
     ef4:	b02cd0fa 	srli	r22,r22,3
     ef8:	9cc001cc 	andi	r19,r19,7
     efc:	98800c04 	addi	r2,r19,48
     f00:	843fffc4 	addi	r16,r16,-1
     f04:	20e6b03a 	or	r19,r4,r3
     f08:	80800005 	stb	r2,0(r16)
     f0c:	9d86b03a 	or	r3,r19,r22
     f10:	183ff61e 	bne	r3,zero,eec <__alt_data_end+0xfffd01ac>
     f14:	90c0004c 	andi	r3,r18,1
     f18:	18014126 	beq	r3,zero,1420 <___vfprintf_internal_r+0xc34>
     f1c:	10803fcc 	andi	r2,r2,255
     f20:	1080201c 	xori	r2,r2,128
     f24:	10bfe004 	addi	r2,r2,-128
     f28:	00c00c04 	movi	r3,48
     f2c:	10c13c26 	beq	r2,r3,1420 <___vfprintf_internal_r+0xc34>
     f30:	80ffffc5 	stb	r3,-1(r16)
     f34:	d8c02817 	ldw	r3,160(sp)
     f38:	80bfffc4 	addi	r2,r16,-1
     f3c:	1021883a 	mov	r16,r2
     f40:	1887c83a 	sub	r3,r3,r2
     f44:	d8c02b15 	stw	r3,172(sp)
     f48:	d8802b17 	ldw	r2,172(sp)
     f4c:	d9002a17 	ldw	r4,168(sp)
     f50:	1100010e 	bge	r2,r4,f58 <___vfprintf_internal_r+0x76c>
     f54:	2005883a 	mov	r2,r4
     f58:	d8802915 	stw	r2,164(sp)
     f5c:	d8003215 	stw	zero,200(sp)
     f60:	e7003fcc 	andi	fp,fp,255
     f64:	e700201c 	xori	fp,fp,128
     f68:	e73fe004 	addi	fp,fp,-128
     f6c:	e0000326 	beq	fp,zero,f7c <___vfprintf_internal_r+0x790>
     f70:	d8c02917 	ldw	r3,164(sp)
     f74:	18c00044 	addi	r3,r3,1
     f78:	d8c02915 	stw	r3,164(sp)
     f7c:	90c0008c 	andi	r3,r18,2
     f80:	d8c02c15 	stw	r3,176(sp)
     f84:	18000326 	beq	r3,zero,f94 <___vfprintf_internal_r+0x7a8>
     f88:	d8c02917 	ldw	r3,164(sp)
     f8c:	18c00084 	addi	r3,r3,2
     f90:	d8c02915 	stw	r3,164(sp)
     f94:	90c0210c 	andi	r3,r18,132
     f98:	d8c03015 	stw	r3,192(sp)
     f9c:	1801c51e 	bne	r3,zero,16b4 <___vfprintf_internal_r+0xec8>
     fa0:	d9003117 	ldw	r4,196(sp)
     fa4:	d8c02917 	ldw	r3,164(sp)
     fa8:	20e7c83a 	sub	r19,r4,r3
     fac:	04c1c10e 	bge	zero,r19,16b4 <___vfprintf_internal_r+0xec8>
     fb0:	02400404 	movi	r9,16
     fb4:	d8c02017 	ldw	r3,128(sp)
     fb8:	d8801f17 	ldw	r2,124(sp)
     fbc:	4cc52f0e 	bge	r9,r19,247c <___vfprintf_internal_r+0x1c90>
     fc0:	01400074 	movhi	r5,1
     fc4:	297b6384 	addi	r5,r5,-4722
     fc8:	dc403b15 	stw	r17,236(sp)
     fcc:	d9403515 	stw	r5,212(sp)
     fd0:	9823883a 	mov	r17,r19
     fd4:	482d883a 	mov	r22,r9
     fd8:	9027883a 	mov	r19,r18
     fdc:	070001c4 	movi	fp,7
     fe0:	8025883a 	mov	r18,r16
     fe4:	dc002d17 	ldw	r16,180(sp)
     fe8:	00000306 	br	ff8 <___vfprintf_internal_r+0x80c>
     fec:	8c7ffc04 	addi	r17,r17,-16
     ff0:	42000204 	addi	r8,r8,8
     ff4:	b440130e 	bge	r22,r17,1044 <___vfprintf_internal_r+0x858>
     ff8:	01000074 	movhi	r4,1
     ffc:	18c00404 	addi	r3,r3,16
    1000:	10800044 	addi	r2,r2,1
    1004:	213b6384 	addi	r4,r4,-4722
    1008:	41000015 	stw	r4,0(r8)
    100c:	45800115 	stw	r22,4(r8)
    1010:	d8c02015 	stw	r3,128(sp)
    1014:	d8801f15 	stw	r2,124(sp)
    1018:	e0bff40e 	bge	fp,r2,fec <__alt_data_end+0xfffd02ac>
    101c:	d9801e04 	addi	r6,sp,120
    1020:	b80b883a 	mov	r5,r23
    1024:	8009883a 	mov	r4,r16
    1028:	00074dc0 	call	74dc <__sprint_r>
    102c:	103ef31e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1030:	8c7ffc04 	addi	r17,r17,-16
    1034:	d8c02017 	ldw	r3,128(sp)
    1038:	d8801f17 	ldw	r2,124(sp)
    103c:	da000404 	addi	r8,sp,16
    1040:	b47fed16 	blt	r22,r17,ff8 <__alt_data_end+0xfffd02b8>
    1044:	9021883a 	mov	r16,r18
    1048:	9825883a 	mov	r18,r19
    104c:	8827883a 	mov	r19,r17
    1050:	dc403b17 	ldw	r17,236(sp)
    1054:	d9403517 	ldw	r5,212(sp)
    1058:	98c7883a 	add	r3,r19,r3
    105c:	10800044 	addi	r2,r2,1
    1060:	41400015 	stw	r5,0(r8)
    1064:	44c00115 	stw	r19,4(r8)
    1068:	d8c02015 	stw	r3,128(sp)
    106c:	d8801f15 	stw	r2,124(sp)
    1070:	010001c4 	movi	r4,7
    1074:	2082c516 	blt	r4,r2,1b8c <___vfprintf_internal_r+0x13a0>
    1078:	df002787 	ldb	fp,158(sp)
    107c:	42000204 	addi	r8,r8,8
    1080:	e0000c26 	beq	fp,zero,10b4 <___vfprintf_internal_r+0x8c8>
    1084:	d8801f17 	ldw	r2,124(sp)
    1088:	d9002784 	addi	r4,sp,158
    108c:	18c00044 	addi	r3,r3,1
    1090:	10800044 	addi	r2,r2,1
    1094:	41000015 	stw	r4,0(r8)
    1098:	01000044 	movi	r4,1
    109c:	41000115 	stw	r4,4(r8)
    10a0:	d8c02015 	stw	r3,128(sp)
    10a4:	d8801f15 	stw	r2,124(sp)
    10a8:	010001c4 	movi	r4,7
    10ac:	20825e16 	blt	r4,r2,1a28 <___vfprintf_internal_r+0x123c>
    10b0:	42000204 	addi	r8,r8,8
    10b4:	d8802c17 	ldw	r2,176(sp)
    10b8:	10000c26 	beq	r2,zero,10ec <___vfprintf_internal_r+0x900>
    10bc:	d8801f17 	ldw	r2,124(sp)
    10c0:	d9002704 	addi	r4,sp,156
    10c4:	18c00084 	addi	r3,r3,2
    10c8:	10800044 	addi	r2,r2,1
    10cc:	41000015 	stw	r4,0(r8)
    10d0:	01000084 	movi	r4,2
    10d4:	41000115 	stw	r4,4(r8)
    10d8:	d8c02015 	stw	r3,128(sp)
    10dc:	d8801f15 	stw	r2,124(sp)
    10e0:	010001c4 	movi	r4,7
    10e4:	20825816 	blt	r4,r2,1a48 <___vfprintf_internal_r+0x125c>
    10e8:	42000204 	addi	r8,r8,8
    10ec:	d9003017 	ldw	r4,192(sp)
    10f0:	00802004 	movi	r2,128
    10f4:	2081bb26 	beq	r4,r2,17e4 <___vfprintf_internal_r+0xff8>
    10f8:	d9402a17 	ldw	r5,168(sp)
    10fc:	d8802b17 	ldw	r2,172(sp)
    1100:	28adc83a 	sub	r22,r5,r2
    1104:	0580310e 	bge	zero,r22,11cc <___vfprintf_internal_r+0x9e0>
    1108:	07000404 	movi	fp,16
    110c:	d8801f17 	ldw	r2,124(sp)
    1110:	e584360e 	bge	fp,r22,21ec <___vfprintf_internal_r+0x1a00>
    1114:	01400074 	movhi	r5,1
    1118:	297b5f84 	addi	r5,r5,-4738
    111c:	dc402a15 	stw	r17,168(sp)
    1120:	d9402c15 	stw	r5,176(sp)
    1124:	b023883a 	mov	r17,r22
    1128:	04c001c4 	movi	r19,7
    112c:	a82d883a 	mov	r22,r21
    1130:	902b883a 	mov	r21,r18
    1134:	8025883a 	mov	r18,r16
    1138:	dc002d17 	ldw	r16,180(sp)
    113c:	00000306 	br	114c <___vfprintf_internal_r+0x960>
    1140:	8c7ffc04 	addi	r17,r17,-16
    1144:	42000204 	addi	r8,r8,8
    1148:	e440110e 	bge	fp,r17,1190 <___vfprintf_internal_r+0x9a4>
    114c:	18c00404 	addi	r3,r3,16
    1150:	10800044 	addi	r2,r2,1
    1154:	45000015 	stw	r20,0(r8)
    1158:	47000115 	stw	fp,4(r8)
    115c:	d8c02015 	stw	r3,128(sp)
    1160:	d8801f15 	stw	r2,124(sp)
    1164:	98bff60e 	bge	r19,r2,1140 <__alt_data_end+0xfffd0400>
    1168:	d9801e04 	addi	r6,sp,120
    116c:	b80b883a 	mov	r5,r23
    1170:	8009883a 	mov	r4,r16
    1174:	00074dc0 	call	74dc <__sprint_r>
    1178:	103ea01e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    117c:	8c7ffc04 	addi	r17,r17,-16
    1180:	d8c02017 	ldw	r3,128(sp)
    1184:	d8801f17 	ldw	r2,124(sp)
    1188:	da000404 	addi	r8,sp,16
    118c:	e47fef16 	blt	fp,r17,114c <__alt_data_end+0xfffd040c>
    1190:	9021883a 	mov	r16,r18
    1194:	a825883a 	mov	r18,r21
    1198:	b02b883a 	mov	r21,r22
    119c:	882d883a 	mov	r22,r17
    11a0:	dc402a17 	ldw	r17,168(sp)
    11a4:	d9002c17 	ldw	r4,176(sp)
    11a8:	1d87883a 	add	r3,r3,r22
    11ac:	10800044 	addi	r2,r2,1
    11b0:	41000015 	stw	r4,0(r8)
    11b4:	45800115 	stw	r22,4(r8)
    11b8:	d8c02015 	stw	r3,128(sp)
    11bc:	d8801f15 	stw	r2,124(sp)
    11c0:	010001c4 	movi	r4,7
    11c4:	20821016 	blt	r4,r2,1a08 <___vfprintf_internal_r+0x121c>
    11c8:	42000204 	addi	r8,r8,8
    11cc:	9080400c 	andi	r2,r18,256
    11d0:	10013a1e 	bne	r2,zero,16bc <___vfprintf_internal_r+0xed0>
    11d4:	d9402b17 	ldw	r5,172(sp)
    11d8:	d8801f17 	ldw	r2,124(sp)
    11dc:	44000015 	stw	r16,0(r8)
    11e0:	1947883a 	add	r3,r3,r5
    11e4:	10800044 	addi	r2,r2,1
    11e8:	41400115 	stw	r5,4(r8)
    11ec:	d8c02015 	stw	r3,128(sp)
    11f0:	d8801f15 	stw	r2,124(sp)
    11f4:	010001c4 	movi	r4,7
    11f8:	2081f516 	blt	r4,r2,19d0 <___vfprintf_internal_r+0x11e4>
    11fc:	42000204 	addi	r8,r8,8
    1200:	9480010c 	andi	r18,r18,4
    1204:	90003226 	beq	r18,zero,12d0 <___vfprintf_internal_r+0xae4>
    1208:	d9403117 	ldw	r5,196(sp)
    120c:	d8802917 	ldw	r2,164(sp)
    1210:	28a1c83a 	sub	r16,r5,r2
    1214:	04002e0e 	bge	zero,r16,12d0 <___vfprintf_internal_r+0xae4>
    1218:	04400404 	movi	r17,16
    121c:	d8801f17 	ldw	r2,124(sp)
    1220:	8c04c40e 	bge	r17,r16,2534 <___vfprintf_internal_r+0x1d48>
    1224:	01400074 	movhi	r5,1
    1228:	297b6384 	addi	r5,r5,-4722
    122c:	d9403515 	stw	r5,212(sp)
    1230:	048001c4 	movi	r18,7
    1234:	dcc02d17 	ldw	r19,180(sp)
    1238:	00000306 	br	1248 <___vfprintf_internal_r+0xa5c>
    123c:	843ffc04 	addi	r16,r16,-16
    1240:	42000204 	addi	r8,r8,8
    1244:	8c00130e 	bge	r17,r16,1294 <___vfprintf_internal_r+0xaa8>
    1248:	01000074 	movhi	r4,1
    124c:	18c00404 	addi	r3,r3,16
    1250:	10800044 	addi	r2,r2,1
    1254:	213b6384 	addi	r4,r4,-4722
    1258:	41000015 	stw	r4,0(r8)
    125c:	44400115 	stw	r17,4(r8)
    1260:	d8c02015 	stw	r3,128(sp)
    1264:	d8801f15 	stw	r2,124(sp)
    1268:	90bff40e 	bge	r18,r2,123c <__alt_data_end+0xfffd04fc>
    126c:	d9801e04 	addi	r6,sp,120
    1270:	b80b883a 	mov	r5,r23
    1274:	9809883a 	mov	r4,r19
    1278:	00074dc0 	call	74dc <__sprint_r>
    127c:	103e5f1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1280:	843ffc04 	addi	r16,r16,-16
    1284:	d8c02017 	ldw	r3,128(sp)
    1288:	d8801f17 	ldw	r2,124(sp)
    128c:	da000404 	addi	r8,sp,16
    1290:	8c3fed16 	blt	r17,r16,1248 <__alt_data_end+0xfffd0508>
    1294:	d9403517 	ldw	r5,212(sp)
    1298:	1c07883a 	add	r3,r3,r16
    129c:	10800044 	addi	r2,r2,1
    12a0:	41400015 	stw	r5,0(r8)
    12a4:	44000115 	stw	r16,4(r8)
    12a8:	d8c02015 	stw	r3,128(sp)
    12ac:	d8801f15 	stw	r2,124(sp)
    12b0:	010001c4 	movi	r4,7
    12b4:	2080060e 	bge	r4,r2,12d0 <___vfprintf_internal_r+0xae4>
    12b8:	d9002d17 	ldw	r4,180(sp)
    12bc:	d9801e04 	addi	r6,sp,120
    12c0:	b80b883a 	mov	r5,r23
    12c4:	00074dc0 	call	74dc <__sprint_r>
    12c8:	103e4c1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    12cc:	d8c02017 	ldw	r3,128(sp)
    12d0:	d8803117 	ldw	r2,196(sp)
    12d4:	d9002917 	ldw	r4,164(sp)
    12d8:	1100010e 	bge	r2,r4,12e0 <___vfprintf_internal_r+0xaf4>
    12dc:	2005883a 	mov	r2,r4
    12e0:	d9402f17 	ldw	r5,188(sp)
    12e4:	288b883a 	add	r5,r5,r2
    12e8:	d9402f15 	stw	r5,188(sp)
    12ec:	1801c01e 	bne	r3,zero,19f0 <___vfprintf_internal_r+0x1204>
    12f0:	a8800007 	ldb	r2,0(r21)
    12f4:	d8001f15 	stw	zero,124(sp)
    12f8:	da000404 	addi	r8,sp,16
    12fc:	103d751e 	bne	r2,zero,8d4 <__alt_data_end+0xfffcfb94>
    1300:	a823883a 	mov	r17,r21
    1304:	003d8b06 	br	934 <__alt_data_end+0xfffcfbf4>
    1308:	8025883a 	mov	r18,r16
    130c:	dc002903 	ldbu	r16,164(sp)
    1310:	e011883a 	mov	r8,fp
    1314:	84003fcc 	andi	r16,r16,255
    1318:	8005e51e 	bne	r16,zero,2ab0 <___vfprintf_internal_r+0x22c4>
    131c:	94800414 	ori	r18,r18,16
    1320:	9080080c 	andi	r2,r18,32
    1324:	10022b26 	beq	r2,zero,1bd4 <___vfprintf_internal_r+0x13e8>
    1328:	d9002e17 	ldw	r4,184(sp)
    132c:	d9402a17 	ldw	r5,168(sp)
    1330:	d8002785 	stb	zero,158(sp)
    1334:	20c00204 	addi	r3,r4,8
    1338:	24c00017 	ldw	r19,0(r4)
    133c:	25800117 	ldw	r22,4(r4)
    1340:	28042e16 	blt	r5,zero,23fc <___vfprintf_internal_r+0x1c10>
    1344:	013fdfc4 	movi	r4,-129
    1348:	9d84b03a 	or	r2,r19,r22
    134c:	d8c02e15 	stw	r3,184(sp)
    1350:	9124703a 	and	r18,r18,r4
    1354:	0039883a 	mov	fp,zero
    1358:	103e801e 	bne	r2,zero,d5c <__alt_data_end+0xfffd001c>
    135c:	d9002a17 	ldw	r4,168(sp)
    1360:	2002e01e 	bne	r4,zero,1ee4 <___vfprintf_internal_r+0x16f8>
    1364:	d8002a15 	stw	zero,168(sp)
    1368:	d8002b15 	stw	zero,172(sp)
    136c:	dc001e04 	addi	r16,sp,120
    1370:	003ef506 	br	f48 <__alt_data_end+0xfffd0208>
    1374:	8025883a 	mov	r18,r16
    1378:	dc002903 	ldbu	r16,164(sp)
    137c:	e011883a 	mov	r8,fp
    1380:	84003fcc 	andi	r16,r16,255
    1384:	8005ba1e 	bne	r16,zero,2a70 <___vfprintf_internal_r+0x2284>
    1388:	01000074 	movhi	r4,1
    138c:	213b5304 	addi	r4,r4,-4788
    1390:	d9003915 	stw	r4,228(sp)
    1394:	9080080c 	andi	r2,r18,32
    1398:	10006126 	beq	r2,zero,1520 <___vfprintf_internal_r+0xd34>
    139c:	d9402e17 	ldw	r5,184(sp)
    13a0:	2cc00017 	ldw	r19,0(r5)
    13a4:	2d800117 	ldw	r22,4(r5)
    13a8:	29400204 	addi	r5,r5,8
    13ac:	d9402e15 	stw	r5,184(sp)
    13b0:	9080004c 	andi	r2,r18,1
    13b4:	1001ac26 	beq	r2,zero,1a68 <___vfprintf_internal_r+0x127c>
    13b8:	9d84b03a 	or	r2,r19,r22
    13bc:	10038526 	beq	r2,zero,21d4 <___vfprintf_internal_r+0x19e8>
    13c0:	d8c02a17 	ldw	r3,168(sp)
    13c4:	00800c04 	movi	r2,48
    13c8:	d8802705 	stb	r2,156(sp)
    13cc:	dc402745 	stb	r17,157(sp)
    13d0:	d8002785 	stb	zero,158(sp)
    13d4:	90800094 	ori	r2,r18,2
    13d8:	18047916 	blt	r3,zero,25c0 <___vfprintf_internal_r+0x1dd4>
    13dc:	00bfdfc4 	movi	r2,-129
    13e0:	90a4703a 	and	r18,r18,r2
    13e4:	94800094 	ori	r18,r18,2
    13e8:	0039883a 	mov	fp,zero
    13ec:	d9003917 	ldw	r4,228(sp)
    13f0:	dc001e04 	addi	r16,sp,120
    13f4:	988003cc 	andi	r2,r19,15
    13f8:	b006973a 	slli	r3,r22,28
    13fc:	2085883a 	add	r2,r4,r2
    1400:	9826d13a 	srli	r19,r19,4
    1404:	10800003 	ldbu	r2,0(r2)
    1408:	b02cd13a 	srli	r22,r22,4
    140c:	843fffc4 	addi	r16,r16,-1
    1410:	1ce6b03a 	or	r19,r3,r19
    1414:	80800005 	stb	r2,0(r16)
    1418:	9d84b03a 	or	r2,r19,r22
    141c:	103ff51e 	bne	r2,zero,13f4 <__alt_data_end+0xfffd06b4>
    1420:	d8c02817 	ldw	r3,160(sp)
    1424:	1c07c83a 	sub	r3,r3,r16
    1428:	d8c02b15 	stw	r3,172(sp)
    142c:	003ec606 	br	f48 <__alt_data_end+0xfffd0208>
    1430:	8025883a 	mov	r18,r16
    1434:	dc002903 	ldbu	r16,164(sp)
    1438:	e011883a 	mov	r8,fp
    143c:	84003fcc 	andi	r16,r16,255
    1440:	803e9626 	beq	r16,zero,e9c <__alt_data_end+0xfffd015c>
    1444:	d8c02b03 	ldbu	r3,172(sp)
    1448:	d8c02785 	stb	r3,158(sp)
    144c:	003e9306 	br	e9c <__alt_data_end+0xfffd015c>
    1450:	00c00044 	movi	r3,1
    1454:	d8c02905 	stb	r3,164(sp)
    1458:	00c00ac4 	movi	r3,43
    145c:	d8c02b05 	stb	r3,172(sp)
    1460:	ac400007 	ldb	r17,0(r21)
    1464:	003d4306 	br	974 <__alt_data_end+0xfffcfc34>
    1468:	84000814 	ori	r16,r16,32
    146c:	ac400007 	ldb	r17,0(r21)
    1470:	003d4006 	br	974 <__alt_data_end+0xfffcfc34>
    1474:	d8802e17 	ldw	r2,184(sp)
    1478:	8025883a 	mov	r18,r16
    147c:	d8002785 	stb	zero,158(sp)
    1480:	14000017 	ldw	r16,0(r2)
    1484:	e011883a 	mov	r8,fp
    1488:	14c00104 	addi	r19,r2,4
    148c:	80042d26 	beq	r16,zero,2544 <___vfprintf_internal_r+0x1d58>
    1490:	d8c02a17 	ldw	r3,168(sp)
    1494:	1803e416 	blt	r3,zero,2428 <___vfprintf_internal_r+0x1c3c>
    1498:	180d883a 	mov	r6,r3
    149c:	000b883a 	mov	r5,zero
    14a0:	8009883a 	mov	r4,r16
    14a4:	df003d15 	stw	fp,244(sp)
    14a8:	0005c5c0 	call	5c5c <memchr>
    14ac:	da003d17 	ldw	r8,244(sp)
    14b0:	10046826 	beq	r2,zero,2654 <___vfprintf_internal_r+0x1e68>
    14b4:	1405c83a 	sub	r2,r2,r16
    14b8:	d8802b15 	stw	r2,172(sp)
    14bc:	1003e016 	blt	r2,zero,2440 <___vfprintf_internal_r+0x1c54>
    14c0:	df002783 	ldbu	fp,158(sp)
    14c4:	d8802915 	stw	r2,164(sp)
    14c8:	dcc02e15 	stw	r19,184(sp)
    14cc:	d8002a15 	stw	zero,168(sp)
    14d0:	d8003215 	stw	zero,200(sp)
    14d4:	003ea206 	br	f60 <__alt_data_end+0xfffd0220>
    14d8:	8025883a 	mov	r18,r16
    14dc:	dc002903 	ldbu	r16,164(sp)
    14e0:	e011883a 	mov	r8,fp
    14e4:	84003fcc 	andi	r16,r16,255
    14e8:	803f8d26 	beq	r16,zero,1320 <__alt_data_end+0xfffd05e0>
    14ec:	d8c02b03 	ldbu	r3,172(sp)
    14f0:	d8c02785 	stb	r3,158(sp)
    14f4:	003f8a06 	br	1320 <__alt_data_end+0xfffd05e0>
    14f8:	8025883a 	mov	r18,r16
    14fc:	dc002903 	ldbu	r16,164(sp)
    1500:	e011883a 	mov	r8,fp
    1504:	84003fcc 	andi	r16,r16,255
    1508:	8005661e 	bne	r16,zero,2aa4 <___vfprintf_internal_r+0x22b8>
    150c:	01000074 	movhi	r4,1
    1510:	213b5804 	addi	r4,r4,-4768
    1514:	d9003915 	stw	r4,228(sp)
    1518:	9080080c 	andi	r2,r18,32
    151c:	103f9f1e 	bne	r2,zero,139c <__alt_data_end+0xfffd065c>
    1520:	9080040c 	andi	r2,r18,16
    1524:	1002eb26 	beq	r2,zero,20d4 <___vfprintf_internal_r+0x18e8>
    1528:	d8802e17 	ldw	r2,184(sp)
    152c:	002d883a 	mov	r22,zero
    1530:	14c00017 	ldw	r19,0(r2)
    1534:	10800104 	addi	r2,r2,4
    1538:	d8802e15 	stw	r2,184(sp)
    153c:	003f9c06 	br	13b0 <__alt_data_end+0xfffd0670>
    1540:	d8802b07 	ldb	r2,172(sp)
    1544:	1002e11e 	bne	r2,zero,20cc <___vfprintf_internal_r+0x18e0>
    1548:	00c00044 	movi	r3,1
    154c:	d8c02905 	stb	r3,164(sp)
    1550:	00c00804 	movi	r3,32
    1554:	d8c02b05 	stb	r3,172(sp)
    1558:	ac400007 	ldb	r17,0(r21)
    155c:	003d0506 	br	974 <__alt_data_end+0xfffcfc34>
    1560:	84000054 	ori	r16,r16,1
    1564:	ac400007 	ldb	r17,0(r21)
    1568:	003d0206 	br	974 <__alt_data_end+0xfffcfc34>
    156c:	8025883a 	mov	r18,r16
    1570:	dc002903 	ldbu	r16,164(sp)
    1574:	e011883a 	mov	r8,fp
    1578:	84003fcc 	andi	r16,r16,255
    157c:	803de726 	beq	r16,zero,d1c <__alt_data_end+0xfffcffdc>
    1580:	d8c02b03 	ldbu	r3,172(sp)
    1584:	d8c02785 	stb	r3,158(sp)
    1588:	003de406 	br	d1c <__alt_data_end+0xfffcffdc>
    158c:	84001014 	ori	r16,r16,64
    1590:	ac400007 	ldb	r17,0(r21)
    1594:	003cf706 	br	974 <__alt_data_end+0xfffcfc34>
    1598:	ac400007 	ldb	r17,0(r21)
    159c:	00801b04 	movi	r2,108
    15a0:	88838f26 	beq	r17,r2,23e0 <___vfprintf_internal_r+0x1bf4>
    15a4:	84000414 	ori	r16,r16,16
    15a8:	003cf206 	br	974 <__alt_data_end+0xfffcfc34>
    15ac:	8025883a 	mov	r18,r16
    15b0:	dc002903 	ldbu	r16,164(sp)
    15b4:	e011883a 	mov	r8,fp
    15b8:	84003fcc 	andi	r16,r16,255
    15bc:	80053f1e 	bne	r16,zero,2abc <___vfprintf_internal_r+0x22d0>
    15c0:	9080080c 	andi	r2,r18,32
    15c4:	1002d226 	beq	r2,zero,2110 <___vfprintf_internal_r+0x1924>
    15c8:	d9002e17 	ldw	r4,184(sp)
    15cc:	d9402f17 	ldw	r5,188(sp)
    15d0:	20800017 	ldw	r2,0(r4)
    15d4:	2807d7fa 	srai	r3,r5,31
    15d8:	21000104 	addi	r4,r4,4
    15dc:	d9002e15 	stw	r4,184(sp)
    15e0:	11400015 	stw	r5,0(r2)
    15e4:	10c00115 	stw	r3,4(r2)
    15e8:	003cb806 	br	8cc <__alt_data_end+0xfffcfb8c>
    15ec:	d8c02e17 	ldw	r3,184(sp)
    15f0:	d9002e17 	ldw	r4,184(sp)
    15f4:	8025883a 	mov	r18,r16
    15f8:	18800017 	ldw	r2,0(r3)
    15fc:	21000104 	addi	r4,r4,4
    1600:	00c00044 	movi	r3,1
    1604:	e011883a 	mov	r8,fp
    1608:	d8c02915 	stw	r3,164(sp)
    160c:	d8002785 	stb	zero,158(sp)
    1610:	d8801405 	stb	r2,80(sp)
    1614:	d9002e15 	stw	r4,184(sp)
    1618:	d8c02b15 	stw	r3,172(sp)
    161c:	d8002a15 	stw	zero,168(sp)
    1620:	d8003215 	stw	zero,200(sp)
    1624:	dc001404 	addi	r16,sp,80
    1628:	0039883a 	mov	fp,zero
    162c:	003e5306 	br	f7c <__alt_data_end+0xfffd023c>
    1630:	01000074 	movhi	r4,1
    1634:	213b5804 	addi	r4,r4,-4768
    1638:	0039883a 	mov	fp,zero
    163c:	d9003915 	stw	r4,228(sp)
    1640:	04401e04 	movi	r17,120
    1644:	003f6906 	br	13ec <__alt_data_end+0xfffd06ac>
    1648:	8025883a 	mov	r18,r16
    164c:	dc002903 	ldbu	r16,164(sp)
    1650:	e011883a 	mov	r8,fp
    1654:	84003fcc 	andi	r16,r16,255
    1658:	8005081e 	bne	r16,zero,2a7c <___vfprintf_internal_r+0x2290>
    165c:	883d6126 	beq	r17,zero,be4 <__alt_data_end+0xfffcfea4>
    1660:	00c00044 	movi	r3,1
    1664:	d8c02915 	stw	r3,164(sp)
    1668:	dc401405 	stb	r17,80(sp)
    166c:	d8002785 	stb	zero,158(sp)
    1670:	003fe906 	br	1618 <__alt_data_end+0xfffd08d8>
    1674:	01400074 	movhi	r5,1
    1678:	297b5804 	addi	r5,r5,-4768
    167c:	d9403915 	stw	r5,228(sp)
    1680:	d8c02e15 	stw	r3,184(sp)
    1684:	1025883a 	mov	r18,r2
    1688:	04401e04 	movi	r17,120
    168c:	9d84b03a 	or	r2,r19,r22
    1690:	1000fc1e 	bne	r2,zero,1a84 <___vfprintf_internal_r+0x1298>
    1694:	0039883a 	mov	fp,zero
    1698:	00800084 	movi	r2,2
    169c:	10803fcc 	andi	r2,r2,255
    16a0:	00c00044 	movi	r3,1
    16a4:	10c20f26 	beq	r2,r3,1ee4 <___vfprintf_internal_r+0x16f8>
    16a8:	00c00084 	movi	r3,2
    16ac:	10fd3326 	beq	r2,r3,b7c <__alt_data_end+0xfffcfe3c>
    16b0:	003e0b06 	br	ee0 <__alt_data_end+0xfffd01a0>
    16b4:	d8c02017 	ldw	r3,128(sp)
    16b8:	003e7106 	br	1080 <__alt_data_end+0xfffd0340>
    16bc:	00801944 	movi	r2,101
    16c0:	14407e0e 	bge	r2,r17,18bc <___vfprintf_internal_r+0x10d0>
    16c4:	d9003617 	ldw	r4,216(sp)
    16c8:	d9403817 	ldw	r5,224(sp)
    16cc:	000d883a 	mov	r6,zero
    16d0:	000f883a 	mov	r7,zero
    16d4:	d8c03c15 	stw	r3,240(sp)
    16d8:	da003d15 	stw	r8,244(sp)
    16dc:	000be100 	call	be10 <__eqdf2>
    16e0:	d8c03c17 	ldw	r3,240(sp)
    16e4:	da003d17 	ldw	r8,244(sp)
    16e8:	1000f71e 	bne	r2,zero,1ac8 <___vfprintf_internal_r+0x12dc>
    16ec:	d8801f17 	ldw	r2,124(sp)
    16f0:	01000074 	movhi	r4,1
    16f4:	213b5f04 	addi	r4,r4,-4740
    16f8:	18c00044 	addi	r3,r3,1
    16fc:	10800044 	addi	r2,r2,1
    1700:	41000015 	stw	r4,0(r8)
    1704:	01000044 	movi	r4,1
    1708:	41000115 	stw	r4,4(r8)
    170c:	d8c02015 	stw	r3,128(sp)
    1710:	d8801f15 	stw	r2,124(sp)
    1714:	010001c4 	movi	r4,7
    1718:	2082b816 	blt	r4,r2,21fc <___vfprintf_internal_r+0x1a10>
    171c:	42000204 	addi	r8,r8,8
    1720:	d8802617 	ldw	r2,152(sp)
    1724:	d9403317 	ldw	r5,204(sp)
    1728:	11400216 	blt	r2,r5,1734 <___vfprintf_internal_r+0xf48>
    172c:	9080004c 	andi	r2,r18,1
    1730:	103eb326 	beq	r2,zero,1200 <__alt_data_end+0xfffd04c0>
    1734:	d8803717 	ldw	r2,220(sp)
    1738:	d9003417 	ldw	r4,208(sp)
    173c:	d9403717 	ldw	r5,220(sp)
    1740:	1887883a 	add	r3,r3,r2
    1744:	d8801f17 	ldw	r2,124(sp)
    1748:	41000015 	stw	r4,0(r8)
    174c:	41400115 	stw	r5,4(r8)
    1750:	10800044 	addi	r2,r2,1
    1754:	d8c02015 	stw	r3,128(sp)
    1758:	d8801f15 	stw	r2,124(sp)
    175c:	010001c4 	movi	r4,7
    1760:	20832916 	blt	r4,r2,2408 <___vfprintf_internal_r+0x1c1c>
    1764:	42000204 	addi	r8,r8,8
    1768:	d8803317 	ldw	r2,204(sp)
    176c:	143fffc4 	addi	r16,r2,-1
    1770:	043ea30e 	bge	zero,r16,1200 <__alt_data_end+0xfffd04c0>
    1774:	04400404 	movi	r17,16
    1778:	d8801f17 	ldw	r2,124(sp)
    177c:	8c00880e 	bge	r17,r16,19a0 <___vfprintf_internal_r+0x11b4>
    1780:	01400074 	movhi	r5,1
    1784:	297b5f84 	addi	r5,r5,-4738
    1788:	d9402c15 	stw	r5,176(sp)
    178c:	058001c4 	movi	r22,7
    1790:	dcc02d17 	ldw	r19,180(sp)
    1794:	00000306 	br	17a4 <___vfprintf_internal_r+0xfb8>
    1798:	42000204 	addi	r8,r8,8
    179c:	843ffc04 	addi	r16,r16,-16
    17a0:	8c00820e 	bge	r17,r16,19ac <___vfprintf_internal_r+0x11c0>
    17a4:	18c00404 	addi	r3,r3,16
    17a8:	10800044 	addi	r2,r2,1
    17ac:	45000015 	stw	r20,0(r8)
    17b0:	44400115 	stw	r17,4(r8)
    17b4:	d8c02015 	stw	r3,128(sp)
    17b8:	d8801f15 	stw	r2,124(sp)
    17bc:	b0bff60e 	bge	r22,r2,1798 <__alt_data_end+0xfffd0a58>
    17c0:	d9801e04 	addi	r6,sp,120
    17c4:	b80b883a 	mov	r5,r23
    17c8:	9809883a 	mov	r4,r19
    17cc:	00074dc0 	call	74dc <__sprint_r>
    17d0:	103d0a1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    17d4:	d8c02017 	ldw	r3,128(sp)
    17d8:	d8801f17 	ldw	r2,124(sp)
    17dc:	da000404 	addi	r8,sp,16
    17e0:	003fee06 	br	179c <__alt_data_end+0xfffd0a5c>
    17e4:	d9403117 	ldw	r5,196(sp)
    17e8:	d8802917 	ldw	r2,164(sp)
    17ec:	28adc83a 	sub	r22,r5,r2
    17f0:	05be410e 	bge	zero,r22,10f8 <__alt_data_end+0xfffd03b8>
    17f4:	07000404 	movi	fp,16
    17f8:	d8801f17 	ldw	r2,124(sp)
    17fc:	e5838f0e 	bge	fp,r22,263c <___vfprintf_internal_r+0x1e50>
    1800:	01400074 	movhi	r5,1
    1804:	297b5f84 	addi	r5,r5,-4738
    1808:	dc403015 	stw	r17,192(sp)
    180c:	d9402c15 	stw	r5,176(sp)
    1810:	b023883a 	mov	r17,r22
    1814:	04c001c4 	movi	r19,7
    1818:	a82d883a 	mov	r22,r21
    181c:	902b883a 	mov	r21,r18
    1820:	8025883a 	mov	r18,r16
    1824:	dc002d17 	ldw	r16,180(sp)
    1828:	00000306 	br	1838 <___vfprintf_internal_r+0x104c>
    182c:	8c7ffc04 	addi	r17,r17,-16
    1830:	42000204 	addi	r8,r8,8
    1834:	e440110e 	bge	fp,r17,187c <___vfprintf_internal_r+0x1090>
    1838:	18c00404 	addi	r3,r3,16
    183c:	10800044 	addi	r2,r2,1
    1840:	45000015 	stw	r20,0(r8)
    1844:	47000115 	stw	fp,4(r8)
    1848:	d8c02015 	stw	r3,128(sp)
    184c:	d8801f15 	stw	r2,124(sp)
    1850:	98bff60e 	bge	r19,r2,182c <__alt_data_end+0xfffd0aec>
    1854:	d9801e04 	addi	r6,sp,120
    1858:	b80b883a 	mov	r5,r23
    185c:	8009883a 	mov	r4,r16
    1860:	00074dc0 	call	74dc <__sprint_r>
    1864:	103ce51e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1868:	8c7ffc04 	addi	r17,r17,-16
    186c:	d8c02017 	ldw	r3,128(sp)
    1870:	d8801f17 	ldw	r2,124(sp)
    1874:	da000404 	addi	r8,sp,16
    1878:	e47fef16 	blt	fp,r17,1838 <__alt_data_end+0xfffd0af8>
    187c:	9021883a 	mov	r16,r18
    1880:	a825883a 	mov	r18,r21
    1884:	b02b883a 	mov	r21,r22
    1888:	882d883a 	mov	r22,r17
    188c:	dc403017 	ldw	r17,192(sp)
    1890:	d9002c17 	ldw	r4,176(sp)
    1894:	1d87883a 	add	r3,r3,r22
    1898:	10800044 	addi	r2,r2,1
    189c:	41000015 	stw	r4,0(r8)
    18a0:	45800115 	stw	r22,4(r8)
    18a4:	d8c02015 	stw	r3,128(sp)
    18a8:	d8801f15 	stw	r2,124(sp)
    18ac:	010001c4 	movi	r4,7
    18b0:	20818e16 	blt	r4,r2,1eec <___vfprintf_internal_r+0x1700>
    18b4:	42000204 	addi	r8,r8,8
    18b8:	003e0f06 	br	10f8 <__alt_data_end+0xfffd03b8>
    18bc:	d9403317 	ldw	r5,204(sp)
    18c0:	00800044 	movi	r2,1
    18c4:	18c00044 	addi	r3,r3,1
    18c8:	1141530e 	bge	r2,r5,1e18 <___vfprintf_internal_r+0x162c>
    18cc:	dc401f17 	ldw	r17,124(sp)
    18d0:	00800044 	movi	r2,1
    18d4:	40800115 	stw	r2,4(r8)
    18d8:	8c400044 	addi	r17,r17,1
    18dc:	44000015 	stw	r16,0(r8)
    18e0:	d8c02015 	stw	r3,128(sp)
    18e4:	dc401f15 	stw	r17,124(sp)
    18e8:	008001c4 	movi	r2,7
    18ec:	14416b16 	blt	r2,r17,1e9c <___vfprintf_internal_r+0x16b0>
    18f0:	42000204 	addi	r8,r8,8
    18f4:	d8803717 	ldw	r2,220(sp)
    18f8:	d9003417 	ldw	r4,208(sp)
    18fc:	8c400044 	addi	r17,r17,1
    1900:	10c7883a 	add	r3,r2,r3
    1904:	40800115 	stw	r2,4(r8)
    1908:	41000015 	stw	r4,0(r8)
    190c:	d8c02015 	stw	r3,128(sp)
    1910:	dc401f15 	stw	r17,124(sp)
    1914:	008001c4 	movi	r2,7
    1918:	14416916 	blt	r2,r17,1ec0 <___vfprintf_internal_r+0x16d4>
    191c:	45800204 	addi	r22,r8,8
    1920:	d9003617 	ldw	r4,216(sp)
    1924:	d9403817 	ldw	r5,224(sp)
    1928:	000d883a 	mov	r6,zero
    192c:	000f883a 	mov	r7,zero
    1930:	d8c03c15 	stw	r3,240(sp)
    1934:	000be100 	call	be10 <__eqdf2>
    1938:	d8c03c17 	ldw	r3,240(sp)
    193c:	1000bc26 	beq	r2,zero,1c30 <___vfprintf_internal_r+0x1444>
    1940:	d9403317 	ldw	r5,204(sp)
    1944:	84000044 	addi	r16,r16,1
    1948:	8c400044 	addi	r17,r17,1
    194c:	28bfffc4 	addi	r2,r5,-1
    1950:	1887883a 	add	r3,r3,r2
    1954:	b0800115 	stw	r2,4(r22)
    1958:	b4000015 	stw	r16,0(r22)
    195c:	d8c02015 	stw	r3,128(sp)
    1960:	dc401f15 	stw	r17,124(sp)
    1964:	008001c4 	movi	r2,7
    1968:	14414316 	blt	r2,r17,1e78 <___vfprintf_internal_r+0x168c>
    196c:	b5800204 	addi	r22,r22,8
    1970:	d9003a17 	ldw	r4,232(sp)
    1974:	df0022c4 	addi	fp,sp,139
    1978:	8c400044 	addi	r17,r17,1
    197c:	20c7883a 	add	r3,r4,r3
    1980:	b7000015 	stw	fp,0(r22)
    1984:	b1000115 	stw	r4,4(r22)
    1988:	d8c02015 	stw	r3,128(sp)
    198c:	dc401f15 	stw	r17,124(sp)
    1990:	008001c4 	movi	r2,7
    1994:	14400e16 	blt	r2,r17,19d0 <___vfprintf_internal_r+0x11e4>
    1998:	b2000204 	addi	r8,r22,8
    199c:	003e1806 	br	1200 <__alt_data_end+0xfffd04c0>
    19a0:	01000074 	movhi	r4,1
    19a4:	213b5f84 	addi	r4,r4,-4738
    19a8:	d9002c15 	stw	r4,176(sp)
    19ac:	d9002c17 	ldw	r4,176(sp)
    19b0:	1c07883a 	add	r3,r3,r16
    19b4:	44000115 	stw	r16,4(r8)
    19b8:	41000015 	stw	r4,0(r8)
    19bc:	10800044 	addi	r2,r2,1
    19c0:	d8c02015 	stw	r3,128(sp)
    19c4:	d8801f15 	stw	r2,124(sp)
    19c8:	010001c4 	movi	r4,7
    19cc:	20be0b0e 	bge	r4,r2,11fc <__alt_data_end+0xfffd04bc>
    19d0:	d9002d17 	ldw	r4,180(sp)
    19d4:	d9801e04 	addi	r6,sp,120
    19d8:	b80b883a 	mov	r5,r23
    19dc:	00074dc0 	call	74dc <__sprint_r>
    19e0:	103c861e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    19e4:	d8c02017 	ldw	r3,128(sp)
    19e8:	da000404 	addi	r8,sp,16
    19ec:	003e0406 	br	1200 <__alt_data_end+0xfffd04c0>
    19f0:	d9002d17 	ldw	r4,180(sp)
    19f4:	d9801e04 	addi	r6,sp,120
    19f8:	b80b883a 	mov	r5,r23
    19fc:	00074dc0 	call	74dc <__sprint_r>
    1a00:	103e3b26 	beq	r2,zero,12f0 <__alt_data_end+0xfffd05b0>
    1a04:	003c7d06 	br	bfc <__alt_data_end+0xfffcfebc>
    1a08:	d9002d17 	ldw	r4,180(sp)
    1a0c:	d9801e04 	addi	r6,sp,120
    1a10:	b80b883a 	mov	r5,r23
    1a14:	00074dc0 	call	74dc <__sprint_r>
    1a18:	103c781e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1a1c:	d8c02017 	ldw	r3,128(sp)
    1a20:	da000404 	addi	r8,sp,16
    1a24:	003de906 	br	11cc <__alt_data_end+0xfffd048c>
    1a28:	d9002d17 	ldw	r4,180(sp)
    1a2c:	d9801e04 	addi	r6,sp,120
    1a30:	b80b883a 	mov	r5,r23
    1a34:	00074dc0 	call	74dc <__sprint_r>
    1a38:	103c701e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1a3c:	d8c02017 	ldw	r3,128(sp)
    1a40:	da000404 	addi	r8,sp,16
    1a44:	003d9b06 	br	10b4 <__alt_data_end+0xfffd0374>
    1a48:	d9002d17 	ldw	r4,180(sp)
    1a4c:	d9801e04 	addi	r6,sp,120
    1a50:	b80b883a 	mov	r5,r23
    1a54:	00074dc0 	call	74dc <__sprint_r>
    1a58:	103c681e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1a5c:	d8c02017 	ldw	r3,128(sp)
    1a60:	da000404 	addi	r8,sp,16
    1a64:	003da106 	br	10ec <__alt_data_end+0xfffd03ac>
    1a68:	d9402a17 	ldw	r5,168(sp)
    1a6c:	d8002785 	stb	zero,158(sp)
    1a70:	283f0616 	blt	r5,zero,168c <__alt_data_end+0xfffd094c>
    1a74:	00ffdfc4 	movi	r3,-129
    1a78:	9d84b03a 	or	r2,r19,r22
    1a7c:	90e4703a 	and	r18,r18,r3
    1a80:	103c3b26 	beq	r2,zero,b70 <__alt_data_end+0xfffcfe30>
    1a84:	0039883a 	mov	fp,zero
    1a88:	003e5806 	br	13ec <__alt_data_end+0xfffd06ac>
    1a8c:	9080040c 	andi	r2,r18,16
    1a90:	1001b326 	beq	r2,zero,2160 <___vfprintf_internal_r+0x1974>
    1a94:	d8c02e17 	ldw	r3,184(sp)
    1a98:	d9002a17 	ldw	r4,168(sp)
    1a9c:	d8002785 	stb	zero,158(sp)
    1aa0:	18800104 	addi	r2,r3,4
    1aa4:	1cc00017 	ldw	r19,0(r3)
    1aa8:	002d883a 	mov	r22,zero
    1aac:	2001b516 	blt	r4,zero,2184 <___vfprintf_internal_r+0x1998>
    1ab0:	00ffdfc4 	movi	r3,-129
    1ab4:	d8802e15 	stw	r2,184(sp)
    1ab8:	90e4703a 	and	r18,r18,r3
    1abc:	983d0526 	beq	r19,zero,ed4 <__alt_data_end+0xfffd0194>
    1ac0:	0039883a 	mov	fp,zero
    1ac4:	003d0806 	br	ee8 <__alt_data_end+0xfffd01a8>
    1ac8:	dc402617 	ldw	r17,152(sp)
    1acc:	0441d30e 	bge	zero,r17,221c <___vfprintf_internal_r+0x1a30>
    1ad0:	dc403217 	ldw	r17,200(sp)
    1ad4:	d8803317 	ldw	r2,204(sp)
    1ad8:	1440010e 	bge	r2,r17,1ae0 <___vfprintf_internal_r+0x12f4>
    1adc:	1023883a 	mov	r17,r2
    1ae0:	04400a0e 	bge	zero,r17,1b0c <___vfprintf_internal_r+0x1320>
    1ae4:	d8801f17 	ldw	r2,124(sp)
    1ae8:	1c47883a 	add	r3,r3,r17
    1aec:	44000015 	stw	r16,0(r8)
    1af0:	10800044 	addi	r2,r2,1
    1af4:	44400115 	stw	r17,4(r8)
    1af8:	d8c02015 	stw	r3,128(sp)
    1afc:	d8801f15 	stw	r2,124(sp)
    1b00:	010001c4 	movi	r4,7
    1b04:	20826516 	blt	r4,r2,249c <___vfprintf_internal_r+0x1cb0>
    1b08:	42000204 	addi	r8,r8,8
    1b0c:	88026116 	blt	r17,zero,2494 <___vfprintf_internal_r+0x1ca8>
    1b10:	d9003217 	ldw	r4,200(sp)
    1b14:	2463c83a 	sub	r17,r4,r17
    1b18:	04407b0e 	bge	zero,r17,1d08 <___vfprintf_internal_r+0x151c>
    1b1c:	05800404 	movi	r22,16
    1b20:	d8801f17 	ldw	r2,124(sp)
    1b24:	b4419d0e 	bge	r22,r17,219c <___vfprintf_internal_r+0x19b0>
    1b28:	01000074 	movhi	r4,1
    1b2c:	213b5f84 	addi	r4,r4,-4738
    1b30:	d9002c15 	stw	r4,176(sp)
    1b34:	070001c4 	movi	fp,7
    1b38:	dcc02d17 	ldw	r19,180(sp)
    1b3c:	00000306 	br	1b4c <___vfprintf_internal_r+0x1360>
    1b40:	42000204 	addi	r8,r8,8
    1b44:	8c7ffc04 	addi	r17,r17,-16
    1b48:	b441970e 	bge	r22,r17,21a8 <___vfprintf_internal_r+0x19bc>
    1b4c:	18c00404 	addi	r3,r3,16
    1b50:	10800044 	addi	r2,r2,1
    1b54:	45000015 	stw	r20,0(r8)
    1b58:	45800115 	stw	r22,4(r8)
    1b5c:	d8c02015 	stw	r3,128(sp)
    1b60:	d8801f15 	stw	r2,124(sp)
    1b64:	e0bff60e 	bge	fp,r2,1b40 <__alt_data_end+0xfffd0e00>
    1b68:	d9801e04 	addi	r6,sp,120
    1b6c:	b80b883a 	mov	r5,r23
    1b70:	9809883a 	mov	r4,r19
    1b74:	00074dc0 	call	74dc <__sprint_r>
    1b78:	103c201e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1b7c:	d8c02017 	ldw	r3,128(sp)
    1b80:	d8801f17 	ldw	r2,124(sp)
    1b84:	da000404 	addi	r8,sp,16
    1b88:	003fee06 	br	1b44 <__alt_data_end+0xfffd0e04>
    1b8c:	d9002d17 	ldw	r4,180(sp)
    1b90:	d9801e04 	addi	r6,sp,120
    1b94:	b80b883a 	mov	r5,r23
    1b98:	00074dc0 	call	74dc <__sprint_r>
    1b9c:	103c171e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1ba0:	d8c02017 	ldw	r3,128(sp)
    1ba4:	df002787 	ldb	fp,158(sp)
    1ba8:	da000404 	addi	r8,sp,16
    1bac:	003d3406 	br	1080 <__alt_data_end+0xfffd0340>
    1bb0:	9080040c 	andi	r2,r18,16
    1bb4:	10016126 	beq	r2,zero,213c <___vfprintf_internal_r+0x1950>
    1bb8:	d9402e17 	ldw	r5,184(sp)
    1bbc:	2cc00017 	ldw	r19,0(r5)
    1bc0:	29400104 	addi	r5,r5,4
    1bc4:	d9402e15 	stw	r5,184(sp)
    1bc8:	982dd7fa 	srai	r22,r19,31
    1bcc:	b005883a 	mov	r2,r22
    1bd0:	003c5a06 	br	d3c <__alt_data_end+0xfffcfffc>
    1bd4:	9080040c 	andi	r2,r18,16
    1bd8:	10003526 	beq	r2,zero,1cb0 <___vfprintf_internal_r+0x14c4>
    1bdc:	d8c02e17 	ldw	r3,184(sp)
    1be0:	d9002a17 	ldw	r4,168(sp)
    1be4:	d8002785 	stb	zero,158(sp)
    1be8:	18800104 	addi	r2,r3,4
    1bec:	1cc00017 	ldw	r19,0(r3)
    1bf0:	002d883a 	mov	r22,zero
    1bf4:	20003716 	blt	r4,zero,1cd4 <___vfprintf_internal_r+0x14e8>
    1bf8:	00ffdfc4 	movi	r3,-129
    1bfc:	d8802e15 	stw	r2,184(sp)
    1c00:	90e4703a 	and	r18,r18,r3
    1c04:	0039883a 	mov	fp,zero
    1c08:	983dd426 	beq	r19,zero,135c <__alt_data_end+0xfffd061c>
    1c0c:	00800244 	movi	r2,9
    1c10:	14fc5336 	bltu	r2,r19,d60 <__alt_data_end+0xfffd0020>
    1c14:	d8c02817 	ldw	r3,160(sp)
    1c18:	dc001dc4 	addi	r16,sp,119
    1c1c:	9cc00c04 	addi	r19,r19,48
    1c20:	1c07c83a 	sub	r3,r3,r16
    1c24:	dcc01dc5 	stb	r19,119(sp)
    1c28:	d8c02b15 	stw	r3,172(sp)
    1c2c:	003cc606 	br	f48 <__alt_data_end+0xfffd0208>
    1c30:	d8803317 	ldw	r2,204(sp)
    1c34:	143fffc4 	addi	r16,r2,-1
    1c38:	043f4d0e 	bge	zero,r16,1970 <__alt_data_end+0xfffd0c30>
    1c3c:	07000404 	movi	fp,16
    1c40:	e400810e 	bge	fp,r16,1e48 <___vfprintf_internal_r+0x165c>
    1c44:	01400074 	movhi	r5,1
    1c48:	297b5f84 	addi	r5,r5,-4738
    1c4c:	d9402c15 	stw	r5,176(sp)
    1c50:	01c001c4 	movi	r7,7
    1c54:	dcc02d17 	ldw	r19,180(sp)
    1c58:	00000306 	br	1c68 <___vfprintf_internal_r+0x147c>
    1c5c:	b5800204 	addi	r22,r22,8
    1c60:	843ffc04 	addi	r16,r16,-16
    1c64:	e4007b0e 	bge	fp,r16,1e54 <___vfprintf_internal_r+0x1668>
    1c68:	18c00404 	addi	r3,r3,16
    1c6c:	8c400044 	addi	r17,r17,1
    1c70:	b5000015 	stw	r20,0(r22)
    1c74:	b7000115 	stw	fp,4(r22)
    1c78:	d8c02015 	stw	r3,128(sp)
    1c7c:	dc401f15 	stw	r17,124(sp)
    1c80:	3c7ff60e 	bge	r7,r17,1c5c <__alt_data_end+0xfffd0f1c>
    1c84:	d9801e04 	addi	r6,sp,120
    1c88:	b80b883a 	mov	r5,r23
    1c8c:	9809883a 	mov	r4,r19
    1c90:	d9c03c15 	stw	r7,240(sp)
    1c94:	00074dc0 	call	74dc <__sprint_r>
    1c98:	d9c03c17 	ldw	r7,240(sp)
    1c9c:	103bd71e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1ca0:	d8c02017 	ldw	r3,128(sp)
    1ca4:	dc401f17 	ldw	r17,124(sp)
    1ca8:	dd800404 	addi	r22,sp,16
    1cac:	003fec06 	br	1c60 <__alt_data_end+0xfffd0f20>
    1cb0:	9080100c 	andi	r2,r18,64
    1cb4:	d8002785 	stb	zero,158(sp)
    1cb8:	10010e26 	beq	r2,zero,20f4 <___vfprintf_internal_r+0x1908>
    1cbc:	d9402e17 	ldw	r5,184(sp)
    1cc0:	d8c02a17 	ldw	r3,168(sp)
    1cc4:	002d883a 	mov	r22,zero
    1cc8:	28800104 	addi	r2,r5,4
    1ccc:	2cc0000b 	ldhu	r19,0(r5)
    1cd0:	183fc90e 	bge	r3,zero,1bf8 <__alt_data_end+0xfffd0eb8>
    1cd4:	d8802e15 	stw	r2,184(sp)
    1cd8:	0039883a 	mov	fp,zero
    1cdc:	9d84b03a 	or	r2,r19,r22
    1ce0:	103c1e1e 	bne	r2,zero,d5c <__alt_data_end+0xfffd001c>
    1ce4:	00800044 	movi	r2,1
    1ce8:	003e6c06 	br	169c <__alt_data_end+0xfffd095c>
    1cec:	d9002d17 	ldw	r4,180(sp)
    1cf0:	d9801e04 	addi	r6,sp,120
    1cf4:	b80b883a 	mov	r5,r23
    1cf8:	00074dc0 	call	74dc <__sprint_r>
    1cfc:	103bbf1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1d00:	d8c02017 	ldw	r3,128(sp)
    1d04:	da000404 	addi	r8,sp,16
    1d08:	d9003217 	ldw	r4,200(sp)
    1d0c:	d8802617 	ldw	r2,152(sp)
    1d10:	d9403317 	ldw	r5,204(sp)
    1d14:	8123883a 	add	r17,r16,r4
    1d18:	11400216 	blt	r2,r5,1d24 <___vfprintf_internal_r+0x1538>
    1d1c:	9100004c 	andi	r4,r18,1
    1d20:	20000d26 	beq	r4,zero,1d58 <___vfprintf_internal_r+0x156c>
    1d24:	d9003717 	ldw	r4,220(sp)
    1d28:	d9403417 	ldw	r5,208(sp)
    1d2c:	1907883a 	add	r3,r3,r4
    1d30:	d9001f17 	ldw	r4,124(sp)
    1d34:	41400015 	stw	r5,0(r8)
    1d38:	d9403717 	ldw	r5,220(sp)
    1d3c:	21000044 	addi	r4,r4,1
    1d40:	d8c02015 	stw	r3,128(sp)
    1d44:	41400115 	stw	r5,4(r8)
    1d48:	d9001f15 	stw	r4,124(sp)
    1d4c:	014001c4 	movi	r5,7
    1d50:	2901e816 	blt	r5,r4,24f4 <___vfprintf_internal_r+0x1d08>
    1d54:	42000204 	addi	r8,r8,8
    1d58:	d9003317 	ldw	r4,204(sp)
    1d5c:	8121883a 	add	r16,r16,r4
    1d60:	2085c83a 	sub	r2,r4,r2
    1d64:	8461c83a 	sub	r16,r16,r17
    1d68:	1400010e 	bge	r2,r16,1d70 <___vfprintf_internal_r+0x1584>
    1d6c:	1021883a 	mov	r16,r2
    1d70:	04000a0e 	bge	zero,r16,1d9c <___vfprintf_internal_r+0x15b0>
    1d74:	d9001f17 	ldw	r4,124(sp)
    1d78:	1c07883a 	add	r3,r3,r16
    1d7c:	44400015 	stw	r17,0(r8)
    1d80:	21000044 	addi	r4,r4,1
    1d84:	44000115 	stw	r16,4(r8)
    1d88:	d8c02015 	stw	r3,128(sp)
    1d8c:	d9001f15 	stw	r4,124(sp)
    1d90:	014001c4 	movi	r5,7
    1d94:	2901fb16 	blt	r5,r4,2584 <___vfprintf_internal_r+0x1d98>
    1d98:	42000204 	addi	r8,r8,8
    1d9c:	8001f716 	blt	r16,zero,257c <___vfprintf_internal_r+0x1d90>
    1da0:	1421c83a 	sub	r16,r2,r16
    1da4:	043d160e 	bge	zero,r16,1200 <__alt_data_end+0xfffd04c0>
    1da8:	04400404 	movi	r17,16
    1dac:	d8801f17 	ldw	r2,124(sp)
    1db0:	8c3efb0e 	bge	r17,r16,19a0 <__alt_data_end+0xfffd0c60>
    1db4:	01400074 	movhi	r5,1
    1db8:	297b5f84 	addi	r5,r5,-4738
    1dbc:	d9402c15 	stw	r5,176(sp)
    1dc0:	058001c4 	movi	r22,7
    1dc4:	dcc02d17 	ldw	r19,180(sp)
    1dc8:	00000306 	br	1dd8 <___vfprintf_internal_r+0x15ec>
    1dcc:	42000204 	addi	r8,r8,8
    1dd0:	843ffc04 	addi	r16,r16,-16
    1dd4:	8c3ef50e 	bge	r17,r16,19ac <__alt_data_end+0xfffd0c6c>
    1dd8:	18c00404 	addi	r3,r3,16
    1ddc:	10800044 	addi	r2,r2,1
    1de0:	45000015 	stw	r20,0(r8)
    1de4:	44400115 	stw	r17,4(r8)
    1de8:	d8c02015 	stw	r3,128(sp)
    1dec:	d8801f15 	stw	r2,124(sp)
    1df0:	b0bff60e 	bge	r22,r2,1dcc <__alt_data_end+0xfffd108c>
    1df4:	d9801e04 	addi	r6,sp,120
    1df8:	b80b883a 	mov	r5,r23
    1dfc:	9809883a 	mov	r4,r19
    1e00:	00074dc0 	call	74dc <__sprint_r>
    1e04:	103b7d1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1e08:	d8c02017 	ldw	r3,128(sp)
    1e0c:	d8801f17 	ldw	r2,124(sp)
    1e10:	da000404 	addi	r8,sp,16
    1e14:	003fee06 	br	1dd0 <__alt_data_end+0xfffd1090>
    1e18:	9088703a 	and	r4,r18,r2
    1e1c:	203eab1e 	bne	r4,zero,18cc <__alt_data_end+0xfffd0b8c>
    1e20:	dc401f17 	ldw	r17,124(sp)
    1e24:	40800115 	stw	r2,4(r8)
    1e28:	44000015 	stw	r16,0(r8)
    1e2c:	8c400044 	addi	r17,r17,1
    1e30:	d8c02015 	stw	r3,128(sp)
    1e34:	dc401f15 	stw	r17,124(sp)
    1e38:	008001c4 	movi	r2,7
    1e3c:	14400e16 	blt	r2,r17,1e78 <___vfprintf_internal_r+0x168c>
    1e40:	45800204 	addi	r22,r8,8
    1e44:	003eca06 	br	1970 <__alt_data_end+0xfffd0c30>
    1e48:	01000074 	movhi	r4,1
    1e4c:	213b5f84 	addi	r4,r4,-4738
    1e50:	d9002c15 	stw	r4,176(sp)
    1e54:	d8802c17 	ldw	r2,176(sp)
    1e58:	1c07883a 	add	r3,r3,r16
    1e5c:	8c400044 	addi	r17,r17,1
    1e60:	b0800015 	stw	r2,0(r22)
    1e64:	b4000115 	stw	r16,4(r22)
    1e68:	d8c02015 	stw	r3,128(sp)
    1e6c:	dc401f15 	stw	r17,124(sp)
    1e70:	008001c4 	movi	r2,7
    1e74:	147ebd0e 	bge	r2,r17,196c <__alt_data_end+0xfffd0c2c>
    1e78:	d9002d17 	ldw	r4,180(sp)
    1e7c:	d9801e04 	addi	r6,sp,120
    1e80:	b80b883a 	mov	r5,r23
    1e84:	00074dc0 	call	74dc <__sprint_r>
    1e88:	103b5c1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1e8c:	d8c02017 	ldw	r3,128(sp)
    1e90:	dc401f17 	ldw	r17,124(sp)
    1e94:	dd800404 	addi	r22,sp,16
    1e98:	003eb506 	br	1970 <__alt_data_end+0xfffd0c30>
    1e9c:	d9002d17 	ldw	r4,180(sp)
    1ea0:	d9801e04 	addi	r6,sp,120
    1ea4:	b80b883a 	mov	r5,r23
    1ea8:	00074dc0 	call	74dc <__sprint_r>
    1eac:	103b531e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1eb0:	d8c02017 	ldw	r3,128(sp)
    1eb4:	dc401f17 	ldw	r17,124(sp)
    1eb8:	da000404 	addi	r8,sp,16
    1ebc:	003e8d06 	br	18f4 <__alt_data_end+0xfffd0bb4>
    1ec0:	d9002d17 	ldw	r4,180(sp)
    1ec4:	d9801e04 	addi	r6,sp,120
    1ec8:	b80b883a 	mov	r5,r23
    1ecc:	00074dc0 	call	74dc <__sprint_r>
    1ed0:	103b4a1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1ed4:	d8c02017 	ldw	r3,128(sp)
    1ed8:	dc401f17 	ldw	r17,124(sp)
    1edc:	dd800404 	addi	r22,sp,16
    1ee0:	003e8f06 	br	1920 <__alt_data_end+0xfffd0be0>
    1ee4:	0027883a 	mov	r19,zero
    1ee8:	003f4a06 	br	1c14 <__alt_data_end+0xfffd0ed4>
    1eec:	d9002d17 	ldw	r4,180(sp)
    1ef0:	d9801e04 	addi	r6,sp,120
    1ef4:	b80b883a 	mov	r5,r23
    1ef8:	00074dc0 	call	74dc <__sprint_r>
    1efc:	103b3f1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    1f00:	d8c02017 	ldw	r3,128(sp)
    1f04:	da000404 	addi	r8,sp,16
    1f08:	003c7b06 	br	10f8 <__alt_data_end+0xfffd03b8>
    1f0c:	d9402a17 	ldw	r5,168(sp)
    1f10:	04e7c83a 	sub	r19,zero,r19
    1f14:	07000b44 	movi	fp,45
    1f18:	9804c03a 	cmpne	r2,r19,zero
    1f1c:	05adc83a 	sub	r22,zero,r22
    1f20:	df002785 	stb	fp,158(sp)
    1f24:	b0adc83a 	sub	r22,r22,r2
    1f28:	28017b16 	blt	r5,zero,2518 <___vfprintf_internal_r+0x1d2c>
    1f2c:	00bfdfc4 	movi	r2,-129
    1f30:	90a4703a 	and	r18,r18,r2
    1f34:	003b8906 	br	d5c <__alt_data_end+0xfffd001c>
    1f38:	d9003617 	ldw	r4,216(sp)
    1f3c:	d9403817 	ldw	r5,224(sp)
    1f40:	da003d15 	stw	r8,244(sp)
    1f44:	00070680 	call	7068 <__fpclassifyd>
    1f48:	da003d17 	ldw	r8,244(sp)
    1f4c:	1000f026 	beq	r2,zero,2310 <___vfprintf_internal_r+0x1b24>
    1f50:	d9002a17 	ldw	r4,168(sp)
    1f54:	05bff7c4 	movi	r22,-33
    1f58:	00bfffc4 	movi	r2,-1
    1f5c:	8dac703a 	and	r22,r17,r22
    1f60:	20820026 	beq	r4,r2,2764 <___vfprintf_internal_r+0x1f78>
    1f64:	008011c4 	movi	r2,71
    1f68:	b081f726 	beq	r22,r2,2748 <___vfprintf_internal_r+0x1f5c>
    1f6c:	d9003817 	ldw	r4,224(sp)
    1f70:	90c04014 	ori	r3,r18,256
    1f74:	d8c02c15 	stw	r3,176(sp)
    1f78:	20021516 	blt	r4,zero,27d0 <___vfprintf_internal_r+0x1fe4>
    1f7c:	dcc03817 	ldw	r19,224(sp)
    1f80:	d8002905 	stb	zero,164(sp)
    1f84:	00801984 	movi	r2,102
    1f88:	8881f926 	beq	r17,r2,2770 <___vfprintf_internal_r+0x1f84>
    1f8c:	00801184 	movi	r2,70
    1f90:	88821c26 	beq	r17,r2,2804 <___vfprintf_internal_r+0x2018>
    1f94:	00801144 	movi	r2,69
    1f98:	b081ef26 	beq	r22,r2,2758 <___vfprintf_internal_r+0x1f6c>
    1f9c:	d8c02a17 	ldw	r3,168(sp)
    1fa0:	d8802104 	addi	r2,sp,132
    1fa4:	d8800315 	stw	r2,12(sp)
    1fa8:	d9403617 	ldw	r5,216(sp)
    1fac:	d8802504 	addi	r2,sp,148
    1fb0:	d9002d17 	ldw	r4,180(sp)
    1fb4:	d8800215 	stw	r2,8(sp)
    1fb8:	d8802604 	addi	r2,sp,152
    1fbc:	d8c00015 	stw	r3,0(sp)
    1fc0:	d8800115 	stw	r2,4(sp)
    1fc4:	01c00084 	movi	r7,2
    1fc8:	980d883a 	mov	r6,r19
    1fcc:	d8c03c15 	stw	r3,240(sp)
    1fd0:	da003d15 	stw	r8,244(sp)
    1fd4:	0002f1c0 	call	2f1c <_dtoa_r>
    1fd8:	1021883a 	mov	r16,r2
    1fdc:	008019c4 	movi	r2,103
    1fe0:	d8c03c17 	ldw	r3,240(sp)
    1fe4:	da003d17 	ldw	r8,244(sp)
    1fe8:	88817126 	beq	r17,r2,25b0 <___vfprintf_internal_r+0x1dc4>
    1fec:	008011c4 	movi	r2,71
    1ff0:	88829126 	beq	r17,r2,2a38 <___vfprintf_internal_r+0x224c>
    1ff4:	80f9883a 	add	fp,r16,r3
    1ff8:	d9003617 	ldw	r4,216(sp)
    1ffc:	000d883a 	mov	r6,zero
    2000:	000f883a 	mov	r7,zero
    2004:	980b883a 	mov	r5,r19
    2008:	da003d15 	stw	r8,244(sp)
    200c:	000be100 	call	be10 <__eqdf2>
    2010:	da003d17 	ldw	r8,244(sp)
    2014:	10018d26 	beq	r2,zero,264c <___vfprintf_internal_r+0x1e60>
    2018:	d8802117 	ldw	r2,132(sp)
    201c:	1700062e 	bgeu	r2,fp,2038 <___vfprintf_internal_r+0x184c>
    2020:	01000c04 	movi	r4,48
    2024:	10c00044 	addi	r3,r2,1
    2028:	d8c02115 	stw	r3,132(sp)
    202c:	11000005 	stb	r4,0(r2)
    2030:	d8802117 	ldw	r2,132(sp)
    2034:	173ffb36 	bltu	r2,fp,2024 <__alt_data_end+0xfffd12e4>
    2038:	1405c83a 	sub	r2,r2,r16
    203c:	d8803315 	stw	r2,204(sp)
    2040:	008011c4 	movi	r2,71
    2044:	b0817626 	beq	r22,r2,2620 <___vfprintf_internal_r+0x1e34>
    2048:	00801944 	movi	r2,101
    204c:	1442800e 	bge	r2,r17,2a50 <___vfprintf_internal_r+0x2264>
    2050:	d8c02617 	ldw	r3,152(sp)
    2054:	00801984 	movi	r2,102
    2058:	d8c03215 	stw	r3,200(sp)
    205c:	8881fe26 	beq	r17,r2,2858 <___vfprintf_internal_r+0x206c>
    2060:	d8c03217 	ldw	r3,200(sp)
    2064:	d9003317 	ldw	r4,204(sp)
    2068:	1901dd16 	blt	r3,r4,27e0 <___vfprintf_internal_r+0x1ff4>
    206c:	9480004c 	andi	r18,r18,1
    2070:	90022b1e 	bne	r18,zero,2920 <___vfprintf_internal_r+0x2134>
    2074:	1805883a 	mov	r2,r3
    2078:	18028316 	blt	r3,zero,2a88 <___vfprintf_internal_r+0x229c>
    207c:	d8c03217 	ldw	r3,200(sp)
    2080:	044019c4 	movi	r17,103
    2084:	d8c02b15 	stw	r3,172(sp)
    2088:	df002907 	ldb	fp,164(sp)
    208c:	e001531e 	bne	fp,zero,25dc <___vfprintf_internal_r+0x1df0>
    2090:	df002783 	ldbu	fp,158(sp)
    2094:	d8802915 	stw	r2,164(sp)
    2098:	dc802c17 	ldw	r18,176(sp)
    209c:	d8002a15 	stw	zero,168(sp)
    20a0:	003baf06 	br	f60 <__alt_data_end+0xfffd0220>
    20a4:	d8c02e17 	ldw	r3,184(sp)
    20a8:	d9002e17 	ldw	r4,184(sp)
    20ac:	d9402e17 	ldw	r5,184(sp)
    20b0:	18c00017 	ldw	r3,0(r3)
    20b4:	21000117 	ldw	r4,4(r4)
    20b8:	29400204 	addi	r5,r5,8
    20bc:	d8c03615 	stw	r3,216(sp)
    20c0:	d9003815 	stw	r4,224(sp)
    20c4:	d9402e15 	stw	r5,184(sp)
    20c8:	003b5006 	br	e0c <__alt_data_end+0xfffd00cc>
    20cc:	ac400007 	ldb	r17,0(r21)
    20d0:	003a2806 	br	974 <__alt_data_end+0xfffcfc34>
    20d4:	9080100c 	andi	r2,r18,64
    20d8:	1000a826 	beq	r2,zero,237c <___vfprintf_internal_r+0x1b90>
    20dc:	d8c02e17 	ldw	r3,184(sp)
    20e0:	002d883a 	mov	r22,zero
    20e4:	1cc0000b 	ldhu	r19,0(r3)
    20e8:	18c00104 	addi	r3,r3,4
    20ec:	d8c02e15 	stw	r3,184(sp)
    20f0:	003caf06 	br	13b0 <__alt_data_end+0xfffd0670>
    20f4:	d9002e17 	ldw	r4,184(sp)
    20f8:	d9402a17 	ldw	r5,168(sp)
    20fc:	002d883a 	mov	r22,zero
    2100:	20800104 	addi	r2,r4,4
    2104:	24c00017 	ldw	r19,0(r4)
    2108:	283ebb0e 	bge	r5,zero,1bf8 <__alt_data_end+0xfffd0eb8>
    210c:	003ef106 	br	1cd4 <__alt_data_end+0xfffd0f94>
    2110:	9080040c 	andi	r2,r18,16
    2114:	1000921e 	bne	r2,zero,2360 <___vfprintf_internal_r+0x1b74>
    2118:	9480100c 	andi	r18,r18,64
    211c:	90013926 	beq	r18,zero,2604 <___vfprintf_internal_r+0x1e18>
    2120:	d9402e17 	ldw	r5,184(sp)
    2124:	d8c02f17 	ldw	r3,188(sp)
    2128:	28800017 	ldw	r2,0(r5)
    212c:	29400104 	addi	r5,r5,4
    2130:	d9402e15 	stw	r5,184(sp)
    2134:	10c0000d 	sth	r3,0(r2)
    2138:	0039e406 	br	8cc <__alt_data_end+0xfffcfb8c>
    213c:	9080100c 	andi	r2,r18,64
    2140:	10008026 	beq	r2,zero,2344 <___vfprintf_internal_r+0x1b58>
    2144:	d8802e17 	ldw	r2,184(sp)
    2148:	14c0000f 	ldh	r19,0(r2)
    214c:	10800104 	addi	r2,r2,4
    2150:	d8802e15 	stw	r2,184(sp)
    2154:	982dd7fa 	srai	r22,r19,31
    2158:	b005883a 	mov	r2,r22
    215c:	003af706 	br	d3c <__alt_data_end+0xfffcfffc>
    2160:	9080100c 	andi	r2,r18,64
    2164:	d8002785 	stb	zero,158(sp)
    2168:	10008a1e 	bne	r2,zero,2394 <___vfprintf_internal_r+0x1ba8>
    216c:	d9002e17 	ldw	r4,184(sp)
    2170:	d9402a17 	ldw	r5,168(sp)
    2174:	002d883a 	mov	r22,zero
    2178:	20800104 	addi	r2,r4,4
    217c:	24c00017 	ldw	r19,0(r4)
    2180:	283e4b0e 	bge	r5,zero,1ab0 <__alt_data_end+0xfffd0d70>
    2184:	9d86b03a 	or	r3,r19,r22
    2188:	d8802e15 	stw	r2,184(sp)
    218c:	183e4c1e 	bne	r3,zero,1ac0 <__alt_data_end+0xfffd0d80>
    2190:	0039883a 	mov	fp,zero
    2194:	0005883a 	mov	r2,zero
    2198:	003d4006 	br	169c <__alt_data_end+0xfffd095c>
    219c:	01400074 	movhi	r5,1
    21a0:	297b5f84 	addi	r5,r5,-4738
    21a4:	d9402c15 	stw	r5,176(sp)
    21a8:	d9402c17 	ldw	r5,176(sp)
    21ac:	1c47883a 	add	r3,r3,r17
    21b0:	10800044 	addi	r2,r2,1
    21b4:	41400015 	stw	r5,0(r8)
    21b8:	44400115 	stw	r17,4(r8)
    21bc:	d8c02015 	stw	r3,128(sp)
    21c0:	d8801f15 	stw	r2,124(sp)
    21c4:	010001c4 	movi	r4,7
    21c8:	20bec816 	blt	r4,r2,1cec <__alt_data_end+0xfffd0fac>
    21cc:	42000204 	addi	r8,r8,8
    21d0:	003ecd06 	br	1d08 <__alt_data_end+0xfffd0fc8>
    21d4:	d9002a17 	ldw	r4,168(sp)
    21d8:	d8002785 	stb	zero,158(sp)
    21dc:	203d2d16 	blt	r4,zero,1694 <__alt_data_end+0xfffd0954>
    21e0:	00bfdfc4 	movi	r2,-129
    21e4:	90a4703a 	and	r18,r18,r2
    21e8:	003a6106 	br	b70 <__alt_data_end+0xfffcfe30>
    21ec:	01000074 	movhi	r4,1
    21f0:	213b5f84 	addi	r4,r4,-4738
    21f4:	d9002c15 	stw	r4,176(sp)
    21f8:	003bea06 	br	11a4 <__alt_data_end+0xfffd0464>
    21fc:	d9002d17 	ldw	r4,180(sp)
    2200:	d9801e04 	addi	r6,sp,120
    2204:	b80b883a 	mov	r5,r23
    2208:	00074dc0 	call	74dc <__sprint_r>
    220c:	103a7b1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    2210:	d8c02017 	ldw	r3,128(sp)
    2214:	da000404 	addi	r8,sp,16
    2218:	003d4106 	br	1720 <__alt_data_end+0xfffd09e0>
    221c:	d8801f17 	ldw	r2,124(sp)
    2220:	01400074 	movhi	r5,1
    2224:	01000044 	movi	r4,1
    2228:	18c00044 	addi	r3,r3,1
    222c:	10800044 	addi	r2,r2,1
    2230:	297b5f04 	addi	r5,r5,-4740
    2234:	41000115 	stw	r4,4(r8)
    2238:	41400015 	stw	r5,0(r8)
    223c:	d8c02015 	stw	r3,128(sp)
    2240:	d8801f15 	stw	r2,124(sp)
    2244:	010001c4 	movi	r4,7
    2248:	20805c16 	blt	r4,r2,23bc <___vfprintf_internal_r+0x1bd0>
    224c:	42000204 	addi	r8,r8,8
    2250:	8800041e 	bne	r17,zero,2264 <___vfprintf_internal_r+0x1a78>
    2254:	d8803317 	ldw	r2,204(sp)
    2258:	1000021e 	bne	r2,zero,2264 <___vfprintf_internal_r+0x1a78>
    225c:	9080004c 	andi	r2,r18,1
    2260:	103be726 	beq	r2,zero,1200 <__alt_data_end+0xfffd04c0>
    2264:	d9003717 	ldw	r4,220(sp)
    2268:	d8801f17 	ldw	r2,124(sp)
    226c:	d9403417 	ldw	r5,208(sp)
    2270:	20c7883a 	add	r3,r4,r3
    2274:	10800044 	addi	r2,r2,1
    2278:	41000115 	stw	r4,4(r8)
    227c:	41400015 	stw	r5,0(r8)
    2280:	d8c02015 	stw	r3,128(sp)
    2284:	d8801f15 	stw	r2,124(sp)
    2288:	010001c4 	movi	r4,7
    228c:	20812116 	blt	r4,r2,2714 <___vfprintf_internal_r+0x1f28>
    2290:	42000204 	addi	r8,r8,8
    2294:	0463c83a 	sub	r17,zero,r17
    2298:	0440730e 	bge	zero,r17,2468 <___vfprintf_internal_r+0x1c7c>
    229c:	05800404 	movi	r22,16
    22a0:	b440860e 	bge	r22,r17,24bc <___vfprintf_internal_r+0x1cd0>
    22a4:	01400074 	movhi	r5,1
    22a8:	297b5f84 	addi	r5,r5,-4738
    22ac:	d9402c15 	stw	r5,176(sp)
    22b0:	070001c4 	movi	fp,7
    22b4:	dcc02d17 	ldw	r19,180(sp)
    22b8:	00000306 	br	22c8 <___vfprintf_internal_r+0x1adc>
    22bc:	42000204 	addi	r8,r8,8
    22c0:	8c7ffc04 	addi	r17,r17,-16
    22c4:	b440800e 	bge	r22,r17,24c8 <___vfprintf_internal_r+0x1cdc>
    22c8:	18c00404 	addi	r3,r3,16
    22cc:	10800044 	addi	r2,r2,1
    22d0:	45000015 	stw	r20,0(r8)
    22d4:	45800115 	stw	r22,4(r8)
    22d8:	d8c02015 	stw	r3,128(sp)
    22dc:	d8801f15 	stw	r2,124(sp)
    22e0:	e0bff60e 	bge	fp,r2,22bc <__alt_data_end+0xfffd157c>
    22e4:	d9801e04 	addi	r6,sp,120
    22e8:	b80b883a 	mov	r5,r23
    22ec:	9809883a 	mov	r4,r19
    22f0:	00074dc0 	call	74dc <__sprint_r>
    22f4:	103a411e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    22f8:	d8c02017 	ldw	r3,128(sp)
    22fc:	d8801f17 	ldw	r2,124(sp)
    2300:	da000404 	addi	r8,sp,16
    2304:	003fee06 	br	22c0 <__alt_data_end+0xfffd1580>
    2308:	00bfffc4 	movi	r2,-1
    230c:	003a3f06 	br	c0c <__alt_data_end+0xfffcfecc>
    2310:	008011c4 	movi	r2,71
    2314:	1440b816 	blt	r2,r17,25f8 <___vfprintf_internal_r+0x1e0c>
    2318:	04000074 	movhi	r16,1
    231c:	843b5104 	addi	r16,r16,-4796
    2320:	00c000c4 	movi	r3,3
    2324:	00bfdfc4 	movi	r2,-129
    2328:	d8c02915 	stw	r3,164(sp)
    232c:	90a4703a 	and	r18,r18,r2
    2330:	df002783 	ldbu	fp,158(sp)
    2334:	d8c02b15 	stw	r3,172(sp)
    2338:	d8002a15 	stw	zero,168(sp)
    233c:	d8003215 	stw	zero,200(sp)
    2340:	003b0706 	br	f60 <__alt_data_end+0xfffd0220>
    2344:	d8c02e17 	ldw	r3,184(sp)
    2348:	1cc00017 	ldw	r19,0(r3)
    234c:	18c00104 	addi	r3,r3,4
    2350:	d8c02e15 	stw	r3,184(sp)
    2354:	982dd7fa 	srai	r22,r19,31
    2358:	b005883a 	mov	r2,r22
    235c:	003a7706 	br	d3c <__alt_data_end+0xfffcfffc>
    2360:	d8c02e17 	ldw	r3,184(sp)
    2364:	d9002f17 	ldw	r4,188(sp)
    2368:	18800017 	ldw	r2,0(r3)
    236c:	18c00104 	addi	r3,r3,4
    2370:	d8c02e15 	stw	r3,184(sp)
    2374:	11000015 	stw	r4,0(r2)
    2378:	00395406 	br	8cc <__alt_data_end+0xfffcfb8c>
    237c:	d9002e17 	ldw	r4,184(sp)
    2380:	002d883a 	mov	r22,zero
    2384:	24c00017 	ldw	r19,0(r4)
    2388:	21000104 	addi	r4,r4,4
    238c:	d9002e15 	stw	r4,184(sp)
    2390:	003c0706 	br	13b0 <__alt_data_end+0xfffd0670>
    2394:	d9402e17 	ldw	r5,184(sp)
    2398:	d8c02a17 	ldw	r3,168(sp)
    239c:	002d883a 	mov	r22,zero
    23a0:	28800104 	addi	r2,r5,4
    23a4:	2cc0000b 	ldhu	r19,0(r5)
    23a8:	183dc10e 	bge	r3,zero,1ab0 <__alt_data_end+0xfffd0d70>
    23ac:	003f7506 	br	2184 <__alt_data_end+0xfffd1444>
    23b0:	04000074 	movhi	r16,1
    23b4:	843b4f04 	addi	r16,r16,-4804
    23b8:	003aa706 	br	e58 <__alt_data_end+0xfffd0118>
    23bc:	d9002d17 	ldw	r4,180(sp)
    23c0:	d9801e04 	addi	r6,sp,120
    23c4:	b80b883a 	mov	r5,r23
    23c8:	00074dc0 	call	74dc <__sprint_r>
    23cc:	103a0b1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    23d0:	dc402617 	ldw	r17,152(sp)
    23d4:	d8c02017 	ldw	r3,128(sp)
    23d8:	da000404 	addi	r8,sp,16
    23dc:	003f9c06 	br	2250 <__alt_data_end+0xfffd1510>
    23e0:	ac400043 	ldbu	r17,1(r21)
    23e4:	84000814 	ori	r16,r16,32
    23e8:	ad400044 	addi	r21,r21,1
    23ec:	8c403fcc 	andi	r17,r17,255
    23f0:	8c40201c 	xori	r17,r17,128
    23f4:	8c7fe004 	addi	r17,r17,-128
    23f8:	00395e06 	br	974 <__alt_data_end+0xfffcfc34>
    23fc:	d8c02e15 	stw	r3,184(sp)
    2400:	0039883a 	mov	fp,zero
    2404:	003e3506 	br	1cdc <__alt_data_end+0xfffd0f9c>
    2408:	d9002d17 	ldw	r4,180(sp)
    240c:	d9801e04 	addi	r6,sp,120
    2410:	b80b883a 	mov	r5,r23
    2414:	00074dc0 	call	74dc <__sprint_r>
    2418:	1039f81e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    241c:	d8c02017 	ldw	r3,128(sp)
    2420:	da000404 	addi	r8,sp,16
    2424:	003cd006 	br	1768 <__alt_data_end+0xfffd0a28>
    2428:	8009883a 	mov	r4,r16
    242c:	df003d15 	stw	fp,244(sp)
    2430:	00073480 	call	7348 <strlen>
    2434:	d8802b15 	stw	r2,172(sp)
    2438:	da003d17 	ldw	r8,244(sp)
    243c:	103c200e 	bge	r2,zero,14c0 <__alt_data_end+0xfffd0780>
    2440:	0005883a 	mov	r2,zero
    2444:	003c1e06 	br	14c0 <__alt_data_end+0xfffd0780>
    2448:	d9002d17 	ldw	r4,180(sp)
    244c:	d9801e04 	addi	r6,sp,120
    2450:	b80b883a 	mov	r5,r23
    2454:	00074dc0 	call	74dc <__sprint_r>
    2458:	1039e81e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    245c:	d8c02017 	ldw	r3,128(sp)
    2460:	d8801f17 	ldw	r2,124(sp)
    2464:	da000404 	addi	r8,sp,16
    2468:	d9403317 	ldw	r5,204(sp)
    246c:	10800044 	addi	r2,r2,1
    2470:	44000015 	stw	r16,0(r8)
    2474:	28c7883a 	add	r3,r5,r3
    2478:	003b5b06 	br	11e8 <__alt_data_end+0xfffd04a8>
    247c:	01000074 	movhi	r4,1
    2480:	213b6384 	addi	r4,r4,-4722
    2484:	d9003515 	stw	r4,212(sp)
    2488:	003af206 	br	1054 <__alt_data_end+0xfffd0314>
    248c:	013fffc4 	movi	r4,-1
    2490:	003a0806 	br	cb4 <__alt_data_end+0xfffcff74>
    2494:	0023883a 	mov	r17,zero
    2498:	003d9d06 	br	1b10 <__alt_data_end+0xfffd0dd0>
    249c:	d9002d17 	ldw	r4,180(sp)
    24a0:	d9801e04 	addi	r6,sp,120
    24a4:	b80b883a 	mov	r5,r23
    24a8:	00074dc0 	call	74dc <__sprint_r>
    24ac:	1039d31e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    24b0:	d8c02017 	ldw	r3,128(sp)
    24b4:	da000404 	addi	r8,sp,16
    24b8:	003d9406 	br	1b0c <__alt_data_end+0xfffd0dcc>
    24bc:	01000074 	movhi	r4,1
    24c0:	213b5f84 	addi	r4,r4,-4738
    24c4:	d9002c15 	stw	r4,176(sp)
    24c8:	d9002c17 	ldw	r4,176(sp)
    24cc:	1c47883a 	add	r3,r3,r17
    24d0:	10800044 	addi	r2,r2,1
    24d4:	41000015 	stw	r4,0(r8)
    24d8:	44400115 	stw	r17,4(r8)
    24dc:	d8c02015 	stw	r3,128(sp)
    24e0:	d8801f15 	stw	r2,124(sp)
    24e4:	010001c4 	movi	r4,7
    24e8:	20bfd716 	blt	r4,r2,2448 <__alt_data_end+0xfffd1708>
    24ec:	42000204 	addi	r8,r8,8
    24f0:	003fdd06 	br	2468 <__alt_data_end+0xfffd1728>
    24f4:	d9002d17 	ldw	r4,180(sp)
    24f8:	d9801e04 	addi	r6,sp,120
    24fc:	b80b883a 	mov	r5,r23
    2500:	00074dc0 	call	74dc <__sprint_r>
    2504:	1039bd1e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    2508:	d8802617 	ldw	r2,152(sp)
    250c:	d8c02017 	ldw	r3,128(sp)
    2510:	da000404 	addi	r8,sp,16
    2514:	003e1006 	br	1d58 <__alt_data_end+0xfffd1018>
    2518:	00800044 	movi	r2,1
    251c:	10803fcc 	andi	r2,r2,255
    2520:	00c00044 	movi	r3,1
    2524:	10fa0d26 	beq	r2,r3,d5c <__alt_data_end+0xfffd001c>
    2528:	00c00084 	movi	r3,2
    252c:	10fbaf26 	beq	r2,r3,13ec <__alt_data_end+0xfffd06ac>
    2530:	003a6d06 	br	ee8 <__alt_data_end+0xfffd01a8>
    2534:	01000074 	movhi	r4,1
    2538:	213b6384 	addi	r4,r4,-4722
    253c:	d9003515 	stw	r4,212(sp)
    2540:	003b5406 	br	1294 <__alt_data_end+0xfffd0554>
    2544:	d8802a17 	ldw	r2,168(sp)
    2548:	00c00184 	movi	r3,6
    254c:	1880012e 	bgeu	r3,r2,2554 <___vfprintf_internal_r+0x1d68>
    2550:	1805883a 	mov	r2,r3
    2554:	d8802b15 	stw	r2,172(sp)
    2558:	1000ef16 	blt	r2,zero,2918 <___vfprintf_internal_r+0x212c>
    255c:	04000074 	movhi	r16,1
    2560:	d8802915 	stw	r2,164(sp)
    2564:	dcc02e15 	stw	r19,184(sp)
    2568:	d8002a15 	stw	zero,168(sp)
    256c:	d8003215 	stw	zero,200(sp)
    2570:	843b5d04 	addi	r16,r16,-4748
    2574:	0039883a 	mov	fp,zero
    2578:	003a8006 	br	f7c <__alt_data_end+0xfffd023c>
    257c:	0021883a 	mov	r16,zero
    2580:	003e0706 	br	1da0 <__alt_data_end+0xfffd1060>
    2584:	d9002d17 	ldw	r4,180(sp)
    2588:	d9801e04 	addi	r6,sp,120
    258c:	b80b883a 	mov	r5,r23
    2590:	00074dc0 	call	74dc <__sprint_r>
    2594:	1039991e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    2598:	d8802617 	ldw	r2,152(sp)
    259c:	d9403317 	ldw	r5,204(sp)
    25a0:	d8c02017 	ldw	r3,128(sp)
    25a4:	da000404 	addi	r8,sp,16
    25a8:	2885c83a 	sub	r2,r5,r2
    25ac:	003dfb06 	br	1d9c <__alt_data_end+0xfffd105c>
    25b0:	9080004c 	andi	r2,r18,1
    25b4:	103e8f1e 	bne	r2,zero,1ff4 <__alt_data_end+0xfffd12b4>
    25b8:	d8802117 	ldw	r2,132(sp)
    25bc:	003e9e06 	br	2038 <__alt_data_end+0xfffd12f8>
    25c0:	1025883a 	mov	r18,r2
    25c4:	0039883a 	mov	fp,zero
    25c8:	00800084 	movi	r2,2
    25cc:	003fd306 	br	251c <__alt_data_end+0xfffd17dc>
    25d0:	07000b44 	movi	fp,45
    25d4:	df002785 	stb	fp,158(sp)
    25d8:	003a1b06 	br	e48 <__alt_data_end+0xfffd0108>
    25dc:	00c00b44 	movi	r3,45
    25e0:	d8c02785 	stb	r3,158(sp)
    25e4:	d8802915 	stw	r2,164(sp)
    25e8:	dc802c17 	ldw	r18,176(sp)
    25ec:	d8002a15 	stw	zero,168(sp)
    25f0:	07000b44 	movi	fp,45
    25f4:	003a5e06 	br	f70 <__alt_data_end+0xfffd0230>
    25f8:	04000074 	movhi	r16,1
    25fc:	843b5204 	addi	r16,r16,-4792
    2600:	003f4706 	br	2320 <__alt_data_end+0xfffd15e0>
    2604:	d9002e17 	ldw	r4,184(sp)
    2608:	d9402f17 	ldw	r5,188(sp)
    260c:	20800017 	ldw	r2,0(r4)
    2610:	21000104 	addi	r4,r4,4
    2614:	d9002e15 	stw	r4,184(sp)
    2618:	11400015 	stw	r5,0(r2)
    261c:	0038ab06 	br	8cc <__alt_data_end+0xfffcfb8c>
    2620:	dd802617 	ldw	r22,152(sp)
    2624:	00bfff44 	movi	r2,-3
    2628:	b0801c16 	blt	r22,r2,269c <___vfprintf_internal_r+0x1eb0>
    262c:	d9402a17 	ldw	r5,168(sp)
    2630:	2d801a16 	blt	r5,r22,269c <___vfprintf_internal_r+0x1eb0>
    2634:	dd803215 	stw	r22,200(sp)
    2638:	003e8906 	br	2060 <__alt_data_end+0xfffd1320>
    263c:	01000074 	movhi	r4,1
    2640:	213b5f84 	addi	r4,r4,-4738
    2644:	d9002c15 	stw	r4,176(sp)
    2648:	003c9106 	br	1890 <__alt_data_end+0xfffd0b50>
    264c:	e005883a 	mov	r2,fp
    2650:	003e7906 	br	2038 <__alt_data_end+0xfffd12f8>
    2654:	d9002a17 	ldw	r4,168(sp)
    2658:	df002783 	ldbu	fp,158(sp)
    265c:	dcc02e15 	stw	r19,184(sp)
    2660:	d9002915 	stw	r4,164(sp)
    2664:	d9002b15 	stw	r4,172(sp)
    2668:	d8002a15 	stw	zero,168(sp)
    266c:	d8003215 	stw	zero,200(sp)
    2670:	003a3b06 	br	f60 <__alt_data_end+0xfffd0220>
    2674:	9080004c 	andi	r2,r18,1
    2678:	0039883a 	mov	fp,zero
    267c:	10000426 	beq	r2,zero,2690 <___vfprintf_internal_r+0x1ea4>
    2680:	00800c04 	movi	r2,48
    2684:	dc001dc4 	addi	r16,sp,119
    2688:	d8801dc5 	stb	r2,119(sp)
    268c:	003b6406 	br	1420 <__alt_data_end+0xfffd06e0>
    2690:	d8002b15 	stw	zero,172(sp)
    2694:	dc001e04 	addi	r16,sp,120
    2698:	003a2b06 	br	f48 <__alt_data_end+0xfffd0208>
    269c:	8c7fff84 	addi	r17,r17,-2
    26a0:	b5bfffc4 	addi	r22,r22,-1
    26a4:	dd802615 	stw	r22,152(sp)
    26a8:	dc4022c5 	stb	r17,139(sp)
    26ac:	b000bf16 	blt	r22,zero,29ac <___vfprintf_internal_r+0x21c0>
    26b0:	00800ac4 	movi	r2,43
    26b4:	d8802305 	stb	r2,140(sp)
    26b8:	00800244 	movi	r2,9
    26bc:	15807016 	blt	r2,r22,2880 <___vfprintf_internal_r+0x2094>
    26c0:	00800c04 	movi	r2,48
    26c4:	b5800c04 	addi	r22,r22,48
    26c8:	d8802345 	stb	r2,141(sp)
    26cc:	dd802385 	stb	r22,142(sp)
    26d0:	d88023c4 	addi	r2,sp,143
    26d4:	df0022c4 	addi	fp,sp,139
    26d8:	d8c03317 	ldw	r3,204(sp)
    26dc:	1739c83a 	sub	fp,r2,fp
    26e0:	d9003317 	ldw	r4,204(sp)
    26e4:	e0c7883a 	add	r3,fp,r3
    26e8:	df003a15 	stw	fp,232(sp)
    26ec:	d8c02b15 	stw	r3,172(sp)
    26f0:	00800044 	movi	r2,1
    26f4:	1100b30e 	bge	r2,r4,29c4 <___vfprintf_internal_r+0x21d8>
    26f8:	d8c02b17 	ldw	r3,172(sp)
    26fc:	18c00044 	addi	r3,r3,1
    2700:	d8c02b15 	stw	r3,172(sp)
    2704:	1805883a 	mov	r2,r3
    2708:	1800ac16 	blt	r3,zero,29bc <___vfprintf_internal_r+0x21d0>
    270c:	d8003215 	stw	zero,200(sp)
    2710:	003e5d06 	br	2088 <__alt_data_end+0xfffd1348>
    2714:	d9002d17 	ldw	r4,180(sp)
    2718:	d9801e04 	addi	r6,sp,120
    271c:	b80b883a 	mov	r5,r23
    2720:	00074dc0 	call	74dc <__sprint_r>
    2724:	1039351e 	bne	r2,zero,bfc <__alt_data_end+0xfffcfebc>
    2728:	dc402617 	ldw	r17,152(sp)
    272c:	d8c02017 	ldw	r3,128(sp)
    2730:	d8801f17 	ldw	r2,124(sp)
    2734:	da000404 	addi	r8,sp,16
    2738:	003ed606 	br	2294 <__alt_data_end+0xfffd1554>
    273c:	182b883a 	mov	r21,r3
    2740:	d8002a15 	stw	zero,168(sp)
    2744:	00388c06 	br	978 <__alt_data_end+0xfffcfc38>
    2748:	d8802a17 	ldw	r2,168(sp)
    274c:	103e071e 	bne	r2,zero,1f6c <__alt_data_end+0xfffd122c>
    2750:	dc002a15 	stw	r16,168(sp)
    2754:	003e0506 	br	1f6c <__alt_data_end+0xfffd122c>
    2758:	d9002a17 	ldw	r4,168(sp)
    275c:	20c00044 	addi	r3,r4,1
    2760:	003e0f06 	br	1fa0 <__alt_data_end+0xfffd1260>
    2764:	01400184 	movi	r5,6
    2768:	d9402a15 	stw	r5,168(sp)
    276c:	003dff06 	br	1f6c <__alt_data_end+0xfffd122c>
    2770:	d8802104 	addi	r2,sp,132
    2774:	d8800315 	stw	r2,12(sp)
    2778:	d8802504 	addi	r2,sp,148
    277c:	d8800215 	stw	r2,8(sp)
    2780:	d8802604 	addi	r2,sp,152
    2784:	d8800115 	stw	r2,4(sp)
    2788:	d8802a17 	ldw	r2,168(sp)
    278c:	d9403617 	ldw	r5,216(sp)
    2790:	d9002d17 	ldw	r4,180(sp)
    2794:	d8800015 	stw	r2,0(sp)
    2798:	01c000c4 	movi	r7,3
    279c:	980d883a 	mov	r6,r19
    27a0:	da003d15 	stw	r8,244(sp)
    27a4:	0002f1c0 	call	2f1c <_dtoa_r>
    27a8:	d8c02a17 	ldw	r3,168(sp)
    27ac:	da003d17 	ldw	r8,244(sp)
    27b0:	1021883a 	mov	r16,r2
    27b4:	10f9883a 	add	fp,r2,r3
    27b8:	81000007 	ldb	r4,0(r16)
    27bc:	00800c04 	movi	r2,48
    27c0:	20805e26 	beq	r4,r2,293c <___vfprintf_internal_r+0x2150>
    27c4:	d8c02617 	ldw	r3,152(sp)
    27c8:	e0f9883a 	add	fp,fp,r3
    27cc:	003e0a06 	br	1ff8 <__alt_data_end+0xfffd12b8>
    27d0:	00c00b44 	movi	r3,45
    27d4:	24e0003c 	xorhi	r19,r4,32768
    27d8:	d8c02905 	stb	r3,164(sp)
    27dc:	003de906 	br	1f84 <__alt_data_end+0xfffd1244>
    27e0:	d8c03217 	ldw	r3,200(sp)
    27e4:	00c07a0e 	bge	zero,r3,29d0 <___vfprintf_internal_r+0x21e4>
    27e8:	00800044 	movi	r2,1
    27ec:	d9003317 	ldw	r4,204(sp)
    27f0:	1105883a 	add	r2,r2,r4
    27f4:	d8802b15 	stw	r2,172(sp)
    27f8:	10004e16 	blt	r2,zero,2934 <___vfprintf_internal_r+0x2148>
    27fc:	044019c4 	movi	r17,103
    2800:	003e2106 	br	2088 <__alt_data_end+0xfffd1348>
    2804:	d9002a17 	ldw	r4,168(sp)
    2808:	d8802104 	addi	r2,sp,132
    280c:	d8800315 	stw	r2,12(sp)
    2810:	d9000015 	stw	r4,0(sp)
    2814:	d8802504 	addi	r2,sp,148
    2818:	d9403617 	ldw	r5,216(sp)
    281c:	d9002d17 	ldw	r4,180(sp)
    2820:	d8800215 	stw	r2,8(sp)
    2824:	d8802604 	addi	r2,sp,152
    2828:	d8800115 	stw	r2,4(sp)
    282c:	01c000c4 	movi	r7,3
    2830:	980d883a 	mov	r6,r19
    2834:	da003d15 	stw	r8,244(sp)
    2838:	0002f1c0 	call	2f1c <_dtoa_r>
    283c:	d8c02a17 	ldw	r3,168(sp)
    2840:	da003d17 	ldw	r8,244(sp)
    2844:	1021883a 	mov	r16,r2
    2848:	00801184 	movi	r2,70
    284c:	80f9883a 	add	fp,r16,r3
    2850:	88bfd926 	beq	r17,r2,27b8 <__alt_data_end+0xfffd1a78>
    2854:	003de806 	br	1ff8 <__alt_data_end+0xfffd12b8>
    2858:	d9002a17 	ldw	r4,168(sp)
    285c:	00c04d0e 	bge	zero,r3,2994 <___vfprintf_internal_r+0x21a8>
    2860:	2000441e 	bne	r4,zero,2974 <___vfprintf_internal_r+0x2188>
    2864:	9480004c 	andi	r18,r18,1
    2868:	9000421e 	bne	r18,zero,2974 <___vfprintf_internal_r+0x2188>
    286c:	1805883a 	mov	r2,r3
    2870:	18006f16 	blt	r3,zero,2a30 <___vfprintf_internal_r+0x2244>
    2874:	d8c03217 	ldw	r3,200(sp)
    2878:	d8c02b15 	stw	r3,172(sp)
    287c:	003e0206 	br	2088 <__alt_data_end+0xfffd1348>
    2880:	df0022c4 	addi	fp,sp,139
    2884:	dc002a15 	stw	r16,168(sp)
    2888:	4027883a 	mov	r19,r8
    288c:	e021883a 	mov	r16,fp
    2890:	b009883a 	mov	r4,r22
    2894:	01400284 	movi	r5,10
    2898:	00006500 	call	650 <__modsi3>
    289c:	10800c04 	addi	r2,r2,48
    28a0:	843fffc4 	addi	r16,r16,-1
    28a4:	b009883a 	mov	r4,r22
    28a8:	01400284 	movi	r5,10
    28ac:	80800005 	stb	r2,0(r16)
    28b0:	00005cc0 	call	5cc <__divsi3>
    28b4:	102d883a 	mov	r22,r2
    28b8:	00800244 	movi	r2,9
    28bc:	15bff416 	blt	r2,r22,2890 <__alt_data_end+0xfffd1b50>
    28c0:	9811883a 	mov	r8,r19
    28c4:	b0800c04 	addi	r2,r22,48
    28c8:	8027883a 	mov	r19,r16
    28cc:	997fffc4 	addi	r5,r19,-1
    28d0:	98bfffc5 	stb	r2,-1(r19)
    28d4:	dc002a17 	ldw	r16,168(sp)
    28d8:	2f006d2e 	bgeu	r5,fp,2a90 <___vfprintf_internal_r+0x22a4>
    28dc:	d9c02384 	addi	r7,sp,142
    28e0:	3ccfc83a 	sub	r7,r7,r19
    28e4:	d9002344 	addi	r4,sp,141
    28e8:	e1cf883a 	add	r7,fp,r7
    28ec:	00000106 	br	28f4 <___vfprintf_internal_r+0x2108>
    28f0:	28800003 	ldbu	r2,0(r5)
    28f4:	20800005 	stb	r2,0(r4)
    28f8:	21000044 	addi	r4,r4,1
    28fc:	29400044 	addi	r5,r5,1
    2900:	393ffb1e 	bne	r7,r4,28f0 <__alt_data_end+0xfffd1bb0>
    2904:	d8802304 	addi	r2,sp,140
    2908:	14c5c83a 	sub	r2,r2,r19
    290c:	d8c02344 	addi	r3,sp,141
    2910:	1885883a 	add	r2,r3,r2
    2914:	003f7006 	br	26d8 <__alt_data_end+0xfffd1998>
    2918:	0005883a 	mov	r2,zero
    291c:	003f0f06 	br	255c <__alt_data_end+0xfffd181c>
    2920:	d8c03217 	ldw	r3,200(sp)
    2924:	18c00044 	addi	r3,r3,1
    2928:	d8c02b15 	stw	r3,172(sp)
    292c:	1805883a 	mov	r2,r3
    2930:	183fb20e 	bge	r3,zero,27fc <__alt_data_end+0xfffd1abc>
    2934:	0005883a 	mov	r2,zero
    2938:	003fb006 	br	27fc <__alt_data_end+0xfffd1abc>
    293c:	d9003617 	ldw	r4,216(sp)
    2940:	000d883a 	mov	r6,zero
    2944:	000f883a 	mov	r7,zero
    2948:	980b883a 	mov	r5,r19
    294c:	d8c03c15 	stw	r3,240(sp)
    2950:	da003d15 	stw	r8,244(sp)
    2954:	000be100 	call	be10 <__eqdf2>
    2958:	d8c03c17 	ldw	r3,240(sp)
    295c:	da003d17 	ldw	r8,244(sp)
    2960:	103f9826 	beq	r2,zero,27c4 <__alt_data_end+0xfffd1a84>
    2964:	00800044 	movi	r2,1
    2968:	10c7c83a 	sub	r3,r2,r3
    296c:	d8c02615 	stw	r3,152(sp)
    2970:	003f9506 	br	27c8 <__alt_data_end+0xfffd1a88>
    2974:	d9002a17 	ldw	r4,168(sp)
    2978:	d8c03217 	ldw	r3,200(sp)
    297c:	20800044 	addi	r2,r4,1
    2980:	1885883a 	add	r2,r3,r2
    2984:	d8802b15 	stw	r2,172(sp)
    2988:	103dbf0e 	bge	r2,zero,2088 <__alt_data_end+0xfffd1348>
    298c:	0005883a 	mov	r2,zero
    2990:	003dbd06 	br	2088 <__alt_data_end+0xfffd1348>
    2994:	2000201e 	bne	r4,zero,2a18 <___vfprintf_internal_r+0x222c>
    2998:	9480004c 	andi	r18,r18,1
    299c:	90001e1e 	bne	r18,zero,2a18 <___vfprintf_internal_r+0x222c>
    29a0:	00800044 	movi	r2,1
    29a4:	d8802b15 	stw	r2,172(sp)
    29a8:	003db706 	br	2088 <__alt_data_end+0xfffd1348>
    29ac:	00800b44 	movi	r2,45
    29b0:	05adc83a 	sub	r22,zero,r22
    29b4:	d8802305 	stb	r2,140(sp)
    29b8:	003f3f06 	br	26b8 <__alt_data_end+0xfffd1978>
    29bc:	0005883a 	mov	r2,zero
    29c0:	003f5206 	br	270c <__alt_data_end+0xfffd19cc>
    29c4:	90a4703a 	and	r18,r18,r2
    29c8:	903f4e26 	beq	r18,zero,2704 <__alt_data_end+0xfffd19c4>
    29cc:	003f4a06 	br	26f8 <__alt_data_end+0xfffd19b8>
    29d0:	00800084 	movi	r2,2
    29d4:	10c5c83a 	sub	r2,r2,r3
    29d8:	003f8406 	br	27ec <__alt_data_end+0xfffd1aac>
    29dc:	d9402e17 	ldw	r5,184(sp)
    29e0:	d9002e17 	ldw	r4,184(sp)
    29e4:	ac400043 	ldbu	r17,1(r21)
    29e8:	29400017 	ldw	r5,0(r5)
    29ec:	20800104 	addi	r2,r4,4
    29f0:	d8802e15 	stw	r2,184(sp)
    29f4:	d9402a15 	stw	r5,168(sp)
    29f8:	182b883a 	mov	r21,r3
    29fc:	283e7b0e 	bge	r5,zero,23ec <__alt_data_end+0xfffd16ac>
    2a00:	8c403fcc 	andi	r17,r17,255
    2a04:	017fffc4 	movi	r5,-1
    2a08:	8c40201c 	xori	r17,r17,128
    2a0c:	d9402a15 	stw	r5,168(sp)
    2a10:	8c7fe004 	addi	r17,r17,-128
    2a14:	0037d706 	br	974 <__alt_data_end+0xfffcfc34>
    2a18:	d8c02a17 	ldw	r3,168(sp)
    2a1c:	18c00084 	addi	r3,r3,2
    2a20:	d8c02b15 	stw	r3,172(sp)
    2a24:	1805883a 	mov	r2,r3
    2a28:	183d970e 	bge	r3,zero,2088 <__alt_data_end+0xfffd1348>
    2a2c:	003fd706 	br	298c <__alt_data_end+0xfffd1c4c>
    2a30:	0005883a 	mov	r2,zero
    2a34:	003f8f06 	br	2874 <__alt_data_end+0xfffd1b34>
    2a38:	9080004c 	andi	r2,r18,1
    2a3c:	103f821e 	bne	r2,zero,2848 <__alt_data_end+0xfffd1b08>
    2a40:	d8802117 	ldw	r2,132(sp)
    2a44:	1405c83a 	sub	r2,r2,r16
    2a48:	d8803315 	stw	r2,204(sp)
    2a4c:	b47ef426 	beq	r22,r17,2620 <__alt_data_end+0xfffd18e0>
    2a50:	dd802617 	ldw	r22,152(sp)
    2a54:	003f1206 	br	26a0 <__alt_data_end+0xfffd1960>
    2a58:	d8c02b03 	ldbu	r3,172(sp)
    2a5c:	d8c02785 	stb	r3,158(sp)
    2a60:	0038df06 	br	de0 <__alt_data_end+0xfffd00a0>
    2a64:	d8c02b03 	ldbu	r3,172(sp)
    2a68:	d8c02785 	stb	r3,158(sp)
    2a6c:	0038aa06 	br	d18 <__alt_data_end+0xfffcffd8>
    2a70:	d8c02b03 	ldbu	r3,172(sp)
    2a74:	d8c02785 	stb	r3,158(sp)
    2a78:	003a4306 	br	1388 <__alt_data_end+0xfffd0648>
    2a7c:	d8c02b03 	ldbu	r3,172(sp)
    2a80:	d8c02785 	stb	r3,158(sp)
    2a84:	003af506 	br	165c <__alt_data_end+0xfffd091c>
    2a88:	0005883a 	mov	r2,zero
    2a8c:	003d7b06 	br	207c <__alt_data_end+0xfffd133c>
    2a90:	d8802344 	addi	r2,sp,141
    2a94:	003f1006 	br	26d8 <__alt_data_end+0xfffd1998>
    2a98:	d8c02b03 	ldbu	r3,172(sp)
    2a9c:	d8c02785 	stb	r3,158(sp)
    2aa0:	0038fd06 	br	e98 <__alt_data_end+0xfffd0158>
    2aa4:	d8c02b03 	ldbu	r3,172(sp)
    2aa8:	d8c02785 	stb	r3,158(sp)
    2aac:	003a9706 	br	150c <__alt_data_end+0xfffd07cc>
    2ab0:	d8c02b03 	ldbu	r3,172(sp)
    2ab4:	d8c02785 	stb	r3,158(sp)
    2ab8:	003a1806 	br	131c <__alt_data_end+0xfffd05dc>
    2abc:	d8c02b03 	ldbu	r3,172(sp)
    2ac0:	d8c02785 	stb	r3,158(sp)
    2ac4:	003abe06 	br	15c0 <__alt_data_end+0xfffd0880>

00002ac8 <__vfprintf_internal>:
    2ac8:	00800074 	movhi	r2,1
    2acc:	1082c704 	addi	r2,r2,2844
    2ad0:	300f883a 	mov	r7,r6
    2ad4:	280d883a 	mov	r6,r5
    2ad8:	200b883a 	mov	r5,r4
    2adc:	11000017 	ldw	r4,0(r2)
    2ae0:	00007ec1 	jmpi	7ec <___vfprintf_internal_r>

00002ae4 <__sbprintf>:
    2ae4:	2880030b 	ldhu	r2,12(r5)
    2ae8:	2ac01917 	ldw	r11,100(r5)
    2aec:	2a80038b 	ldhu	r10,14(r5)
    2af0:	2a400717 	ldw	r9,28(r5)
    2af4:	2a000917 	ldw	r8,36(r5)
    2af8:	defee204 	addi	sp,sp,-1144
    2afc:	00c10004 	movi	r3,1024
    2b00:	dc011a15 	stw	r16,1128(sp)
    2b04:	10bfff4c 	andi	r2,r2,65533
    2b08:	2821883a 	mov	r16,r5
    2b0c:	d8cb883a 	add	r5,sp,r3
    2b10:	dc811c15 	stw	r18,1136(sp)
    2b14:	dc411b15 	stw	r17,1132(sp)
    2b18:	dfc11d15 	stw	ra,1140(sp)
    2b1c:	2025883a 	mov	r18,r4
    2b20:	d881030d 	sth	r2,1036(sp)
    2b24:	dac11915 	stw	r11,1124(sp)
    2b28:	da81038d 	sth	r10,1038(sp)
    2b2c:	da410715 	stw	r9,1052(sp)
    2b30:	da010915 	stw	r8,1060(sp)
    2b34:	dec10015 	stw	sp,1024(sp)
    2b38:	dec10415 	stw	sp,1040(sp)
    2b3c:	d8c10215 	stw	r3,1032(sp)
    2b40:	d8c10515 	stw	r3,1044(sp)
    2b44:	d8010615 	stw	zero,1048(sp)
    2b48:	00007ec0 	call	7ec <___vfprintf_internal_r>
    2b4c:	1023883a 	mov	r17,r2
    2b50:	10000416 	blt	r2,zero,2b64 <__sbprintf+0x80>
    2b54:	d9410004 	addi	r5,sp,1024
    2b58:	9009883a 	mov	r4,r18
    2b5c:	00047c00 	call	47c0 <_fflush_r>
    2b60:	10000d1e 	bne	r2,zero,2b98 <__sbprintf+0xb4>
    2b64:	d881030b 	ldhu	r2,1036(sp)
    2b68:	1080100c 	andi	r2,r2,64
    2b6c:	10000326 	beq	r2,zero,2b7c <__sbprintf+0x98>
    2b70:	8080030b 	ldhu	r2,12(r16)
    2b74:	10801014 	ori	r2,r2,64
    2b78:	8080030d 	sth	r2,12(r16)
    2b7c:	8805883a 	mov	r2,r17
    2b80:	dfc11d17 	ldw	ra,1140(sp)
    2b84:	dc811c17 	ldw	r18,1136(sp)
    2b88:	dc411b17 	ldw	r17,1132(sp)
    2b8c:	dc011a17 	ldw	r16,1128(sp)
    2b90:	dec11e04 	addi	sp,sp,1144
    2b94:	f800283a 	ret
    2b98:	047fffc4 	movi	r17,-1
    2b9c:	003ff106 	br	2b64 <__alt_data_end+0xfffd1e24>

00002ba0 <__swsetup_r>:
    2ba0:	00800074 	movhi	r2,1
    2ba4:	defffd04 	addi	sp,sp,-12
    2ba8:	1082c704 	addi	r2,r2,2844
    2bac:	dc400115 	stw	r17,4(sp)
    2bb0:	2023883a 	mov	r17,r4
    2bb4:	11000017 	ldw	r4,0(r2)
    2bb8:	dc000015 	stw	r16,0(sp)
    2bbc:	dfc00215 	stw	ra,8(sp)
    2bc0:	2821883a 	mov	r16,r5
    2bc4:	20000226 	beq	r4,zero,2bd0 <__swsetup_r+0x30>
    2bc8:	20800e17 	ldw	r2,56(r4)
    2bcc:	10003126 	beq	r2,zero,2c94 <__swsetup_r+0xf4>
    2bd0:	8080030b 	ldhu	r2,12(r16)
    2bd4:	10c0020c 	andi	r3,r2,8
    2bd8:	1009883a 	mov	r4,r2
    2bdc:	18000f26 	beq	r3,zero,2c1c <__swsetup_r+0x7c>
    2be0:	80c00417 	ldw	r3,16(r16)
    2be4:	18001526 	beq	r3,zero,2c3c <__swsetup_r+0x9c>
    2be8:	1100004c 	andi	r4,r2,1
    2bec:	20001c1e 	bne	r4,zero,2c60 <__swsetup_r+0xc0>
    2bf0:	1080008c 	andi	r2,r2,2
    2bf4:	1000291e 	bne	r2,zero,2c9c <__swsetup_r+0xfc>
    2bf8:	80800517 	ldw	r2,20(r16)
    2bfc:	80800215 	stw	r2,8(r16)
    2c00:	18001c26 	beq	r3,zero,2c74 <__swsetup_r+0xd4>
    2c04:	0005883a 	mov	r2,zero
    2c08:	dfc00217 	ldw	ra,8(sp)
    2c0c:	dc400117 	ldw	r17,4(sp)
    2c10:	dc000017 	ldw	r16,0(sp)
    2c14:	dec00304 	addi	sp,sp,12
    2c18:	f800283a 	ret
    2c1c:	2080040c 	andi	r2,r4,16
    2c20:	10002e26 	beq	r2,zero,2cdc <__swsetup_r+0x13c>
    2c24:	2080010c 	andi	r2,r4,4
    2c28:	10001e1e 	bne	r2,zero,2ca4 <__swsetup_r+0x104>
    2c2c:	80c00417 	ldw	r3,16(r16)
    2c30:	20800214 	ori	r2,r4,8
    2c34:	8080030d 	sth	r2,12(r16)
    2c38:	183feb1e 	bne	r3,zero,2be8 <__alt_data_end+0xfffd1ea8>
    2c3c:	1100a00c 	andi	r4,r2,640
    2c40:	01408004 	movi	r5,512
    2c44:	217fe826 	beq	r4,r5,2be8 <__alt_data_end+0xfffd1ea8>
    2c48:	800b883a 	mov	r5,r16
    2c4c:	8809883a 	mov	r4,r17
    2c50:	00052940 	call	5294 <__smakebuf_r>
    2c54:	8080030b 	ldhu	r2,12(r16)
    2c58:	80c00417 	ldw	r3,16(r16)
    2c5c:	003fe206 	br	2be8 <__alt_data_end+0xfffd1ea8>
    2c60:	80800517 	ldw	r2,20(r16)
    2c64:	80000215 	stw	zero,8(r16)
    2c68:	0085c83a 	sub	r2,zero,r2
    2c6c:	80800615 	stw	r2,24(r16)
    2c70:	183fe41e 	bne	r3,zero,2c04 <__alt_data_end+0xfffd1ec4>
    2c74:	80c0030b 	ldhu	r3,12(r16)
    2c78:	0005883a 	mov	r2,zero
    2c7c:	1900200c 	andi	r4,r3,128
    2c80:	203fe126 	beq	r4,zero,2c08 <__alt_data_end+0xfffd1ec8>
    2c84:	18c01014 	ori	r3,r3,64
    2c88:	80c0030d 	sth	r3,12(r16)
    2c8c:	00bfffc4 	movi	r2,-1
    2c90:	003fdd06 	br	2c08 <__alt_data_end+0xfffd1ec8>
    2c94:	0004bac0 	call	4bac <__sinit>
    2c98:	003fcd06 	br	2bd0 <__alt_data_end+0xfffd1e90>
    2c9c:	0005883a 	mov	r2,zero
    2ca0:	003fd606 	br	2bfc <__alt_data_end+0xfffd1ebc>
    2ca4:	81400c17 	ldw	r5,48(r16)
    2ca8:	28000626 	beq	r5,zero,2cc4 <__swsetup_r+0x124>
    2cac:	80801004 	addi	r2,r16,64
    2cb0:	28800326 	beq	r5,r2,2cc0 <__swsetup_r+0x120>
    2cb4:	8809883a 	mov	r4,r17
    2cb8:	0004d200 	call	4d20 <_free_r>
    2cbc:	8100030b 	ldhu	r4,12(r16)
    2cc0:	80000c15 	stw	zero,48(r16)
    2cc4:	80c00417 	ldw	r3,16(r16)
    2cc8:	00bff6c4 	movi	r2,-37
    2ccc:	1108703a 	and	r4,r2,r4
    2cd0:	80000115 	stw	zero,4(r16)
    2cd4:	80c00015 	stw	r3,0(r16)
    2cd8:	003fd506 	br	2c30 <__alt_data_end+0xfffd1ef0>
    2cdc:	00800244 	movi	r2,9
    2ce0:	88800015 	stw	r2,0(r17)
    2ce4:	20801014 	ori	r2,r4,64
    2ce8:	8080030d 	sth	r2,12(r16)
    2cec:	00bfffc4 	movi	r2,-1
    2cf0:	003fc506 	br	2c08 <__alt_data_end+0xfffd1ec8>

00002cf4 <quorem>:
    2cf4:	defff204 	addi	sp,sp,-56
    2cf8:	ddc00b15 	stw	r23,44(sp)
    2cfc:	20800417 	ldw	r2,16(r4)
    2d00:	2dc00417 	ldw	r23,16(r5)
    2d04:	dfc00d15 	stw	ra,52(sp)
    2d08:	df000c15 	stw	fp,48(sp)
    2d0c:	dd800a15 	stw	r22,40(sp)
    2d10:	dd400915 	stw	r21,36(sp)
    2d14:	dd000815 	stw	r20,32(sp)
    2d18:	dcc00715 	stw	r19,28(sp)
    2d1c:	dc800615 	stw	r18,24(sp)
    2d20:	dc400515 	stw	r17,20(sp)
    2d24:	dc000415 	stw	r16,16(sp)
    2d28:	15c07a16 	blt	r2,r23,2f14 <quorem+0x220>
    2d2c:	bdffffc4 	addi	r23,r23,-1
    2d30:	bde9883a 	add	r20,r23,r23
    2d34:	28c00504 	addi	r3,r5,20
    2d38:	a529883a 	add	r20,r20,r20
    2d3c:	1d39883a 	add	fp,r3,r20
    2d40:	24c00504 	addi	r19,r4,20
    2d44:	d9400215 	stw	r5,8(sp)
    2d48:	9d29883a 	add	r20,r19,r20
    2d4c:	e1400017 	ldw	r5,0(fp)
    2d50:	d9000015 	stw	r4,0(sp)
    2d54:	a1000017 	ldw	r4,0(r20)
    2d58:	29400044 	addi	r5,r5,1
    2d5c:	d8c00115 	stw	r3,4(sp)
    2d60:	dd000315 	stw	r20,12(sp)
    2d64:	00006c40 	call	6c4 <__udivsi3>
    2d68:	1025883a 	mov	r18,r2
    2d6c:	10003026 	beq	r2,zero,2e30 <quorem+0x13c>
    2d70:	dc400117 	ldw	r17,4(sp)
    2d74:	9829883a 	mov	r20,r19
    2d78:	002d883a 	mov	r22,zero
    2d7c:	0021883a 	mov	r16,zero
    2d80:	8d400017 	ldw	r21,0(r17)
    2d84:	900b883a 	mov	r5,r18
    2d88:	8c400104 	addi	r17,r17,4
    2d8c:	a93fffcc 	andi	r4,r21,65535
    2d90:	000ab6c0 	call	ab6c <__mulsi3>
    2d94:	a808d43a 	srli	r4,r21,16
    2d98:	900b883a 	mov	r5,r18
    2d9c:	15ad883a 	add	r22,r2,r22
    2da0:	000ab6c0 	call	ab6c <__mulsi3>
    2da4:	a1000017 	ldw	r4,0(r20)
    2da8:	b00cd43a 	srli	r6,r22,16
    2dac:	b0ffffcc 	andi	r3,r22,65535
    2db0:	217fffcc 	andi	r5,r4,65535
    2db4:	2c21883a 	add	r16,r5,r16
    2db8:	80c7c83a 	sub	r3,r16,r3
    2dbc:	2008d43a 	srli	r4,r4,16
    2dc0:	1185883a 	add	r2,r2,r6
    2dc4:	1821d43a 	srai	r16,r3,16
    2dc8:	117fffcc 	andi	r5,r2,65535
    2dcc:	2149c83a 	sub	r4,r4,r5
    2dd0:	2421883a 	add	r16,r4,r16
    2dd4:	8008943a 	slli	r4,r16,16
    2dd8:	18ffffcc 	andi	r3,r3,65535
    2ddc:	102cd43a 	srli	r22,r2,16
    2de0:	20c8b03a 	or	r4,r4,r3
    2de4:	a1000015 	stw	r4,0(r20)
    2de8:	8021d43a 	srai	r16,r16,16
    2dec:	a5000104 	addi	r20,r20,4
    2df0:	e47fe32e 	bgeu	fp,r17,2d80 <__alt_data_end+0xfffd2040>
    2df4:	d8c00317 	ldw	r3,12(sp)
    2df8:	18800017 	ldw	r2,0(r3)
    2dfc:	10000c1e 	bne	r2,zero,2e30 <quorem+0x13c>
    2e00:	18bfff04 	addi	r2,r3,-4
    2e04:	9880082e 	bgeu	r19,r2,2e28 <quorem+0x134>
    2e08:	18ffff17 	ldw	r3,-4(r3)
    2e0c:	18000326 	beq	r3,zero,2e1c <quorem+0x128>
    2e10:	00000506 	br	2e28 <quorem+0x134>
    2e14:	10c00017 	ldw	r3,0(r2)
    2e18:	1800031e 	bne	r3,zero,2e28 <quorem+0x134>
    2e1c:	10bfff04 	addi	r2,r2,-4
    2e20:	bdffffc4 	addi	r23,r23,-1
    2e24:	98bffb36 	bltu	r19,r2,2e14 <__alt_data_end+0xfffd20d4>
    2e28:	d8c00017 	ldw	r3,0(sp)
    2e2c:	1dc00415 	stw	r23,16(r3)
    2e30:	d9400217 	ldw	r5,8(sp)
    2e34:	d9000017 	ldw	r4,0(sp)
    2e38:	00069340 	call	6934 <__mcmp>
    2e3c:	10002816 	blt	r2,zero,2ee0 <quorem+0x1ec>
    2e40:	dc400117 	ldw	r17,4(sp)
    2e44:	94800044 	addi	r18,r18,1
    2e48:	980d883a 	mov	r6,r19
    2e4c:	0007883a 	mov	r3,zero
    2e50:	31000017 	ldw	r4,0(r6)
    2e54:	89400017 	ldw	r5,0(r17)
    2e58:	31800104 	addi	r6,r6,4
    2e5c:	20bfffcc 	andi	r2,r4,65535
    2e60:	10c7883a 	add	r3,r2,r3
    2e64:	28bfffcc 	andi	r2,r5,65535
    2e68:	1885c83a 	sub	r2,r3,r2
    2e6c:	280ad43a 	srli	r5,r5,16
    2e70:	2008d43a 	srli	r4,r4,16
    2e74:	1007d43a 	srai	r3,r2,16
    2e78:	10bfffcc 	andi	r2,r2,65535
    2e7c:	2149c83a 	sub	r4,r4,r5
    2e80:	20c9883a 	add	r4,r4,r3
    2e84:	200a943a 	slli	r5,r4,16
    2e88:	8c400104 	addi	r17,r17,4
    2e8c:	2007d43a 	srai	r3,r4,16
    2e90:	2884b03a 	or	r2,r5,r2
    2e94:	30bfff15 	stw	r2,-4(r6)
    2e98:	e47fed2e 	bgeu	fp,r17,2e50 <__alt_data_end+0xfffd2110>
    2e9c:	bdc5883a 	add	r2,r23,r23
    2ea0:	1085883a 	add	r2,r2,r2
    2ea4:	9887883a 	add	r3,r19,r2
    2ea8:	18800017 	ldw	r2,0(r3)
    2eac:	10000c1e 	bne	r2,zero,2ee0 <quorem+0x1ec>
    2eb0:	18bfff04 	addi	r2,r3,-4
    2eb4:	9880082e 	bgeu	r19,r2,2ed8 <quorem+0x1e4>
    2eb8:	18ffff17 	ldw	r3,-4(r3)
    2ebc:	18000326 	beq	r3,zero,2ecc <quorem+0x1d8>
    2ec0:	00000506 	br	2ed8 <quorem+0x1e4>
    2ec4:	10c00017 	ldw	r3,0(r2)
    2ec8:	1800031e 	bne	r3,zero,2ed8 <quorem+0x1e4>
    2ecc:	10bfff04 	addi	r2,r2,-4
    2ed0:	bdffffc4 	addi	r23,r23,-1
    2ed4:	98bffb36 	bltu	r19,r2,2ec4 <__alt_data_end+0xfffd2184>
    2ed8:	d8c00017 	ldw	r3,0(sp)
    2edc:	1dc00415 	stw	r23,16(r3)
    2ee0:	9005883a 	mov	r2,r18
    2ee4:	dfc00d17 	ldw	ra,52(sp)
    2ee8:	df000c17 	ldw	fp,48(sp)
    2eec:	ddc00b17 	ldw	r23,44(sp)
    2ef0:	dd800a17 	ldw	r22,40(sp)
    2ef4:	dd400917 	ldw	r21,36(sp)
    2ef8:	dd000817 	ldw	r20,32(sp)
    2efc:	dcc00717 	ldw	r19,28(sp)
    2f00:	dc800617 	ldw	r18,24(sp)
    2f04:	dc400517 	ldw	r17,20(sp)
    2f08:	dc000417 	ldw	r16,16(sp)
    2f0c:	dec00e04 	addi	sp,sp,56
    2f10:	f800283a 	ret
    2f14:	0005883a 	mov	r2,zero
    2f18:	003ff206 	br	2ee4 <__alt_data_end+0xfffd21a4>

00002f1c <_dtoa_r>:
    2f1c:	20801017 	ldw	r2,64(r4)
    2f20:	deffde04 	addi	sp,sp,-136
    2f24:	df002015 	stw	fp,128(sp)
    2f28:	dcc01b15 	stw	r19,108(sp)
    2f2c:	dc801a15 	stw	r18,104(sp)
    2f30:	dc401915 	stw	r17,100(sp)
    2f34:	dc001815 	stw	r16,96(sp)
    2f38:	dfc02115 	stw	ra,132(sp)
    2f3c:	ddc01f15 	stw	r23,124(sp)
    2f40:	dd801e15 	stw	r22,120(sp)
    2f44:	dd401d15 	stw	r21,116(sp)
    2f48:	dd001c15 	stw	r20,112(sp)
    2f4c:	d9c00315 	stw	r7,12(sp)
    2f50:	2039883a 	mov	fp,r4
    2f54:	3023883a 	mov	r17,r6
    2f58:	2825883a 	mov	r18,r5
    2f5c:	dc002417 	ldw	r16,144(sp)
    2f60:	3027883a 	mov	r19,r6
    2f64:	10000826 	beq	r2,zero,2f88 <_dtoa_r+0x6c>
    2f68:	21801117 	ldw	r6,68(r4)
    2f6c:	00c00044 	movi	r3,1
    2f70:	100b883a 	mov	r5,r2
    2f74:	1986983a 	sll	r3,r3,r6
    2f78:	11800115 	stw	r6,4(r2)
    2f7c:	10c00215 	stw	r3,8(r2)
    2f80:	00060580 	call	6058 <_Bfree>
    2f84:	e0001015 	stw	zero,64(fp)
    2f88:	88002e16 	blt	r17,zero,3044 <_dtoa_r+0x128>
    2f8c:	80000015 	stw	zero,0(r16)
    2f90:	889ffc2c 	andhi	r2,r17,32752
    2f94:	00dffc34 	movhi	r3,32752
    2f98:	10c01c26 	beq	r2,r3,300c <_dtoa_r+0xf0>
    2f9c:	000d883a 	mov	r6,zero
    2fa0:	000f883a 	mov	r7,zero
    2fa4:	9009883a 	mov	r4,r18
    2fa8:	980b883a 	mov	r5,r19
    2fac:	000be100 	call	be10 <__eqdf2>
    2fb0:	10002b1e 	bne	r2,zero,3060 <_dtoa_r+0x144>
    2fb4:	d9c02317 	ldw	r7,140(sp)
    2fb8:	00800044 	movi	r2,1
    2fbc:	38800015 	stw	r2,0(r7)
    2fc0:	d8802517 	ldw	r2,148(sp)
    2fc4:	10019e26 	beq	r2,zero,3640 <_dtoa_r+0x724>
    2fc8:	d8c02517 	ldw	r3,148(sp)
    2fcc:	00800074 	movhi	r2,1
    2fd0:	10bb5f44 	addi	r2,r2,-4739
    2fd4:	18800015 	stw	r2,0(r3)
    2fd8:	10bfffc4 	addi	r2,r2,-1
    2fdc:	dfc02117 	ldw	ra,132(sp)
    2fe0:	df002017 	ldw	fp,128(sp)
    2fe4:	ddc01f17 	ldw	r23,124(sp)
    2fe8:	dd801e17 	ldw	r22,120(sp)
    2fec:	dd401d17 	ldw	r21,116(sp)
    2ff0:	dd001c17 	ldw	r20,112(sp)
    2ff4:	dcc01b17 	ldw	r19,108(sp)
    2ff8:	dc801a17 	ldw	r18,104(sp)
    2ffc:	dc401917 	ldw	r17,100(sp)
    3000:	dc001817 	ldw	r16,96(sp)
    3004:	dec02204 	addi	sp,sp,136
    3008:	f800283a 	ret
    300c:	d8c02317 	ldw	r3,140(sp)
    3010:	0089c3c4 	movi	r2,9999
    3014:	18800015 	stw	r2,0(r3)
    3018:	90017726 	beq	r18,zero,35f8 <_dtoa_r+0x6dc>
    301c:	00800074 	movhi	r2,1
    3020:	10bb6b04 	addi	r2,r2,-4692
    3024:	d9002517 	ldw	r4,148(sp)
    3028:	203fec26 	beq	r4,zero,2fdc <__alt_data_end+0xfffd229c>
    302c:	10c000c7 	ldb	r3,3(r2)
    3030:	1801781e 	bne	r3,zero,3614 <_dtoa_r+0x6f8>
    3034:	10c000c4 	addi	r3,r2,3
    3038:	d9802517 	ldw	r6,148(sp)
    303c:	30c00015 	stw	r3,0(r6)
    3040:	003fe606 	br	2fdc <__alt_data_end+0xfffd229c>
    3044:	04e00034 	movhi	r19,32768
    3048:	9cffffc4 	addi	r19,r19,-1
    304c:	00800044 	movi	r2,1
    3050:	8ce6703a 	and	r19,r17,r19
    3054:	80800015 	stw	r2,0(r16)
    3058:	9823883a 	mov	r17,r19
    305c:	003fcc06 	br	2f90 <__alt_data_end+0xfffd2250>
    3060:	d8800204 	addi	r2,sp,8
    3064:	d8800015 	stw	r2,0(sp)
    3068:	d9c00104 	addi	r7,sp,4
    306c:	900b883a 	mov	r5,r18
    3070:	980d883a 	mov	r6,r19
    3074:	e009883a 	mov	r4,fp
    3078:	8820d53a 	srli	r16,r17,20
    307c:	0006d000 	call	6d00 <__d2b>
    3080:	d8800915 	stw	r2,36(sp)
    3084:	8001651e 	bne	r16,zero,361c <_dtoa_r+0x700>
    3088:	dd800217 	ldw	r22,8(sp)
    308c:	dc000117 	ldw	r16,4(sp)
    3090:	00800804 	movi	r2,32
    3094:	b421883a 	add	r16,r22,r16
    3098:	80c10c84 	addi	r3,r16,1074
    309c:	10c2d10e 	bge	r2,r3,3be4 <_dtoa_r+0xcc8>
    30a0:	00801004 	movi	r2,64
    30a4:	81010484 	addi	r4,r16,1042
    30a8:	10c7c83a 	sub	r3,r2,r3
    30ac:	9108d83a 	srl	r4,r18,r4
    30b0:	88e2983a 	sll	r17,r17,r3
    30b4:	2448b03a 	or	r4,r4,r17
    30b8:	000d32c0 	call	d32c <__floatunsidf>
    30bc:	017f8434 	movhi	r5,65040
    30c0:	01800044 	movi	r6,1
    30c4:	1009883a 	mov	r4,r2
    30c8:	194b883a 	add	r5,r3,r5
    30cc:	843fffc4 	addi	r16,r16,-1
    30d0:	d9801115 	stw	r6,68(sp)
    30d4:	000d883a 	mov	r6,zero
    30d8:	01cffe34 	movhi	r7,16376
    30dc:	000c8d40 	call	c8d4 <__subdf3>
    30e0:	0198dbf4 	movhi	r6,25455
    30e4:	01cff4f4 	movhi	r7,16339
    30e8:	3190d844 	addi	r6,r6,17249
    30ec:	39e1e9c4 	addi	r7,r7,-30809
    30f0:	1009883a 	mov	r4,r2
    30f4:	180b883a 	mov	r5,r3
    30f8:	000c0680 	call	c068 <__muldf3>
    30fc:	01a2d874 	movhi	r6,35681
    3100:	01cff1f4 	movhi	r7,16327
    3104:	31b22cc4 	addi	r6,r6,-14157
    3108:	39e28a04 	addi	r7,r7,-30168
    310c:	180b883a 	mov	r5,r3
    3110:	1009883a 	mov	r4,r2
    3114:	000ab940 	call	ab94 <__adddf3>
    3118:	8009883a 	mov	r4,r16
    311c:	1029883a 	mov	r20,r2
    3120:	1823883a 	mov	r17,r3
    3124:	000d2500 	call	d250 <__floatsidf>
    3128:	019427f4 	movhi	r6,20639
    312c:	01cff4f4 	movhi	r7,16339
    3130:	319e7ec4 	addi	r6,r6,31227
    3134:	39d104c4 	addi	r7,r7,17427
    3138:	1009883a 	mov	r4,r2
    313c:	180b883a 	mov	r5,r3
    3140:	000c0680 	call	c068 <__muldf3>
    3144:	100d883a 	mov	r6,r2
    3148:	180f883a 	mov	r7,r3
    314c:	a009883a 	mov	r4,r20
    3150:	880b883a 	mov	r5,r17
    3154:	000ab940 	call	ab94 <__adddf3>
    3158:	1009883a 	mov	r4,r2
    315c:	180b883a 	mov	r5,r3
    3160:	1029883a 	mov	r20,r2
    3164:	1823883a 	mov	r17,r3
    3168:	000d1d00 	call	d1d0 <__fixdfsi>
    316c:	000d883a 	mov	r6,zero
    3170:	000f883a 	mov	r7,zero
    3174:	a009883a 	mov	r4,r20
    3178:	880b883a 	mov	r5,r17
    317c:	d8800515 	stw	r2,20(sp)
    3180:	000bf740 	call	bf74 <__ledf2>
    3184:	10028716 	blt	r2,zero,3ba4 <_dtoa_r+0xc88>
    3188:	d8c00517 	ldw	r3,20(sp)
    318c:	00800584 	movi	r2,22
    3190:	10c27536 	bltu	r2,r3,3b68 <_dtoa_r+0xc4c>
    3194:	180490fa 	slli	r2,r3,3
    3198:	00c00074 	movhi	r3,1
    319c:	18fb8704 	addi	r3,r3,-4580
    31a0:	1885883a 	add	r2,r3,r2
    31a4:	11000017 	ldw	r4,0(r2)
    31a8:	11400117 	ldw	r5,4(r2)
    31ac:	900d883a 	mov	r6,r18
    31b0:	980f883a 	mov	r7,r19
    31b4:	000be980 	call	be98 <__gedf2>
    31b8:	00828d0e 	bge	zero,r2,3bf0 <_dtoa_r+0xcd4>
    31bc:	d9000517 	ldw	r4,20(sp)
    31c0:	d8000e15 	stw	zero,56(sp)
    31c4:	213fffc4 	addi	r4,r4,-1
    31c8:	d9000515 	stw	r4,20(sp)
    31cc:	b42dc83a 	sub	r22,r22,r16
    31d0:	b5bfffc4 	addi	r22,r22,-1
    31d4:	b0026f16 	blt	r22,zero,3b94 <_dtoa_r+0xc78>
    31d8:	d8000815 	stw	zero,32(sp)
    31dc:	d9c00517 	ldw	r7,20(sp)
    31e0:	38026416 	blt	r7,zero,3b74 <_dtoa_r+0xc58>
    31e4:	b1ed883a 	add	r22,r22,r7
    31e8:	d9c00d15 	stw	r7,52(sp)
    31ec:	d8000a15 	stw	zero,40(sp)
    31f0:	d9800317 	ldw	r6,12(sp)
    31f4:	00800244 	movi	r2,9
    31f8:	11811436 	bltu	r2,r6,364c <_dtoa_r+0x730>
    31fc:	00800144 	movi	r2,5
    3200:	1184e10e 	bge	r2,r6,4588 <_dtoa_r+0x166c>
    3204:	31bfff04 	addi	r6,r6,-4
    3208:	d9800315 	stw	r6,12(sp)
    320c:	0023883a 	mov	r17,zero
    3210:	d9800317 	ldw	r6,12(sp)
    3214:	008000c4 	movi	r2,3
    3218:	30836726 	beq	r6,r2,3fb8 <_dtoa_r+0x109c>
    321c:	1183410e 	bge	r2,r6,3f24 <_dtoa_r+0x1008>
    3220:	d9c00317 	ldw	r7,12(sp)
    3224:	00800104 	movi	r2,4
    3228:	38827c26 	beq	r7,r2,3c1c <_dtoa_r+0xd00>
    322c:	00800144 	movi	r2,5
    3230:	3884c41e 	bne	r7,r2,4544 <_dtoa_r+0x1628>
    3234:	00800044 	movi	r2,1
    3238:	d8800b15 	stw	r2,44(sp)
    323c:	d8c00517 	ldw	r3,20(sp)
    3240:	d9002217 	ldw	r4,136(sp)
    3244:	1907883a 	add	r3,r3,r4
    3248:	19800044 	addi	r6,r3,1
    324c:	d8c00c15 	stw	r3,48(sp)
    3250:	d9800615 	stw	r6,24(sp)
    3254:	0183a40e 	bge	zero,r6,40e8 <_dtoa_r+0x11cc>
    3258:	d9800617 	ldw	r6,24(sp)
    325c:	3021883a 	mov	r16,r6
    3260:	e0001115 	stw	zero,68(fp)
    3264:	008005c4 	movi	r2,23
    3268:	1184c92e 	bgeu	r2,r6,4590 <_dtoa_r+0x1674>
    326c:	00c00044 	movi	r3,1
    3270:	00800104 	movi	r2,4
    3274:	1085883a 	add	r2,r2,r2
    3278:	11000504 	addi	r4,r2,20
    327c:	180b883a 	mov	r5,r3
    3280:	18c00044 	addi	r3,r3,1
    3284:	313ffb2e 	bgeu	r6,r4,3274 <__alt_data_end+0xfffd2534>
    3288:	e1401115 	stw	r5,68(fp)
    328c:	e009883a 	mov	r4,fp
    3290:	0005fb00 	call	5fb0 <_Balloc>
    3294:	d8800715 	stw	r2,28(sp)
    3298:	e0801015 	stw	r2,64(fp)
    329c:	00800384 	movi	r2,14
    32a0:	1400f736 	bltu	r2,r16,3680 <_dtoa_r+0x764>
    32a4:	8800f626 	beq	r17,zero,3680 <_dtoa_r+0x764>
    32a8:	d9c00517 	ldw	r7,20(sp)
    32ac:	01c39a0e 	bge	zero,r7,4118 <_dtoa_r+0x11fc>
    32b0:	388003cc 	andi	r2,r7,15
    32b4:	100490fa 	slli	r2,r2,3
    32b8:	382bd13a 	srai	r21,r7,4
    32bc:	00c00074 	movhi	r3,1
    32c0:	18fb8704 	addi	r3,r3,-4580
    32c4:	1885883a 	add	r2,r3,r2
    32c8:	a8c0040c 	andi	r3,r21,16
    32cc:	12400017 	ldw	r9,0(r2)
    32d0:	12000117 	ldw	r8,4(r2)
    32d4:	18037926 	beq	r3,zero,40bc <_dtoa_r+0x11a0>
    32d8:	00800074 	movhi	r2,1
    32dc:	10bb7d04 	addi	r2,r2,-4620
    32e0:	11800817 	ldw	r6,32(r2)
    32e4:	11c00917 	ldw	r7,36(r2)
    32e8:	9009883a 	mov	r4,r18
    32ec:	980b883a 	mov	r5,r19
    32f0:	da001715 	stw	r8,92(sp)
    32f4:	da401615 	stw	r9,88(sp)
    32f8:	000b4400 	call	b440 <__divdf3>
    32fc:	da001717 	ldw	r8,92(sp)
    3300:	da401617 	ldw	r9,88(sp)
    3304:	ad4003cc 	andi	r21,r21,15
    3308:	040000c4 	movi	r16,3
    330c:	1023883a 	mov	r17,r2
    3310:	1829883a 	mov	r20,r3
    3314:	a8001126 	beq	r21,zero,335c <_dtoa_r+0x440>
    3318:	05c00074 	movhi	r23,1
    331c:	bdfb7d04 	addi	r23,r23,-4620
    3320:	4805883a 	mov	r2,r9
    3324:	4007883a 	mov	r3,r8
    3328:	a980004c 	andi	r6,r21,1
    332c:	1009883a 	mov	r4,r2
    3330:	a82bd07a 	srai	r21,r21,1
    3334:	180b883a 	mov	r5,r3
    3338:	30000426 	beq	r6,zero,334c <_dtoa_r+0x430>
    333c:	b9800017 	ldw	r6,0(r23)
    3340:	b9c00117 	ldw	r7,4(r23)
    3344:	84000044 	addi	r16,r16,1
    3348:	000c0680 	call	c068 <__muldf3>
    334c:	bdc00204 	addi	r23,r23,8
    3350:	a83ff51e 	bne	r21,zero,3328 <__alt_data_end+0xfffd25e8>
    3354:	1013883a 	mov	r9,r2
    3358:	1811883a 	mov	r8,r3
    335c:	480d883a 	mov	r6,r9
    3360:	400f883a 	mov	r7,r8
    3364:	8809883a 	mov	r4,r17
    3368:	a00b883a 	mov	r5,r20
    336c:	000b4400 	call	b440 <__divdf3>
    3370:	d8800f15 	stw	r2,60(sp)
    3374:	d8c01015 	stw	r3,64(sp)
    3378:	d8c00e17 	ldw	r3,56(sp)
    337c:	18000626 	beq	r3,zero,3398 <_dtoa_r+0x47c>
    3380:	d9000f17 	ldw	r4,60(sp)
    3384:	d9401017 	ldw	r5,64(sp)
    3388:	000d883a 	mov	r6,zero
    338c:	01cffc34 	movhi	r7,16368
    3390:	000bf740 	call	bf74 <__ledf2>
    3394:	10040b16 	blt	r2,zero,43c4 <_dtoa_r+0x14a8>
    3398:	8009883a 	mov	r4,r16
    339c:	000d2500 	call	d250 <__floatsidf>
    33a0:	d9800f17 	ldw	r6,60(sp)
    33a4:	d9c01017 	ldw	r7,64(sp)
    33a8:	1009883a 	mov	r4,r2
    33ac:	180b883a 	mov	r5,r3
    33b0:	000c0680 	call	c068 <__muldf3>
    33b4:	000d883a 	mov	r6,zero
    33b8:	01d00734 	movhi	r7,16412
    33bc:	1009883a 	mov	r4,r2
    33c0:	180b883a 	mov	r5,r3
    33c4:	000ab940 	call	ab94 <__adddf3>
    33c8:	1021883a 	mov	r16,r2
    33cc:	d8800617 	ldw	r2,24(sp)
    33d0:	047f3034 	movhi	r17,64704
    33d4:	1c63883a 	add	r17,r3,r17
    33d8:	10031826 	beq	r2,zero,403c <_dtoa_r+0x1120>
    33dc:	d8c00517 	ldw	r3,20(sp)
    33e0:	db000617 	ldw	r12,24(sp)
    33e4:	d8c01315 	stw	r3,76(sp)
    33e8:	d9000b17 	ldw	r4,44(sp)
    33ec:	20038f26 	beq	r4,zero,422c <_dtoa_r+0x1310>
    33f0:	60bfffc4 	addi	r2,r12,-1
    33f4:	100490fa 	slli	r2,r2,3
    33f8:	00c00074 	movhi	r3,1
    33fc:	18fb8704 	addi	r3,r3,-4580
    3400:	1885883a 	add	r2,r3,r2
    3404:	11800017 	ldw	r6,0(r2)
    3408:	11c00117 	ldw	r7,4(r2)
    340c:	d8800717 	ldw	r2,28(sp)
    3410:	0009883a 	mov	r4,zero
    3414:	014ff834 	movhi	r5,16352
    3418:	db001615 	stw	r12,88(sp)
    341c:	15c00044 	addi	r23,r2,1
    3420:	000b4400 	call	b440 <__divdf3>
    3424:	800d883a 	mov	r6,r16
    3428:	880f883a 	mov	r7,r17
    342c:	1009883a 	mov	r4,r2
    3430:	180b883a 	mov	r5,r3
    3434:	000c8d40 	call	c8d4 <__subdf3>
    3438:	d9401017 	ldw	r5,64(sp)
    343c:	d9000f17 	ldw	r4,60(sp)
    3440:	102b883a 	mov	r21,r2
    3444:	d8c01215 	stw	r3,72(sp)
    3448:	000d1d00 	call	d1d0 <__fixdfsi>
    344c:	1009883a 	mov	r4,r2
    3450:	1029883a 	mov	r20,r2
    3454:	000d2500 	call	d250 <__floatsidf>
    3458:	d9000f17 	ldw	r4,60(sp)
    345c:	d9401017 	ldw	r5,64(sp)
    3460:	100d883a 	mov	r6,r2
    3464:	180f883a 	mov	r7,r3
    3468:	000c8d40 	call	c8d4 <__subdf3>
    346c:	1823883a 	mov	r17,r3
    3470:	d8c00717 	ldw	r3,28(sp)
    3474:	d9401217 	ldw	r5,72(sp)
    3478:	a2000c04 	addi	r8,r20,48
    347c:	1021883a 	mov	r16,r2
    3480:	1a000005 	stb	r8,0(r3)
    3484:	800d883a 	mov	r6,r16
    3488:	880f883a 	mov	r7,r17
    348c:	a809883a 	mov	r4,r21
    3490:	4029883a 	mov	r20,r8
    3494:	000be980 	call	be98 <__gedf2>
    3498:	00841d16 	blt	zero,r2,4510 <_dtoa_r+0x15f4>
    349c:	800d883a 	mov	r6,r16
    34a0:	880f883a 	mov	r7,r17
    34a4:	0009883a 	mov	r4,zero
    34a8:	014ffc34 	movhi	r5,16368
    34ac:	000c8d40 	call	c8d4 <__subdf3>
    34b0:	d9401217 	ldw	r5,72(sp)
    34b4:	100d883a 	mov	r6,r2
    34b8:	180f883a 	mov	r7,r3
    34bc:	a809883a 	mov	r4,r21
    34c0:	000be980 	call	be98 <__gedf2>
    34c4:	db001617 	ldw	r12,88(sp)
    34c8:	00840e16 	blt	zero,r2,4504 <_dtoa_r+0x15e8>
    34cc:	00800044 	movi	r2,1
    34d0:	13006b0e 	bge	r2,r12,3680 <_dtoa_r+0x764>
    34d4:	d9000717 	ldw	r4,28(sp)
    34d8:	dd800f15 	stw	r22,60(sp)
    34dc:	dcc01015 	stw	r19,64(sp)
    34e0:	2319883a 	add	r12,r4,r12
    34e4:	dcc01217 	ldw	r19,72(sp)
    34e8:	602d883a 	mov	r22,r12
    34ec:	dc801215 	stw	r18,72(sp)
    34f0:	b825883a 	mov	r18,r23
    34f4:	00000906 	br	351c <_dtoa_r+0x600>
    34f8:	000c8d40 	call	c8d4 <__subdf3>
    34fc:	a80d883a 	mov	r6,r21
    3500:	980f883a 	mov	r7,r19
    3504:	1009883a 	mov	r4,r2
    3508:	180b883a 	mov	r5,r3
    350c:	000bf740 	call	bf74 <__ledf2>
    3510:	1003e816 	blt	r2,zero,44b4 <_dtoa_r+0x1598>
    3514:	b825883a 	mov	r18,r23
    3518:	bd83e926 	beq	r23,r22,44c0 <_dtoa_r+0x15a4>
    351c:	a809883a 	mov	r4,r21
    3520:	980b883a 	mov	r5,r19
    3524:	000d883a 	mov	r6,zero
    3528:	01d00934 	movhi	r7,16420
    352c:	000c0680 	call	c068 <__muldf3>
    3530:	000d883a 	mov	r6,zero
    3534:	01d00934 	movhi	r7,16420
    3538:	8009883a 	mov	r4,r16
    353c:	880b883a 	mov	r5,r17
    3540:	102b883a 	mov	r21,r2
    3544:	1827883a 	mov	r19,r3
    3548:	000c0680 	call	c068 <__muldf3>
    354c:	180b883a 	mov	r5,r3
    3550:	1009883a 	mov	r4,r2
    3554:	1821883a 	mov	r16,r3
    3558:	1023883a 	mov	r17,r2
    355c:	000d1d00 	call	d1d0 <__fixdfsi>
    3560:	1009883a 	mov	r4,r2
    3564:	1029883a 	mov	r20,r2
    3568:	000d2500 	call	d250 <__floatsidf>
    356c:	8809883a 	mov	r4,r17
    3570:	800b883a 	mov	r5,r16
    3574:	100d883a 	mov	r6,r2
    3578:	180f883a 	mov	r7,r3
    357c:	000c8d40 	call	c8d4 <__subdf3>
    3580:	a5000c04 	addi	r20,r20,48
    3584:	a80d883a 	mov	r6,r21
    3588:	980f883a 	mov	r7,r19
    358c:	1009883a 	mov	r4,r2
    3590:	180b883a 	mov	r5,r3
    3594:	95000005 	stb	r20,0(r18)
    3598:	1021883a 	mov	r16,r2
    359c:	1823883a 	mov	r17,r3
    35a0:	000bf740 	call	bf74 <__ledf2>
    35a4:	bdc00044 	addi	r23,r23,1
    35a8:	800d883a 	mov	r6,r16
    35ac:	880f883a 	mov	r7,r17
    35b0:	0009883a 	mov	r4,zero
    35b4:	014ffc34 	movhi	r5,16368
    35b8:	103fcf0e 	bge	r2,zero,34f8 <__alt_data_end+0xfffd27b8>
    35bc:	d8c01317 	ldw	r3,76(sp)
    35c0:	d8c00515 	stw	r3,20(sp)
    35c4:	d9400917 	ldw	r5,36(sp)
    35c8:	e009883a 	mov	r4,fp
    35cc:	00060580 	call	6058 <_Bfree>
    35d0:	d9000517 	ldw	r4,20(sp)
    35d4:	d9802317 	ldw	r6,140(sp)
    35d8:	d9c02517 	ldw	r7,148(sp)
    35dc:	b8000005 	stb	zero,0(r23)
    35e0:	20800044 	addi	r2,r4,1
    35e4:	30800015 	stw	r2,0(r6)
    35e8:	3802aa26 	beq	r7,zero,4094 <_dtoa_r+0x1178>
    35ec:	3dc00015 	stw	r23,0(r7)
    35f0:	d8800717 	ldw	r2,28(sp)
    35f4:	003e7906 	br	2fdc <__alt_data_end+0xfffd229c>
    35f8:	00800434 	movhi	r2,16
    35fc:	10bfffc4 	addi	r2,r2,-1
    3600:	88a2703a 	and	r17,r17,r2
    3604:	883e851e 	bne	r17,zero,301c <__alt_data_end+0xfffd22dc>
    3608:	00800074 	movhi	r2,1
    360c:	10bb6804 	addi	r2,r2,-4704
    3610:	003e8406 	br	3024 <__alt_data_end+0xfffd22e4>
    3614:	10c00204 	addi	r3,r2,8
    3618:	003e8706 	br	3038 <__alt_data_end+0xfffd22f8>
    361c:	01400434 	movhi	r5,16
    3620:	297fffc4 	addi	r5,r5,-1
    3624:	994a703a 	and	r5,r19,r5
    3628:	9009883a 	mov	r4,r18
    362c:	843f0044 	addi	r16,r16,-1023
    3630:	294ffc34 	orhi	r5,r5,16368
    3634:	dd800217 	ldw	r22,8(sp)
    3638:	d8001115 	stw	zero,68(sp)
    363c:	003ea506 	br	30d4 <__alt_data_end+0xfffd2394>
    3640:	00800074 	movhi	r2,1
    3644:	10bb5f04 	addi	r2,r2,-4740
    3648:	003e6406 	br	2fdc <__alt_data_end+0xfffd229c>
    364c:	e0001115 	stw	zero,68(fp)
    3650:	000b883a 	mov	r5,zero
    3654:	e009883a 	mov	r4,fp
    3658:	0005fb00 	call	5fb0 <_Balloc>
    365c:	01bfffc4 	movi	r6,-1
    3660:	01c00044 	movi	r7,1
    3664:	d8800715 	stw	r2,28(sp)
    3668:	d9800c15 	stw	r6,48(sp)
    366c:	e0801015 	stw	r2,64(fp)
    3670:	d8000315 	stw	zero,12(sp)
    3674:	d9c00b15 	stw	r7,44(sp)
    3678:	d9800615 	stw	r6,24(sp)
    367c:	d8002215 	stw	zero,136(sp)
    3680:	d8800117 	ldw	r2,4(sp)
    3684:	10008916 	blt	r2,zero,38ac <_dtoa_r+0x990>
    3688:	d9000517 	ldw	r4,20(sp)
    368c:	00c00384 	movi	r3,14
    3690:	19008616 	blt	r3,r4,38ac <_dtoa_r+0x990>
    3694:	200490fa 	slli	r2,r4,3
    3698:	00c00074 	movhi	r3,1
    369c:	d9802217 	ldw	r6,136(sp)
    36a0:	18fb8704 	addi	r3,r3,-4580
    36a4:	1885883a 	add	r2,r3,r2
    36a8:	14000017 	ldw	r16,0(r2)
    36ac:	14400117 	ldw	r17,4(r2)
    36b0:	30016316 	blt	r6,zero,3c40 <_dtoa_r+0xd24>
    36b4:	800d883a 	mov	r6,r16
    36b8:	880f883a 	mov	r7,r17
    36bc:	9009883a 	mov	r4,r18
    36c0:	980b883a 	mov	r5,r19
    36c4:	000b4400 	call	b440 <__divdf3>
    36c8:	180b883a 	mov	r5,r3
    36cc:	1009883a 	mov	r4,r2
    36d0:	000d1d00 	call	d1d0 <__fixdfsi>
    36d4:	1009883a 	mov	r4,r2
    36d8:	102b883a 	mov	r21,r2
    36dc:	000d2500 	call	d250 <__floatsidf>
    36e0:	800d883a 	mov	r6,r16
    36e4:	880f883a 	mov	r7,r17
    36e8:	1009883a 	mov	r4,r2
    36ec:	180b883a 	mov	r5,r3
    36f0:	000c0680 	call	c068 <__muldf3>
    36f4:	100d883a 	mov	r6,r2
    36f8:	180f883a 	mov	r7,r3
    36fc:	9009883a 	mov	r4,r18
    3700:	980b883a 	mov	r5,r19
    3704:	000c8d40 	call	c8d4 <__subdf3>
    3708:	d9c00717 	ldw	r7,28(sp)
    370c:	1009883a 	mov	r4,r2
    3710:	a8800c04 	addi	r2,r21,48
    3714:	38800005 	stb	r2,0(r7)
    3718:	3dc00044 	addi	r23,r7,1
    371c:	d9c00617 	ldw	r7,24(sp)
    3720:	01800044 	movi	r6,1
    3724:	180b883a 	mov	r5,r3
    3728:	2005883a 	mov	r2,r4
    372c:	39803826 	beq	r7,r6,3810 <_dtoa_r+0x8f4>
    3730:	000d883a 	mov	r6,zero
    3734:	01d00934 	movhi	r7,16420
    3738:	000c0680 	call	c068 <__muldf3>
    373c:	000d883a 	mov	r6,zero
    3740:	000f883a 	mov	r7,zero
    3744:	1009883a 	mov	r4,r2
    3748:	180b883a 	mov	r5,r3
    374c:	1025883a 	mov	r18,r2
    3750:	1827883a 	mov	r19,r3
    3754:	000be100 	call	be10 <__eqdf2>
    3758:	103f9a26 	beq	r2,zero,35c4 <__alt_data_end+0xfffd2884>
    375c:	d9c00617 	ldw	r7,24(sp)
    3760:	d8c00717 	ldw	r3,28(sp)
    3764:	b829883a 	mov	r20,r23
    3768:	38bfffc4 	addi	r2,r7,-1
    376c:	18ad883a 	add	r22,r3,r2
    3770:	00000a06 	br	379c <_dtoa_r+0x880>
    3774:	000c0680 	call	c068 <__muldf3>
    3778:	000d883a 	mov	r6,zero
    377c:	000f883a 	mov	r7,zero
    3780:	1009883a 	mov	r4,r2
    3784:	180b883a 	mov	r5,r3
    3788:	1025883a 	mov	r18,r2
    378c:	1827883a 	mov	r19,r3
    3790:	b829883a 	mov	r20,r23
    3794:	000be100 	call	be10 <__eqdf2>
    3798:	103f8a26 	beq	r2,zero,35c4 <__alt_data_end+0xfffd2884>
    379c:	800d883a 	mov	r6,r16
    37a0:	880f883a 	mov	r7,r17
    37a4:	9009883a 	mov	r4,r18
    37a8:	980b883a 	mov	r5,r19
    37ac:	000b4400 	call	b440 <__divdf3>
    37b0:	180b883a 	mov	r5,r3
    37b4:	1009883a 	mov	r4,r2
    37b8:	000d1d00 	call	d1d0 <__fixdfsi>
    37bc:	1009883a 	mov	r4,r2
    37c0:	102b883a 	mov	r21,r2
    37c4:	000d2500 	call	d250 <__floatsidf>
    37c8:	800d883a 	mov	r6,r16
    37cc:	880f883a 	mov	r7,r17
    37d0:	1009883a 	mov	r4,r2
    37d4:	180b883a 	mov	r5,r3
    37d8:	000c0680 	call	c068 <__muldf3>
    37dc:	100d883a 	mov	r6,r2
    37e0:	180f883a 	mov	r7,r3
    37e4:	9009883a 	mov	r4,r18
    37e8:	980b883a 	mov	r5,r19
    37ec:	000c8d40 	call	c8d4 <__subdf3>
    37f0:	aa000c04 	addi	r8,r21,48
    37f4:	a2000005 	stb	r8,0(r20)
    37f8:	000d883a 	mov	r6,zero
    37fc:	01d00934 	movhi	r7,16420
    3800:	1009883a 	mov	r4,r2
    3804:	180b883a 	mov	r5,r3
    3808:	a5c00044 	addi	r23,r20,1
    380c:	b53fd91e 	bne	r22,r20,3774 <__alt_data_end+0xfffd2a34>
    3810:	100d883a 	mov	r6,r2
    3814:	180f883a 	mov	r7,r3
    3818:	1009883a 	mov	r4,r2
    381c:	180b883a 	mov	r5,r3
    3820:	000ab940 	call	ab94 <__adddf3>
    3824:	100d883a 	mov	r6,r2
    3828:	180f883a 	mov	r7,r3
    382c:	8009883a 	mov	r4,r16
    3830:	880b883a 	mov	r5,r17
    3834:	1027883a 	mov	r19,r2
    3838:	1825883a 	mov	r18,r3
    383c:	000bf740 	call	bf74 <__ledf2>
    3840:	10000816 	blt	r2,zero,3864 <_dtoa_r+0x948>
    3844:	980d883a 	mov	r6,r19
    3848:	900f883a 	mov	r7,r18
    384c:	8009883a 	mov	r4,r16
    3850:	880b883a 	mov	r5,r17
    3854:	000be100 	call	be10 <__eqdf2>
    3858:	103f5a1e 	bne	r2,zero,35c4 <__alt_data_end+0xfffd2884>
    385c:	ad40004c 	andi	r21,r21,1
    3860:	a83f5826 	beq	r21,zero,35c4 <__alt_data_end+0xfffd2884>
    3864:	bd3fffc3 	ldbu	r20,-1(r23)
    3868:	b8bfffc4 	addi	r2,r23,-1
    386c:	1007883a 	mov	r3,r2
    3870:	01400e44 	movi	r5,57
    3874:	d9800717 	ldw	r6,28(sp)
    3878:	00000506 	br	3890 <_dtoa_r+0x974>
    387c:	18ffffc4 	addi	r3,r3,-1
    3880:	11824726 	beq	r2,r6,41a0 <_dtoa_r+0x1284>
    3884:	1d000003 	ldbu	r20,0(r3)
    3888:	102f883a 	mov	r23,r2
    388c:	10bfffc4 	addi	r2,r2,-1
    3890:	a1003fcc 	andi	r4,r20,255
    3894:	2100201c 	xori	r4,r4,128
    3898:	213fe004 	addi	r4,r4,-128
    389c:	217ff726 	beq	r4,r5,387c <__alt_data_end+0xfffd2b3c>
    38a0:	a2000044 	addi	r8,r20,1
    38a4:	12000005 	stb	r8,0(r2)
    38a8:	003f4606 	br	35c4 <__alt_data_end+0xfffd2884>
    38ac:	d9000b17 	ldw	r4,44(sp)
    38b0:	2000c826 	beq	r4,zero,3bd4 <_dtoa_r+0xcb8>
    38b4:	d9800317 	ldw	r6,12(sp)
    38b8:	00c00044 	movi	r3,1
    38bc:	1980f90e 	bge	r3,r6,3ca4 <_dtoa_r+0xd88>
    38c0:	d8800617 	ldw	r2,24(sp)
    38c4:	d8c00a17 	ldw	r3,40(sp)
    38c8:	157fffc4 	addi	r21,r2,-1
    38cc:	1d41f316 	blt	r3,r21,409c <_dtoa_r+0x1180>
    38d0:	1d6bc83a 	sub	r21,r3,r21
    38d4:	d9c00617 	ldw	r7,24(sp)
    38d8:	3802aa16 	blt	r7,zero,4384 <_dtoa_r+0x1468>
    38dc:	dd000817 	ldw	r20,32(sp)
    38e0:	d8800617 	ldw	r2,24(sp)
    38e4:	d8c00817 	ldw	r3,32(sp)
    38e8:	01400044 	movi	r5,1
    38ec:	e009883a 	mov	r4,fp
    38f0:	1887883a 	add	r3,r3,r2
    38f4:	d8c00815 	stw	r3,32(sp)
    38f8:	b0ad883a 	add	r22,r22,r2
    38fc:	00063e40 	call	63e4 <__i2b>
    3900:	1023883a 	mov	r17,r2
    3904:	a0000826 	beq	r20,zero,3928 <_dtoa_r+0xa0c>
    3908:	0580070e 	bge	zero,r22,3928 <_dtoa_r+0xa0c>
    390c:	a005883a 	mov	r2,r20
    3910:	b500b916 	blt	r22,r20,3bf8 <_dtoa_r+0xcdc>
    3914:	d9000817 	ldw	r4,32(sp)
    3918:	a0a9c83a 	sub	r20,r20,r2
    391c:	b0adc83a 	sub	r22,r22,r2
    3920:	2089c83a 	sub	r4,r4,r2
    3924:	d9000815 	stw	r4,32(sp)
    3928:	d9800a17 	ldw	r6,40(sp)
    392c:	0181810e 	bge	zero,r6,3f34 <_dtoa_r+0x1018>
    3930:	d9c00b17 	ldw	r7,44(sp)
    3934:	3800b326 	beq	r7,zero,3c04 <_dtoa_r+0xce8>
    3938:	a800b226 	beq	r21,zero,3c04 <_dtoa_r+0xce8>
    393c:	880b883a 	mov	r5,r17
    3940:	a80d883a 	mov	r6,r21
    3944:	e009883a 	mov	r4,fp
    3948:	00066ac0 	call	66ac <__pow5mult>
    394c:	d9800917 	ldw	r6,36(sp)
    3950:	100b883a 	mov	r5,r2
    3954:	e009883a 	mov	r4,fp
    3958:	1023883a 	mov	r17,r2
    395c:	00064200 	call	6420 <__multiply>
    3960:	1021883a 	mov	r16,r2
    3964:	d8800a17 	ldw	r2,40(sp)
    3968:	d9400917 	ldw	r5,36(sp)
    396c:	e009883a 	mov	r4,fp
    3970:	1545c83a 	sub	r2,r2,r21
    3974:	d8800a15 	stw	r2,40(sp)
    3978:	00060580 	call	6058 <_Bfree>
    397c:	d8c00a17 	ldw	r3,40(sp)
    3980:	18009f1e 	bne	r3,zero,3c00 <_dtoa_r+0xce4>
    3984:	05c00044 	movi	r23,1
    3988:	e009883a 	mov	r4,fp
    398c:	b80b883a 	mov	r5,r23
    3990:	00063e40 	call	63e4 <__i2b>
    3994:	d9000d17 	ldw	r4,52(sp)
    3998:	102b883a 	mov	r21,r2
    399c:	2000ce26 	beq	r4,zero,3cd8 <_dtoa_r+0xdbc>
    39a0:	200d883a 	mov	r6,r4
    39a4:	100b883a 	mov	r5,r2
    39a8:	e009883a 	mov	r4,fp
    39ac:	00066ac0 	call	66ac <__pow5mult>
    39b0:	d9800317 	ldw	r6,12(sp)
    39b4:	102b883a 	mov	r21,r2
    39b8:	b981810e 	bge	r23,r6,3fc0 <_dtoa_r+0x10a4>
    39bc:	0027883a 	mov	r19,zero
    39c0:	a8800417 	ldw	r2,16(r21)
    39c4:	05c00804 	movi	r23,32
    39c8:	10800104 	addi	r2,r2,4
    39cc:	1085883a 	add	r2,r2,r2
    39d0:	1085883a 	add	r2,r2,r2
    39d4:	a885883a 	add	r2,r21,r2
    39d8:	11000017 	ldw	r4,0(r2)
    39dc:	00062cc0 	call	62cc <__hi0bits>
    39e0:	b885c83a 	sub	r2,r23,r2
    39e4:	1585883a 	add	r2,r2,r22
    39e8:	108007cc 	andi	r2,r2,31
    39ec:	1000b326 	beq	r2,zero,3cbc <_dtoa_r+0xda0>
    39f0:	00c00804 	movi	r3,32
    39f4:	1887c83a 	sub	r3,r3,r2
    39f8:	01000104 	movi	r4,4
    39fc:	20c2cd0e 	bge	r4,r3,4534 <_dtoa_r+0x1618>
    3a00:	00c00704 	movi	r3,28
    3a04:	1885c83a 	sub	r2,r3,r2
    3a08:	d8c00817 	ldw	r3,32(sp)
    3a0c:	a0a9883a 	add	r20,r20,r2
    3a10:	b0ad883a 	add	r22,r22,r2
    3a14:	1887883a 	add	r3,r3,r2
    3a18:	d8c00815 	stw	r3,32(sp)
    3a1c:	d9800817 	ldw	r6,32(sp)
    3a20:	0180040e 	bge	zero,r6,3a34 <_dtoa_r+0xb18>
    3a24:	800b883a 	mov	r5,r16
    3a28:	e009883a 	mov	r4,fp
    3a2c:	00067ec0 	call	67ec <__lshift>
    3a30:	1021883a 	mov	r16,r2
    3a34:	0580050e 	bge	zero,r22,3a4c <_dtoa_r+0xb30>
    3a38:	a80b883a 	mov	r5,r21
    3a3c:	b00d883a 	mov	r6,r22
    3a40:	e009883a 	mov	r4,fp
    3a44:	00067ec0 	call	67ec <__lshift>
    3a48:	102b883a 	mov	r21,r2
    3a4c:	d9c00e17 	ldw	r7,56(sp)
    3a50:	3801211e 	bne	r7,zero,3ed8 <_dtoa_r+0xfbc>
    3a54:	d9800617 	ldw	r6,24(sp)
    3a58:	0181380e 	bge	zero,r6,3f3c <_dtoa_r+0x1020>
    3a5c:	d8c00b17 	ldw	r3,44(sp)
    3a60:	1800ab1e 	bne	r3,zero,3d10 <_dtoa_r+0xdf4>
    3a64:	dc800717 	ldw	r18,28(sp)
    3a68:	dcc00617 	ldw	r19,24(sp)
    3a6c:	9029883a 	mov	r20,r18
    3a70:	00000206 	br	3a7c <_dtoa_r+0xb60>
    3a74:	00060800 	call	6080 <__multadd>
    3a78:	1021883a 	mov	r16,r2
    3a7c:	a80b883a 	mov	r5,r21
    3a80:	8009883a 	mov	r4,r16
    3a84:	0002cf40 	call	2cf4 <quorem>
    3a88:	10800c04 	addi	r2,r2,48
    3a8c:	90800005 	stb	r2,0(r18)
    3a90:	94800044 	addi	r18,r18,1
    3a94:	9507c83a 	sub	r3,r18,r20
    3a98:	000f883a 	mov	r7,zero
    3a9c:	01800284 	movi	r6,10
    3aa0:	800b883a 	mov	r5,r16
    3aa4:	e009883a 	mov	r4,fp
    3aa8:	1cfff216 	blt	r3,r19,3a74 <__alt_data_end+0xfffd2d34>
    3aac:	1011883a 	mov	r8,r2
    3ab0:	d8800617 	ldw	r2,24(sp)
    3ab4:	0082370e 	bge	zero,r2,4394 <_dtoa_r+0x1478>
    3ab8:	d9000717 	ldw	r4,28(sp)
    3abc:	0025883a 	mov	r18,zero
    3ac0:	20af883a 	add	r23,r4,r2
    3ac4:	01800044 	movi	r6,1
    3ac8:	800b883a 	mov	r5,r16
    3acc:	e009883a 	mov	r4,fp
    3ad0:	da001715 	stw	r8,92(sp)
    3ad4:	00067ec0 	call	67ec <__lshift>
    3ad8:	a80b883a 	mov	r5,r21
    3adc:	1009883a 	mov	r4,r2
    3ae0:	d8800915 	stw	r2,36(sp)
    3ae4:	00069340 	call	6934 <__mcmp>
    3ae8:	da001717 	ldw	r8,92(sp)
    3aec:	0081800e 	bge	zero,r2,40f0 <_dtoa_r+0x11d4>
    3af0:	b93fffc3 	ldbu	r4,-1(r23)
    3af4:	b8bfffc4 	addi	r2,r23,-1
    3af8:	1007883a 	mov	r3,r2
    3afc:	01800e44 	movi	r6,57
    3b00:	d9c00717 	ldw	r7,28(sp)
    3b04:	00000506 	br	3b1c <_dtoa_r+0xc00>
    3b08:	18ffffc4 	addi	r3,r3,-1
    3b0c:	11c12326 	beq	r2,r7,3f9c <_dtoa_r+0x1080>
    3b10:	19000003 	ldbu	r4,0(r3)
    3b14:	102f883a 	mov	r23,r2
    3b18:	10bfffc4 	addi	r2,r2,-1
    3b1c:	21403fcc 	andi	r5,r4,255
    3b20:	2940201c 	xori	r5,r5,128
    3b24:	297fe004 	addi	r5,r5,-128
    3b28:	29bff726 	beq	r5,r6,3b08 <__alt_data_end+0xfffd2dc8>
    3b2c:	21000044 	addi	r4,r4,1
    3b30:	11000005 	stb	r4,0(r2)
    3b34:	a80b883a 	mov	r5,r21
    3b38:	e009883a 	mov	r4,fp
    3b3c:	00060580 	call	6058 <_Bfree>
    3b40:	883ea026 	beq	r17,zero,35c4 <__alt_data_end+0xfffd2884>
    3b44:	90000426 	beq	r18,zero,3b58 <_dtoa_r+0xc3c>
    3b48:	94400326 	beq	r18,r17,3b58 <_dtoa_r+0xc3c>
    3b4c:	900b883a 	mov	r5,r18
    3b50:	e009883a 	mov	r4,fp
    3b54:	00060580 	call	6058 <_Bfree>
    3b58:	880b883a 	mov	r5,r17
    3b5c:	e009883a 	mov	r4,fp
    3b60:	00060580 	call	6058 <_Bfree>
    3b64:	003e9706 	br	35c4 <__alt_data_end+0xfffd2884>
    3b68:	01800044 	movi	r6,1
    3b6c:	d9800e15 	stw	r6,56(sp)
    3b70:	003d9606 	br	31cc <__alt_data_end+0xfffd248c>
    3b74:	d8800817 	ldw	r2,32(sp)
    3b78:	d8c00517 	ldw	r3,20(sp)
    3b7c:	d8000d15 	stw	zero,52(sp)
    3b80:	10c5c83a 	sub	r2,r2,r3
    3b84:	00c9c83a 	sub	r4,zero,r3
    3b88:	d8800815 	stw	r2,32(sp)
    3b8c:	d9000a15 	stw	r4,40(sp)
    3b90:	003d9706 	br	31f0 <__alt_data_end+0xfffd24b0>
    3b94:	05adc83a 	sub	r22,zero,r22
    3b98:	dd800815 	stw	r22,32(sp)
    3b9c:	002d883a 	mov	r22,zero
    3ba0:	003d8e06 	br	31dc <__alt_data_end+0xfffd249c>
    3ba4:	d9000517 	ldw	r4,20(sp)
    3ba8:	000d2500 	call	d250 <__floatsidf>
    3bac:	100d883a 	mov	r6,r2
    3bb0:	180f883a 	mov	r7,r3
    3bb4:	a009883a 	mov	r4,r20
    3bb8:	880b883a 	mov	r5,r17
    3bbc:	000be100 	call	be10 <__eqdf2>
    3bc0:	103d7126 	beq	r2,zero,3188 <__alt_data_end+0xfffd2448>
    3bc4:	d9c00517 	ldw	r7,20(sp)
    3bc8:	39ffffc4 	addi	r7,r7,-1
    3bcc:	d9c00515 	stw	r7,20(sp)
    3bd0:	003d6d06 	br	3188 <__alt_data_end+0xfffd2448>
    3bd4:	dd400a17 	ldw	r21,40(sp)
    3bd8:	dd000817 	ldw	r20,32(sp)
    3bdc:	0023883a 	mov	r17,zero
    3be0:	003f4806 	br	3904 <__alt_data_end+0xfffd2bc4>
    3be4:	10e3c83a 	sub	r17,r2,r3
    3be8:	9448983a 	sll	r4,r18,r17
    3bec:	003d3206 	br	30b8 <__alt_data_end+0xfffd2378>
    3bf0:	d8000e15 	stw	zero,56(sp)
    3bf4:	003d7506 	br	31cc <__alt_data_end+0xfffd248c>
    3bf8:	b005883a 	mov	r2,r22
    3bfc:	003f4506 	br	3914 <__alt_data_end+0xfffd2bd4>
    3c00:	dc000915 	stw	r16,36(sp)
    3c04:	d9800a17 	ldw	r6,40(sp)
    3c08:	d9400917 	ldw	r5,36(sp)
    3c0c:	e009883a 	mov	r4,fp
    3c10:	00066ac0 	call	66ac <__pow5mult>
    3c14:	1021883a 	mov	r16,r2
    3c18:	003f5a06 	br	3984 <__alt_data_end+0xfffd2c44>
    3c1c:	01c00044 	movi	r7,1
    3c20:	d9c00b15 	stw	r7,44(sp)
    3c24:	d8802217 	ldw	r2,136(sp)
    3c28:	0081280e 	bge	zero,r2,40cc <_dtoa_r+0x11b0>
    3c2c:	100d883a 	mov	r6,r2
    3c30:	1021883a 	mov	r16,r2
    3c34:	d8800c15 	stw	r2,48(sp)
    3c38:	d8800615 	stw	r2,24(sp)
    3c3c:	003d8806 	br	3260 <__alt_data_end+0xfffd2520>
    3c40:	d8800617 	ldw	r2,24(sp)
    3c44:	00be9b16 	blt	zero,r2,36b4 <__alt_data_end+0xfffd2974>
    3c48:	10010f1e 	bne	r2,zero,4088 <_dtoa_r+0x116c>
    3c4c:	880b883a 	mov	r5,r17
    3c50:	000d883a 	mov	r6,zero
    3c54:	01d00534 	movhi	r7,16404
    3c58:	8009883a 	mov	r4,r16
    3c5c:	000c0680 	call	c068 <__muldf3>
    3c60:	900d883a 	mov	r6,r18
    3c64:	980f883a 	mov	r7,r19
    3c68:	1009883a 	mov	r4,r2
    3c6c:	180b883a 	mov	r5,r3
    3c70:	000be980 	call	be98 <__gedf2>
    3c74:	002b883a 	mov	r21,zero
    3c78:	0023883a 	mov	r17,zero
    3c7c:	1000bf16 	blt	r2,zero,3f7c <_dtoa_r+0x1060>
    3c80:	d9802217 	ldw	r6,136(sp)
    3c84:	ddc00717 	ldw	r23,28(sp)
    3c88:	018c303a 	nor	r6,zero,r6
    3c8c:	d9800515 	stw	r6,20(sp)
    3c90:	a80b883a 	mov	r5,r21
    3c94:	e009883a 	mov	r4,fp
    3c98:	00060580 	call	6058 <_Bfree>
    3c9c:	883e4926 	beq	r17,zero,35c4 <__alt_data_end+0xfffd2884>
    3ca0:	003fad06 	br	3b58 <__alt_data_end+0xfffd2e18>
    3ca4:	d9c01117 	ldw	r7,68(sp)
    3ca8:	3801bc26 	beq	r7,zero,439c <_dtoa_r+0x1480>
    3cac:	10810cc4 	addi	r2,r2,1075
    3cb0:	dd400a17 	ldw	r21,40(sp)
    3cb4:	dd000817 	ldw	r20,32(sp)
    3cb8:	003f0a06 	br	38e4 <__alt_data_end+0xfffd2ba4>
    3cbc:	00800704 	movi	r2,28
    3cc0:	d9000817 	ldw	r4,32(sp)
    3cc4:	a0a9883a 	add	r20,r20,r2
    3cc8:	b0ad883a 	add	r22,r22,r2
    3ccc:	2089883a 	add	r4,r4,r2
    3cd0:	d9000815 	stw	r4,32(sp)
    3cd4:	003f5106 	br	3a1c <__alt_data_end+0xfffd2cdc>
    3cd8:	d8c00317 	ldw	r3,12(sp)
    3cdc:	b8c1fc0e 	bge	r23,r3,44d0 <_dtoa_r+0x15b4>
    3ce0:	0027883a 	mov	r19,zero
    3ce4:	b805883a 	mov	r2,r23
    3ce8:	003f3e06 	br	39e4 <__alt_data_end+0xfffd2ca4>
    3cec:	880b883a 	mov	r5,r17
    3cf0:	e009883a 	mov	r4,fp
    3cf4:	000f883a 	mov	r7,zero
    3cf8:	01800284 	movi	r6,10
    3cfc:	00060800 	call	6080 <__multadd>
    3d00:	d9000c17 	ldw	r4,48(sp)
    3d04:	1023883a 	mov	r17,r2
    3d08:	0102040e 	bge	zero,r4,451c <_dtoa_r+0x1600>
    3d0c:	d9000615 	stw	r4,24(sp)
    3d10:	0500050e 	bge	zero,r20,3d28 <_dtoa_r+0xe0c>
    3d14:	880b883a 	mov	r5,r17
    3d18:	a00d883a 	mov	r6,r20
    3d1c:	e009883a 	mov	r4,fp
    3d20:	00067ec0 	call	67ec <__lshift>
    3d24:	1023883a 	mov	r17,r2
    3d28:	9801241e 	bne	r19,zero,41bc <_dtoa_r+0x12a0>
    3d2c:	8829883a 	mov	r20,r17
    3d30:	d9000617 	ldw	r4,24(sp)
    3d34:	dcc00717 	ldw	r19,28(sp)
    3d38:	9480004c 	andi	r18,r18,1
    3d3c:	20bfffc4 	addi	r2,r4,-1
    3d40:	9885883a 	add	r2,r19,r2
    3d44:	d8800415 	stw	r2,16(sp)
    3d48:	dc800615 	stw	r18,24(sp)
    3d4c:	a80b883a 	mov	r5,r21
    3d50:	8009883a 	mov	r4,r16
    3d54:	0002cf40 	call	2cf4 <quorem>
    3d58:	880b883a 	mov	r5,r17
    3d5c:	8009883a 	mov	r4,r16
    3d60:	102f883a 	mov	r23,r2
    3d64:	00069340 	call	6934 <__mcmp>
    3d68:	a80b883a 	mov	r5,r21
    3d6c:	a00d883a 	mov	r6,r20
    3d70:	e009883a 	mov	r4,fp
    3d74:	102d883a 	mov	r22,r2
    3d78:	00069940 	call	6994 <__mdiff>
    3d7c:	1007883a 	mov	r3,r2
    3d80:	10800317 	ldw	r2,12(r2)
    3d84:	bc800c04 	addi	r18,r23,48
    3d88:	180b883a 	mov	r5,r3
    3d8c:	10004e1e 	bne	r2,zero,3ec8 <_dtoa_r+0xfac>
    3d90:	8009883a 	mov	r4,r16
    3d94:	d8c01615 	stw	r3,88(sp)
    3d98:	00069340 	call	6934 <__mcmp>
    3d9c:	d8c01617 	ldw	r3,88(sp)
    3da0:	e009883a 	mov	r4,fp
    3da4:	d8801615 	stw	r2,88(sp)
    3da8:	180b883a 	mov	r5,r3
    3dac:	00060580 	call	6058 <_Bfree>
    3db0:	d8801617 	ldw	r2,88(sp)
    3db4:	1000041e 	bne	r2,zero,3dc8 <_dtoa_r+0xeac>
    3db8:	d9800317 	ldw	r6,12(sp)
    3dbc:	3000021e 	bne	r6,zero,3dc8 <_dtoa_r+0xeac>
    3dc0:	d8c00617 	ldw	r3,24(sp)
    3dc4:	18003726 	beq	r3,zero,3ea4 <_dtoa_r+0xf88>
    3dc8:	b0002016 	blt	r22,zero,3e4c <_dtoa_r+0xf30>
    3dcc:	b000041e 	bne	r22,zero,3de0 <_dtoa_r+0xec4>
    3dd0:	d9000317 	ldw	r4,12(sp)
    3dd4:	2000021e 	bne	r4,zero,3de0 <_dtoa_r+0xec4>
    3dd8:	d8c00617 	ldw	r3,24(sp)
    3ddc:	18001b26 	beq	r3,zero,3e4c <_dtoa_r+0xf30>
    3de0:	00810716 	blt	zero,r2,4200 <_dtoa_r+0x12e4>
    3de4:	d8c00417 	ldw	r3,16(sp)
    3de8:	9d800044 	addi	r22,r19,1
    3dec:	9c800005 	stb	r18,0(r19)
    3df0:	b02f883a 	mov	r23,r22
    3df4:	98c10626 	beq	r19,r3,4210 <_dtoa_r+0x12f4>
    3df8:	800b883a 	mov	r5,r16
    3dfc:	000f883a 	mov	r7,zero
    3e00:	01800284 	movi	r6,10
    3e04:	e009883a 	mov	r4,fp
    3e08:	00060800 	call	6080 <__multadd>
    3e0c:	1021883a 	mov	r16,r2
    3e10:	000f883a 	mov	r7,zero
    3e14:	01800284 	movi	r6,10
    3e18:	880b883a 	mov	r5,r17
    3e1c:	e009883a 	mov	r4,fp
    3e20:	8d002526 	beq	r17,r20,3eb8 <_dtoa_r+0xf9c>
    3e24:	00060800 	call	6080 <__multadd>
    3e28:	a00b883a 	mov	r5,r20
    3e2c:	000f883a 	mov	r7,zero
    3e30:	01800284 	movi	r6,10
    3e34:	e009883a 	mov	r4,fp
    3e38:	1023883a 	mov	r17,r2
    3e3c:	00060800 	call	6080 <__multadd>
    3e40:	1029883a 	mov	r20,r2
    3e44:	b027883a 	mov	r19,r22
    3e48:	003fc006 	br	3d4c <__alt_data_end+0xfffd300c>
    3e4c:	9011883a 	mov	r8,r18
    3e50:	00800e0e 	bge	zero,r2,3e8c <_dtoa_r+0xf70>
    3e54:	800b883a 	mov	r5,r16
    3e58:	01800044 	movi	r6,1
    3e5c:	e009883a 	mov	r4,fp
    3e60:	da001715 	stw	r8,92(sp)
    3e64:	00067ec0 	call	67ec <__lshift>
    3e68:	a80b883a 	mov	r5,r21
    3e6c:	1009883a 	mov	r4,r2
    3e70:	1021883a 	mov	r16,r2
    3e74:	00069340 	call	6934 <__mcmp>
    3e78:	da001717 	ldw	r8,92(sp)
    3e7c:	0081960e 	bge	zero,r2,44d8 <_dtoa_r+0x15bc>
    3e80:	00800e44 	movi	r2,57
    3e84:	40817026 	beq	r8,r2,4448 <_dtoa_r+0x152c>
    3e88:	ba000c44 	addi	r8,r23,49
    3e8c:	8825883a 	mov	r18,r17
    3e90:	9dc00044 	addi	r23,r19,1
    3e94:	9a000005 	stb	r8,0(r19)
    3e98:	a023883a 	mov	r17,r20
    3e9c:	dc000915 	stw	r16,36(sp)
    3ea0:	003f2406 	br	3b34 <__alt_data_end+0xfffd2df4>
    3ea4:	00800e44 	movi	r2,57
    3ea8:	9011883a 	mov	r8,r18
    3eac:	90816626 	beq	r18,r2,4448 <_dtoa_r+0x152c>
    3eb0:	05bff516 	blt	zero,r22,3e88 <__alt_data_end+0xfffd3148>
    3eb4:	003ff506 	br	3e8c <__alt_data_end+0xfffd314c>
    3eb8:	00060800 	call	6080 <__multadd>
    3ebc:	1023883a 	mov	r17,r2
    3ec0:	1029883a 	mov	r20,r2
    3ec4:	003fdf06 	br	3e44 <__alt_data_end+0xfffd3104>
    3ec8:	e009883a 	mov	r4,fp
    3ecc:	00060580 	call	6058 <_Bfree>
    3ed0:	00800044 	movi	r2,1
    3ed4:	003fbc06 	br	3dc8 <__alt_data_end+0xfffd3088>
    3ed8:	a80b883a 	mov	r5,r21
    3edc:	8009883a 	mov	r4,r16
    3ee0:	00069340 	call	6934 <__mcmp>
    3ee4:	103edb0e 	bge	r2,zero,3a54 <__alt_data_end+0xfffd2d14>
    3ee8:	800b883a 	mov	r5,r16
    3eec:	000f883a 	mov	r7,zero
    3ef0:	01800284 	movi	r6,10
    3ef4:	e009883a 	mov	r4,fp
    3ef8:	00060800 	call	6080 <__multadd>
    3efc:	1021883a 	mov	r16,r2
    3f00:	d8800517 	ldw	r2,20(sp)
    3f04:	d8c00b17 	ldw	r3,44(sp)
    3f08:	10bfffc4 	addi	r2,r2,-1
    3f0c:	d8800515 	stw	r2,20(sp)
    3f10:	183f761e 	bne	r3,zero,3cec <__alt_data_end+0xfffd2fac>
    3f14:	d9000c17 	ldw	r4,48(sp)
    3f18:	0101730e 	bge	zero,r4,44e8 <_dtoa_r+0x15cc>
    3f1c:	d9000615 	stw	r4,24(sp)
    3f20:	003ed006 	br	3a64 <__alt_data_end+0xfffd2d24>
    3f24:	00800084 	movi	r2,2
    3f28:	3081861e 	bne	r6,r2,4544 <_dtoa_r+0x1628>
    3f2c:	d8000b15 	stw	zero,44(sp)
    3f30:	003f3c06 	br	3c24 <__alt_data_end+0xfffd2ee4>
    3f34:	dc000917 	ldw	r16,36(sp)
    3f38:	003e9206 	br	3984 <__alt_data_end+0xfffd2c44>
    3f3c:	d9c00317 	ldw	r7,12(sp)
    3f40:	00800084 	movi	r2,2
    3f44:	11fec50e 	bge	r2,r7,3a5c <__alt_data_end+0xfffd2d1c>
    3f48:	d9000617 	ldw	r4,24(sp)
    3f4c:	20013c1e 	bne	r4,zero,4440 <_dtoa_r+0x1524>
    3f50:	a80b883a 	mov	r5,r21
    3f54:	000f883a 	mov	r7,zero
    3f58:	01800144 	movi	r6,5
    3f5c:	e009883a 	mov	r4,fp
    3f60:	00060800 	call	6080 <__multadd>
    3f64:	100b883a 	mov	r5,r2
    3f68:	8009883a 	mov	r4,r16
    3f6c:	102b883a 	mov	r21,r2
    3f70:	00069340 	call	6934 <__mcmp>
    3f74:	dc000915 	stw	r16,36(sp)
    3f78:	00bf410e 	bge	zero,r2,3c80 <__alt_data_end+0xfffd2f40>
    3f7c:	d9c00717 	ldw	r7,28(sp)
    3f80:	00800c44 	movi	r2,49
    3f84:	38800005 	stb	r2,0(r7)
    3f88:	d8800517 	ldw	r2,20(sp)
    3f8c:	3dc00044 	addi	r23,r7,1
    3f90:	10800044 	addi	r2,r2,1
    3f94:	d8800515 	stw	r2,20(sp)
    3f98:	003f3d06 	br	3c90 <__alt_data_end+0xfffd2f50>
    3f9c:	d9800517 	ldw	r6,20(sp)
    3fa0:	d9c00717 	ldw	r7,28(sp)
    3fa4:	00800c44 	movi	r2,49
    3fa8:	31800044 	addi	r6,r6,1
    3fac:	d9800515 	stw	r6,20(sp)
    3fb0:	38800005 	stb	r2,0(r7)
    3fb4:	003edf06 	br	3b34 <__alt_data_end+0xfffd2df4>
    3fb8:	d8000b15 	stw	zero,44(sp)
    3fbc:	003c9f06 	br	323c <__alt_data_end+0xfffd24fc>
    3fc0:	903e7e1e 	bne	r18,zero,39bc <__alt_data_end+0xfffd2c7c>
    3fc4:	00800434 	movhi	r2,16
    3fc8:	10bfffc4 	addi	r2,r2,-1
    3fcc:	9884703a 	and	r2,r19,r2
    3fd0:	1000ea1e 	bne	r2,zero,437c <_dtoa_r+0x1460>
    3fd4:	9cdffc2c 	andhi	r19,r19,32752
    3fd8:	9800e826 	beq	r19,zero,437c <_dtoa_r+0x1460>
    3fdc:	d9c00817 	ldw	r7,32(sp)
    3fe0:	b5800044 	addi	r22,r22,1
    3fe4:	04c00044 	movi	r19,1
    3fe8:	39c00044 	addi	r7,r7,1
    3fec:	d9c00815 	stw	r7,32(sp)
    3ff0:	d8800d17 	ldw	r2,52(sp)
    3ff4:	103e721e 	bne	r2,zero,39c0 <__alt_data_end+0xfffd2c80>
    3ff8:	00800044 	movi	r2,1
    3ffc:	003e7906 	br	39e4 <__alt_data_end+0xfffd2ca4>
    4000:	8009883a 	mov	r4,r16
    4004:	000d2500 	call	d250 <__floatsidf>
    4008:	d9800f17 	ldw	r6,60(sp)
    400c:	d9c01017 	ldw	r7,64(sp)
    4010:	1009883a 	mov	r4,r2
    4014:	180b883a 	mov	r5,r3
    4018:	000c0680 	call	c068 <__muldf3>
    401c:	000d883a 	mov	r6,zero
    4020:	01d00734 	movhi	r7,16412
    4024:	1009883a 	mov	r4,r2
    4028:	180b883a 	mov	r5,r3
    402c:	000ab940 	call	ab94 <__adddf3>
    4030:	047f3034 	movhi	r17,64704
    4034:	1021883a 	mov	r16,r2
    4038:	1c63883a 	add	r17,r3,r17
    403c:	d9000f17 	ldw	r4,60(sp)
    4040:	d9401017 	ldw	r5,64(sp)
    4044:	000d883a 	mov	r6,zero
    4048:	01d00534 	movhi	r7,16404
    404c:	000c8d40 	call	c8d4 <__subdf3>
    4050:	800d883a 	mov	r6,r16
    4054:	880f883a 	mov	r7,r17
    4058:	1009883a 	mov	r4,r2
    405c:	180b883a 	mov	r5,r3
    4060:	102b883a 	mov	r21,r2
    4064:	1829883a 	mov	r20,r3
    4068:	000be980 	call	be98 <__gedf2>
    406c:	00806c16 	blt	zero,r2,4220 <_dtoa_r+0x1304>
    4070:	89e0003c 	xorhi	r7,r17,32768
    4074:	800d883a 	mov	r6,r16
    4078:	a809883a 	mov	r4,r21
    407c:	a00b883a 	mov	r5,r20
    4080:	000bf740 	call	bf74 <__ledf2>
    4084:	103d7e0e 	bge	r2,zero,3680 <__alt_data_end+0xfffd2940>
    4088:	002b883a 	mov	r21,zero
    408c:	0023883a 	mov	r17,zero
    4090:	003efb06 	br	3c80 <__alt_data_end+0xfffd2f40>
    4094:	d8800717 	ldw	r2,28(sp)
    4098:	003bd006 	br	2fdc <__alt_data_end+0xfffd229c>
    409c:	d9000a17 	ldw	r4,40(sp)
    40a0:	d9800d17 	ldw	r6,52(sp)
    40a4:	dd400a15 	stw	r21,40(sp)
    40a8:	a905c83a 	sub	r2,r21,r4
    40ac:	308d883a 	add	r6,r6,r2
    40b0:	d9800d15 	stw	r6,52(sp)
    40b4:	002b883a 	mov	r21,zero
    40b8:	003e0606 	br	38d4 <__alt_data_end+0xfffd2b94>
    40bc:	9023883a 	mov	r17,r18
    40c0:	9829883a 	mov	r20,r19
    40c4:	04000084 	movi	r16,2
    40c8:	003c9206 	br	3314 <__alt_data_end+0xfffd25d4>
    40cc:	04000044 	movi	r16,1
    40d0:	dc000c15 	stw	r16,48(sp)
    40d4:	dc000615 	stw	r16,24(sp)
    40d8:	dc002215 	stw	r16,136(sp)
    40dc:	e0001115 	stw	zero,68(fp)
    40e0:	000b883a 	mov	r5,zero
    40e4:	003c6906 	br	328c <__alt_data_end+0xfffd254c>
    40e8:	3021883a 	mov	r16,r6
    40ec:	003ffb06 	br	40dc <__alt_data_end+0xfffd339c>
    40f0:	1000021e 	bne	r2,zero,40fc <_dtoa_r+0x11e0>
    40f4:	4200004c 	andi	r8,r8,1
    40f8:	403e7d1e 	bne	r8,zero,3af0 <__alt_data_end+0xfffd2db0>
    40fc:	01000c04 	movi	r4,48
    4100:	00000106 	br	4108 <_dtoa_r+0x11ec>
    4104:	102f883a 	mov	r23,r2
    4108:	b8bfffc4 	addi	r2,r23,-1
    410c:	10c00007 	ldb	r3,0(r2)
    4110:	193ffc26 	beq	r3,r4,4104 <__alt_data_end+0xfffd33c4>
    4114:	003e8706 	br	3b34 <__alt_data_end+0xfffd2df4>
    4118:	d8800517 	ldw	r2,20(sp)
    411c:	00a3c83a 	sub	r17,zero,r2
    4120:	8800a426 	beq	r17,zero,43b4 <_dtoa_r+0x1498>
    4124:	888003cc 	andi	r2,r17,15
    4128:	100490fa 	slli	r2,r2,3
    412c:	00c00074 	movhi	r3,1
    4130:	18fb8704 	addi	r3,r3,-4580
    4134:	1885883a 	add	r2,r3,r2
    4138:	11800017 	ldw	r6,0(r2)
    413c:	11c00117 	ldw	r7,4(r2)
    4140:	9009883a 	mov	r4,r18
    4144:	980b883a 	mov	r5,r19
    4148:	8823d13a 	srai	r17,r17,4
    414c:	000c0680 	call	c068 <__muldf3>
    4150:	d8800f15 	stw	r2,60(sp)
    4154:	d8c01015 	stw	r3,64(sp)
    4158:	8800e826 	beq	r17,zero,44fc <_dtoa_r+0x15e0>
    415c:	05000074 	movhi	r20,1
    4160:	a53b7d04 	addi	r20,r20,-4620
    4164:	04000084 	movi	r16,2
    4168:	8980004c 	andi	r6,r17,1
    416c:	1009883a 	mov	r4,r2
    4170:	8823d07a 	srai	r17,r17,1
    4174:	180b883a 	mov	r5,r3
    4178:	30000426 	beq	r6,zero,418c <_dtoa_r+0x1270>
    417c:	a1800017 	ldw	r6,0(r20)
    4180:	a1c00117 	ldw	r7,4(r20)
    4184:	84000044 	addi	r16,r16,1
    4188:	000c0680 	call	c068 <__muldf3>
    418c:	a5000204 	addi	r20,r20,8
    4190:	883ff51e 	bne	r17,zero,4168 <__alt_data_end+0xfffd3428>
    4194:	d8800f15 	stw	r2,60(sp)
    4198:	d8c01015 	stw	r3,64(sp)
    419c:	003c7606 	br	3378 <__alt_data_end+0xfffd2638>
    41a0:	00c00c04 	movi	r3,48
    41a4:	10c00005 	stb	r3,0(r2)
    41a8:	d8c00517 	ldw	r3,20(sp)
    41ac:	bd3fffc3 	ldbu	r20,-1(r23)
    41b0:	18c00044 	addi	r3,r3,1
    41b4:	d8c00515 	stw	r3,20(sp)
    41b8:	003db906 	br	38a0 <__alt_data_end+0xfffd2b60>
    41bc:	89400117 	ldw	r5,4(r17)
    41c0:	e009883a 	mov	r4,fp
    41c4:	0005fb00 	call	5fb0 <_Balloc>
    41c8:	89800417 	ldw	r6,16(r17)
    41cc:	89400304 	addi	r5,r17,12
    41d0:	11000304 	addi	r4,r2,12
    41d4:	31800084 	addi	r6,r6,2
    41d8:	318d883a 	add	r6,r6,r6
    41dc:	318d883a 	add	r6,r6,r6
    41e0:	1027883a 	mov	r19,r2
    41e4:	0005d400 	call	5d40 <memcpy>
    41e8:	01800044 	movi	r6,1
    41ec:	980b883a 	mov	r5,r19
    41f0:	e009883a 	mov	r4,fp
    41f4:	00067ec0 	call	67ec <__lshift>
    41f8:	1029883a 	mov	r20,r2
    41fc:	003ecc06 	br	3d30 <__alt_data_end+0xfffd2ff0>
    4200:	00800e44 	movi	r2,57
    4204:	90809026 	beq	r18,r2,4448 <_dtoa_r+0x152c>
    4208:	92000044 	addi	r8,r18,1
    420c:	003f1f06 	br	3e8c <__alt_data_end+0xfffd314c>
    4210:	9011883a 	mov	r8,r18
    4214:	8825883a 	mov	r18,r17
    4218:	a023883a 	mov	r17,r20
    421c:	003e2906 	br	3ac4 <__alt_data_end+0xfffd2d84>
    4220:	002b883a 	mov	r21,zero
    4224:	0023883a 	mov	r17,zero
    4228:	003f5406 	br	3f7c <__alt_data_end+0xfffd323c>
    422c:	61bfffc4 	addi	r6,r12,-1
    4230:	300490fa 	slli	r2,r6,3
    4234:	00c00074 	movhi	r3,1
    4238:	18fb8704 	addi	r3,r3,-4580
    423c:	1885883a 	add	r2,r3,r2
    4240:	11000017 	ldw	r4,0(r2)
    4244:	11400117 	ldw	r5,4(r2)
    4248:	d8800717 	ldw	r2,28(sp)
    424c:	880f883a 	mov	r7,r17
    4250:	d9801215 	stw	r6,72(sp)
    4254:	800d883a 	mov	r6,r16
    4258:	db001615 	stw	r12,88(sp)
    425c:	15c00044 	addi	r23,r2,1
    4260:	000c0680 	call	c068 <__muldf3>
    4264:	d9401017 	ldw	r5,64(sp)
    4268:	d9000f17 	ldw	r4,60(sp)
    426c:	d8c01515 	stw	r3,84(sp)
    4270:	d8801415 	stw	r2,80(sp)
    4274:	000d1d00 	call	d1d0 <__fixdfsi>
    4278:	1009883a 	mov	r4,r2
    427c:	1021883a 	mov	r16,r2
    4280:	000d2500 	call	d250 <__floatsidf>
    4284:	d9000f17 	ldw	r4,60(sp)
    4288:	d9401017 	ldw	r5,64(sp)
    428c:	100d883a 	mov	r6,r2
    4290:	180f883a 	mov	r7,r3
    4294:	000c8d40 	call	c8d4 <__subdf3>
    4298:	1829883a 	mov	r20,r3
    429c:	d8c00717 	ldw	r3,28(sp)
    42a0:	84000c04 	addi	r16,r16,48
    42a4:	1023883a 	mov	r17,r2
    42a8:	1c000005 	stb	r16,0(r3)
    42ac:	db001617 	ldw	r12,88(sp)
    42b0:	00800044 	movi	r2,1
    42b4:	60802226 	beq	r12,r2,4340 <_dtoa_r+0x1424>
    42b8:	d9c00717 	ldw	r7,28(sp)
    42bc:	8805883a 	mov	r2,r17
    42c0:	b82b883a 	mov	r21,r23
    42c4:	3b19883a 	add	r12,r7,r12
    42c8:	6023883a 	mov	r17,r12
    42cc:	a007883a 	mov	r3,r20
    42d0:	dc800f15 	stw	r18,60(sp)
    42d4:	000d883a 	mov	r6,zero
    42d8:	01d00934 	movhi	r7,16420
    42dc:	1009883a 	mov	r4,r2
    42e0:	180b883a 	mov	r5,r3
    42e4:	000c0680 	call	c068 <__muldf3>
    42e8:	180b883a 	mov	r5,r3
    42ec:	1009883a 	mov	r4,r2
    42f0:	1829883a 	mov	r20,r3
    42f4:	1025883a 	mov	r18,r2
    42f8:	000d1d00 	call	d1d0 <__fixdfsi>
    42fc:	1009883a 	mov	r4,r2
    4300:	1021883a 	mov	r16,r2
    4304:	000d2500 	call	d250 <__floatsidf>
    4308:	100d883a 	mov	r6,r2
    430c:	180f883a 	mov	r7,r3
    4310:	9009883a 	mov	r4,r18
    4314:	a00b883a 	mov	r5,r20
    4318:	84000c04 	addi	r16,r16,48
    431c:	000c8d40 	call	c8d4 <__subdf3>
    4320:	ad400044 	addi	r21,r21,1
    4324:	ac3fffc5 	stb	r16,-1(r21)
    4328:	ac7fea1e 	bne	r21,r17,42d4 <__alt_data_end+0xfffd3594>
    432c:	1023883a 	mov	r17,r2
    4330:	d8801217 	ldw	r2,72(sp)
    4334:	dc800f17 	ldw	r18,60(sp)
    4338:	1829883a 	mov	r20,r3
    433c:	b8af883a 	add	r23,r23,r2
    4340:	d9001417 	ldw	r4,80(sp)
    4344:	d9401517 	ldw	r5,84(sp)
    4348:	000d883a 	mov	r6,zero
    434c:	01cff834 	movhi	r7,16352
    4350:	000ab940 	call	ab94 <__adddf3>
    4354:	880d883a 	mov	r6,r17
    4358:	a00f883a 	mov	r7,r20
    435c:	1009883a 	mov	r4,r2
    4360:	180b883a 	mov	r5,r3
    4364:	000bf740 	call	bf74 <__ledf2>
    4368:	10003e0e 	bge	r2,zero,4464 <_dtoa_r+0x1548>
    436c:	d9001317 	ldw	r4,76(sp)
    4370:	bd3fffc3 	ldbu	r20,-1(r23)
    4374:	d9000515 	stw	r4,20(sp)
    4378:	003d3b06 	br	3868 <__alt_data_end+0xfffd2b28>
    437c:	0027883a 	mov	r19,zero
    4380:	003f1b06 	br	3ff0 <__alt_data_end+0xfffd32b0>
    4384:	d8800817 	ldw	r2,32(sp)
    4388:	11e9c83a 	sub	r20,r2,r7
    438c:	0005883a 	mov	r2,zero
    4390:	003d5406 	br	38e4 <__alt_data_end+0xfffd2ba4>
    4394:	00800044 	movi	r2,1
    4398:	003dc706 	br	3ab8 <__alt_data_end+0xfffd2d78>
    439c:	d8c00217 	ldw	r3,8(sp)
    43a0:	00800d84 	movi	r2,54
    43a4:	dd400a17 	ldw	r21,40(sp)
    43a8:	10c5c83a 	sub	r2,r2,r3
    43ac:	dd000817 	ldw	r20,32(sp)
    43b0:	003d4c06 	br	38e4 <__alt_data_end+0xfffd2ba4>
    43b4:	dc800f15 	stw	r18,60(sp)
    43b8:	dcc01015 	stw	r19,64(sp)
    43bc:	04000084 	movi	r16,2
    43c0:	003bed06 	br	3378 <__alt_data_end+0xfffd2638>
    43c4:	d9000617 	ldw	r4,24(sp)
    43c8:	203f0d26 	beq	r4,zero,4000 <__alt_data_end+0xfffd32c0>
    43cc:	d9800c17 	ldw	r6,48(sp)
    43d0:	01bcab0e 	bge	zero,r6,3680 <__alt_data_end+0xfffd2940>
    43d4:	d9401017 	ldw	r5,64(sp)
    43d8:	d9000f17 	ldw	r4,60(sp)
    43dc:	000d883a 	mov	r6,zero
    43e0:	01d00934 	movhi	r7,16420
    43e4:	000c0680 	call	c068 <__muldf3>
    43e8:	81000044 	addi	r4,r16,1
    43ec:	d8800f15 	stw	r2,60(sp)
    43f0:	d8c01015 	stw	r3,64(sp)
    43f4:	000d2500 	call	d250 <__floatsidf>
    43f8:	d9800f17 	ldw	r6,60(sp)
    43fc:	d9c01017 	ldw	r7,64(sp)
    4400:	1009883a 	mov	r4,r2
    4404:	180b883a 	mov	r5,r3
    4408:	000c0680 	call	c068 <__muldf3>
    440c:	01d00734 	movhi	r7,16412
    4410:	000d883a 	mov	r6,zero
    4414:	1009883a 	mov	r4,r2
    4418:	180b883a 	mov	r5,r3
    441c:	000ab940 	call	ab94 <__adddf3>
    4420:	d9c00517 	ldw	r7,20(sp)
    4424:	047f3034 	movhi	r17,64704
    4428:	1021883a 	mov	r16,r2
    442c:	39ffffc4 	addi	r7,r7,-1
    4430:	d9c01315 	stw	r7,76(sp)
    4434:	1c63883a 	add	r17,r3,r17
    4438:	db000c17 	ldw	r12,48(sp)
    443c:	003bea06 	br	33e8 <__alt_data_end+0xfffd26a8>
    4440:	dc000915 	stw	r16,36(sp)
    4444:	003e0e06 	br	3c80 <__alt_data_end+0xfffd2f40>
    4448:	01000e44 	movi	r4,57
    444c:	8825883a 	mov	r18,r17
    4450:	9dc00044 	addi	r23,r19,1
    4454:	99000005 	stb	r4,0(r19)
    4458:	a023883a 	mov	r17,r20
    445c:	dc000915 	stw	r16,36(sp)
    4460:	003da406 	br	3af4 <__alt_data_end+0xfffd2db4>
    4464:	d9801417 	ldw	r6,80(sp)
    4468:	d9c01517 	ldw	r7,84(sp)
    446c:	0009883a 	mov	r4,zero
    4470:	014ff834 	movhi	r5,16352
    4474:	000c8d40 	call	c8d4 <__subdf3>
    4478:	880d883a 	mov	r6,r17
    447c:	a00f883a 	mov	r7,r20
    4480:	1009883a 	mov	r4,r2
    4484:	180b883a 	mov	r5,r3
    4488:	000be980 	call	be98 <__gedf2>
    448c:	00bc7c0e 	bge	zero,r2,3680 <__alt_data_end+0xfffd2940>
    4490:	01000c04 	movi	r4,48
    4494:	00000106 	br	449c <_dtoa_r+0x1580>
    4498:	102f883a 	mov	r23,r2
    449c:	b8bfffc4 	addi	r2,r23,-1
    44a0:	10c00007 	ldb	r3,0(r2)
    44a4:	193ffc26 	beq	r3,r4,4498 <__alt_data_end+0xfffd3758>
    44a8:	d9801317 	ldw	r6,76(sp)
    44ac:	d9800515 	stw	r6,20(sp)
    44b0:	003c4406 	br	35c4 <__alt_data_end+0xfffd2884>
    44b4:	d9801317 	ldw	r6,76(sp)
    44b8:	d9800515 	stw	r6,20(sp)
    44bc:	003cea06 	br	3868 <__alt_data_end+0xfffd2b28>
    44c0:	dd800f17 	ldw	r22,60(sp)
    44c4:	dcc01017 	ldw	r19,64(sp)
    44c8:	dc801217 	ldw	r18,72(sp)
    44cc:	003c6c06 	br	3680 <__alt_data_end+0xfffd2940>
    44d0:	903e031e 	bne	r18,zero,3ce0 <__alt_data_end+0xfffd2fa0>
    44d4:	003ebb06 	br	3fc4 <__alt_data_end+0xfffd3284>
    44d8:	103e6c1e 	bne	r2,zero,3e8c <__alt_data_end+0xfffd314c>
    44dc:	4080004c 	andi	r2,r8,1
    44e0:	103e6a26 	beq	r2,zero,3e8c <__alt_data_end+0xfffd314c>
    44e4:	003e6606 	br	3e80 <__alt_data_end+0xfffd3140>
    44e8:	d8c00317 	ldw	r3,12(sp)
    44ec:	00800084 	movi	r2,2
    44f0:	10c02916 	blt	r2,r3,4598 <_dtoa_r+0x167c>
    44f4:	d9000c17 	ldw	r4,48(sp)
    44f8:	003e8806 	br	3f1c <__alt_data_end+0xfffd31dc>
    44fc:	04000084 	movi	r16,2
    4500:	003b9d06 	br	3378 <__alt_data_end+0xfffd2638>
    4504:	d9001317 	ldw	r4,76(sp)
    4508:	d9000515 	stw	r4,20(sp)
    450c:	003cd606 	br	3868 <__alt_data_end+0xfffd2b28>
    4510:	d8801317 	ldw	r2,76(sp)
    4514:	d8800515 	stw	r2,20(sp)
    4518:	003c2a06 	br	35c4 <__alt_data_end+0xfffd2884>
    451c:	d9800317 	ldw	r6,12(sp)
    4520:	00800084 	movi	r2,2
    4524:	11801516 	blt	r2,r6,457c <_dtoa_r+0x1660>
    4528:	d9c00c17 	ldw	r7,48(sp)
    452c:	d9c00615 	stw	r7,24(sp)
    4530:	003df706 	br	3d10 <__alt_data_end+0xfffd2fd0>
    4534:	193d3926 	beq	r3,r4,3a1c <__alt_data_end+0xfffd2cdc>
    4538:	00c00f04 	movi	r3,60
    453c:	1885c83a 	sub	r2,r3,r2
    4540:	003ddf06 	br	3cc0 <__alt_data_end+0xfffd2f80>
    4544:	e009883a 	mov	r4,fp
    4548:	e0001115 	stw	zero,68(fp)
    454c:	000b883a 	mov	r5,zero
    4550:	0005fb00 	call	5fb0 <_Balloc>
    4554:	d8800715 	stw	r2,28(sp)
    4558:	d8c00717 	ldw	r3,28(sp)
    455c:	00bfffc4 	movi	r2,-1
    4560:	01000044 	movi	r4,1
    4564:	d8800c15 	stw	r2,48(sp)
    4568:	e0c01015 	stw	r3,64(fp)
    456c:	d9000b15 	stw	r4,44(sp)
    4570:	d8800615 	stw	r2,24(sp)
    4574:	d8002215 	stw	zero,136(sp)
    4578:	003c4106 	br	3680 <__alt_data_end+0xfffd2940>
    457c:	d8c00c17 	ldw	r3,48(sp)
    4580:	d8c00615 	stw	r3,24(sp)
    4584:	003e7006 	br	3f48 <__alt_data_end+0xfffd3208>
    4588:	04400044 	movi	r17,1
    458c:	003b2006 	br	3210 <__alt_data_end+0xfffd24d0>
    4590:	000b883a 	mov	r5,zero
    4594:	003b3d06 	br	328c <__alt_data_end+0xfffd254c>
    4598:	d8800c17 	ldw	r2,48(sp)
    459c:	d8800615 	stw	r2,24(sp)
    45a0:	003e6906 	br	3f48 <__alt_data_end+0xfffd3208>

000045a4 <__sflush_r>:
    45a4:	2880030b 	ldhu	r2,12(r5)
    45a8:	defffb04 	addi	sp,sp,-20
    45ac:	dcc00315 	stw	r19,12(sp)
    45b0:	dc400115 	stw	r17,4(sp)
    45b4:	dfc00415 	stw	ra,16(sp)
    45b8:	dc800215 	stw	r18,8(sp)
    45bc:	dc000015 	stw	r16,0(sp)
    45c0:	10c0020c 	andi	r3,r2,8
    45c4:	2823883a 	mov	r17,r5
    45c8:	2027883a 	mov	r19,r4
    45cc:	1800311e 	bne	r3,zero,4694 <__sflush_r+0xf0>
    45d0:	28c00117 	ldw	r3,4(r5)
    45d4:	10820014 	ori	r2,r2,2048
    45d8:	2880030d 	sth	r2,12(r5)
    45dc:	00c04b0e 	bge	zero,r3,470c <__sflush_r+0x168>
    45e0:	8a000a17 	ldw	r8,40(r17)
    45e4:	40002326 	beq	r8,zero,4674 <__sflush_r+0xd0>
    45e8:	9c000017 	ldw	r16,0(r19)
    45ec:	10c4000c 	andi	r3,r2,4096
    45f0:	98000015 	stw	zero,0(r19)
    45f4:	18004826 	beq	r3,zero,4718 <__sflush_r+0x174>
    45f8:	89801417 	ldw	r6,80(r17)
    45fc:	10c0010c 	andi	r3,r2,4
    4600:	18000626 	beq	r3,zero,461c <__sflush_r+0x78>
    4604:	88c00117 	ldw	r3,4(r17)
    4608:	88800c17 	ldw	r2,48(r17)
    460c:	30cdc83a 	sub	r6,r6,r3
    4610:	10000226 	beq	r2,zero,461c <__sflush_r+0x78>
    4614:	88800f17 	ldw	r2,60(r17)
    4618:	308dc83a 	sub	r6,r6,r2
    461c:	89400717 	ldw	r5,28(r17)
    4620:	000f883a 	mov	r7,zero
    4624:	9809883a 	mov	r4,r19
    4628:	403ee83a 	callr	r8
    462c:	00ffffc4 	movi	r3,-1
    4630:	10c04426 	beq	r2,r3,4744 <__sflush_r+0x1a0>
    4634:	88c0030b 	ldhu	r3,12(r17)
    4638:	89000417 	ldw	r4,16(r17)
    463c:	88000115 	stw	zero,4(r17)
    4640:	197dffcc 	andi	r5,r3,63487
    4644:	8940030d 	sth	r5,12(r17)
    4648:	89000015 	stw	r4,0(r17)
    464c:	18c4000c 	andi	r3,r3,4096
    4650:	18002c1e 	bne	r3,zero,4704 <__sflush_r+0x160>
    4654:	89400c17 	ldw	r5,48(r17)
    4658:	9c000015 	stw	r16,0(r19)
    465c:	28000526 	beq	r5,zero,4674 <__sflush_r+0xd0>
    4660:	88801004 	addi	r2,r17,64
    4664:	28800226 	beq	r5,r2,4670 <__sflush_r+0xcc>
    4668:	9809883a 	mov	r4,r19
    466c:	0004d200 	call	4d20 <_free_r>
    4670:	88000c15 	stw	zero,48(r17)
    4674:	0005883a 	mov	r2,zero
    4678:	dfc00417 	ldw	ra,16(sp)
    467c:	dcc00317 	ldw	r19,12(sp)
    4680:	dc800217 	ldw	r18,8(sp)
    4684:	dc400117 	ldw	r17,4(sp)
    4688:	dc000017 	ldw	r16,0(sp)
    468c:	dec00504 	addi	sp,sp,20
    4690:	f800283a 	ret
    4694:	2c800417 	ldw	r18,16(r5)
    4698:	903ff626 	beq	r18,zero,4674 <__alt_data_end+0xfffd3934>
    469c:	2c000017 	ldw	r16,0(r5)
    46a0:	108000cc 	andi	r2,r2,3
    46a4:	2c800015 	stw	r18,0(r5)
    46a8:	84a1c83a 	sub	r16,r16,r18
    46ac:	1000131e 	bne	r2,zero,46fc <__sflush_r+0x158>
    46b0:	28800517 	ldw	r2,20(r5)
    46b4:	88800215 	stw	r2,8(r17)
    46b8:	04000316 	blt	zero,r16,46c8 <__sflush_r+0x124>
    46bc:	003fed06 	br	4674 <__alt_data_end+0xfffd3934>
    46c0:	90a5883a 	add	r18,r18,r2
    46c4:	043feb0e 	bge	zero,r16,4674 <__alt_data_end+0xfffd3934>
    46c8:	88800917 	ldw	r2,36(r17)
    46cc:	89400717 	ldw	r5,28(r17)
    46d0:	800f883a 	mov	r7,r16
    46d4:	900d883a 	mov	r6,r18
    46d8:	9809883a 	mov	r4,r19
    46dc:	103ee83a 	callr	r2
    46e0:	80a1c83a 	sub	r16,r16,r2
    46e4:	00bff616 	blt	zero,r2,46c0 <__alt_data_end+0xfffd3980>
    46e8:	88c0030b 	ldhu	r3,12(r17)
    46ec:	00bfffc4 	movi	r2,-1
    46f0:	18c01014 	ori	r3,r3,64
    46f4:	88c0030d 	sth	r3,12(r17)
    46f8:	003fdf06 	br	4678 <__alt_data_end+0xfffd3938>
    46fc:	0005883a 	mov	r2,zero
    4700:	003fec06 	br	46b4 <__alt_data_end+0xfffd3974>
    4704:	88801415 	stw	r2,80(r17)
    4708:	003fd206 	br	4654 <__alt_data_end+0xfffd3914>
    470c:	28c00f17 	ldw	r3,60(r5)
    4710:	00ffb316 	blt	zero,r3,45e0 <__alt_data_end+0xfffd38a0>
    4714:	003fd706 	br	4674 <__alt_data_end+0xfffd3934>
    4718:	89400717 	ldw	r5,28(r17)
    471c:	000d883a 	mov	r6,zero
    4720:	01c00044 	movi	r7,1
    4724:	9809883a 	mov	r4,r19
    4728:	403ee83a 	callr	r8
    472c:	100d883a 	mov	r6,r2
    4730:	00bfffc4 	movi	r2,-1
    4734:	30801426 	beq	r6,r2,4788 <__sflush_r+0x1e4>
    4738:	8880030b 	ldhu	r2,12(r17)
    473c:	8a000a17 	ldw	r8,40(r17)
    4740:	003fae06 	br	45fc <__alt_data_end+0xfffd38bc>
    4744:	98c00017 	ldw	r3,0(r19)
    4748:	183fba26 	beq	r3,zero,4634 <__alt_data_end+0xfffd38f4>
    474c:	01000744 	movi	r4,29
    4750:	19000626 	beq	r3,r4,476c <__sflush_r+0x1c8>
    4754:	01000584 	movi	r4,22
    4758:	19000426 	beq	r3,r4,476c <__sflush_r+0x1c8>
    475c:	88c0030b 	ldhu	r3,12(r17)
    4760:	18c01014 	ori	r3,r3,64
    4764:	88c0030d 	sth	r3,12(r17)
    4768:	003fc306 	br	4678 <__alt_data_end+0xfffd3938>
    476c:	8880030b 	ldhu	r2,12(r17)
    4770:	88c00417 	ldw	r3,16(r17)
    4774:	88000115 	stw	zero,4(r17)
    4778:	10bdffcc 	andi	r2,r2,63487
    477c:	8880030d 	sth	r2,12(r17)
    4780:	88c00015 	stw	r3,0(r17)
    4784:	003fb306 	br	4654 <__alt_data_end+0xfffd3914>
    4788:	98800017 	ldw	r2,0(r19)
    478c:	103fea26 	beq	r2,zero,4738 <__alt_data_end+0xfffd39f8>
    4790:	00c00744 	movi	r3,29
    4794:	10c00226 	beq	r2,r3,47a0 <__sflush_r+0x1fc>
    4798:	00c00584 	movi	r3,22
    479c:	10c0031e 	bne	r2,r3,47ac <__sflush_r+0x208>
    47a0:	9c000015 	stw	r16,0(r19)
    47a4:	0005883a 	mov	r2,zero
    47a8:	003fb306 	br	4678 <__alt_data_end+0xfffd3938>
    47ac:	88c0030b 	ldhu	r3,12(r17)
    47b0:	3005883a 	mov	r2,r6
    47b4:	18c01014 	ori	r3,r3,64
    47b8:	88c0030d 	sth	r3,12(r17)
    47bc:	003fae06 	br	4678 <__alt_data_end+0xfffd3938>

000047c0 <_fflush_r>:
    47c0:	defffd04 	addi	sp,sp,-12
    47c4:	dc000115 	stw	r16,4(sp)
    47c8:	dfc00215 	stw	ra,8(sp)
    47cc:	2021883a 	mov	r16,r4
    47d0:	20000226 	beq	r4,zero,47dc <_fflush_r+0x1c>
    47d4:	20800e17 	ldw	r2,56(r4)
    47d8:	10000c26 	beq	r2,zero,480c <_fflush_r+0x4c>
    47dc:	2880030f 	ldh	r2,12(r5)
    47e0:	1000051e 	bne	r2,zero,47f8 <_fflush_r+0x38>
    47e4:	0005883a 	mov	r2,zero
    47e8:	dfc00217 	ldw	ra,8(sp)
    47ec:	dc000117 	ldw	r16,4(sp)
    47f0:	dec00304 	addi	sp,sp,12
    47f4:	f800283a 	ret
    47f8:	8009883a 	mov	r4,r16
    47fc:	dfc00217 	ldw	ra,8(sp)
    4800:	dc000117 	ldw	r16,4(sp)
    4804:	dec00304 	addi	sp,sp,12
    4808:	00045a41 	jmpi	45a4 <__sflush_r>
    480c:	d9400015 	stw	r5,0(sp)
    4810:	0004bac0 	call	4bac <__sinit>
    4814:	d9400017 	ldw	r5,0(sp)
    4818:	003ff006 	br	47dc <__alt_data_end+0xfffd3a9c>

0000481c <fflush>:
    481c:	20000526 	beq	r4,zero,4834 <fflush+0x18>
    4820:	00800074 	movhi	r2,1
    4824:	1082c704 	addi	r2,r2,2844
    4828:	200b883a 	mov	r5,r4
    482c:	11000017 	ldw	r4,0(r2)
    4830:	00047c01 	jmpi	47c0 <_fflush_r>
    4834:	00800074 	movhi	r2,1
    4838:	1082c604 	addi	r2,r2,2840
    483c:	11000017 	ldw	r4,0(r2)
    4840:	01400034 	movhi	r5,0
    4844:	2951f004 	addi	r5,r5,18368
    4848:	00050f41 	jmpi	50f4 <_fwalk_reent>

0000484c <__fp_unlock>:
    484c:	0005883a 	mov	r2,zero
    4850:	f800283a 	ret

00004854 <_cleanup_r>:
    4854:	01400074 	movhi	r5,1
    4858:	29631a04 	addi	r5,r5,-29592
    485c:	00050f41 	jmpi	50f4 <_fwalk_reent>

00004860 <__sinit.part.1>:
    4860:	defff704 	addi	sp,sp,-36
    4864:	00c00034 	movhi	r3,0
    4868:	dfc00815 	stw	ra,32(sp)
    486c:	ddc00715 	stw	r23,28(sp)
    4870:	dd800615 	stw	r22,24(sp)
    4874:	dd400515 	stw	r21,20(sp)
    4878:	dd000415 	stw	r20,16(sp)
    487c:	dcc00315 	stw	r19,12(sp)
    4880:	dc800215 	stw	r18,8(sp)
    4884:	dc400115 	stw	r17,4(sp)
    4888:	dc000015 	stw	r16,0(sp)
    488c:	18d21504 	addi	r3,r3,18516
    4890:	24000117 	ldw	r16,4(r4)
    4894:	20c00f15 	stw	r3,60(r4)
    4898:	2080bb04 	addi	r2,r4,748
    489c:	00c000c4 	movi	r3,3
    48a0:	20c0b915 	stw	r3,740(r4)
    48a4:	2080ba15 	stw	r2,744(r4)
    48a8:	2000b815 	stw	zero,736(r4)
    48ac:	05c00204 	movi	r23,8
    48b0:	00800104 	movi	r2,4
    48b4:	2025883a 	mov	r18,r4
    48b8:	b80d883a 	mov	r6,r23
    48bc:	81001704 	addi	r4,r16,92
    48c0:	000b883a 	mov	r5,zero
    48c4:	80000015 	stw	zero,0(r16)
    48c8:	80000115 	stw	zero,4(r16)
    48cc:	80000215 	stw	zero,8(r16)
    48d0:	8080030d 	sth	r2,12(r16)
    48d4:	80001915 	stw	zero,100(r16)
    48d8:	8000038d 	sth	zero,14(r16)
    48dc:	80000415 	stw	zero,16(r16)
    48e0:	80000515 	stw	zero,20(r16)
    48e4:	80000615 	stw	zero,24(r16)
    48e8:	0005e880 	call	5e88 <memset>
    48ec:	05800034 	movhi	r22,0
    48f0:	94400217 	ldw	r17,8(r18)
    48f4:	05400034 	movhi	r21,0
    48f8:	05000034 	movhi	r20,0
    48fc:	04c00034 	movhi	r19,0
    4900:	b59c4c04 	addi	r22,r22,28976
    4904:	ad5c6304 	addi	r21,r21,29068
    4908:	a51c8204 	addi	r20,r20,29192
    490c:	9cdc9904 	addi	r19,r19,29284
    4910:	85800815 	stw	r22,32(r16)
    4914:	85400915 	stw	r21,36(r16)
    4918:	85000a15 	stw	r20,40(r16)
    491c:	84c00b15 	stw	r19,44(r16)
    4920:	84000715 	stw	r16,28(r16)
    4924:	00800284 	movi	r2,10
    4928:	8880030d 	sth	r2,12(r17)
    492c:	00800044 	movi	r2,1
    4930:	b80d883a 	mov	r6,r23
    4934:	89001704 	addi	r4,r17,92
    4938:	000b883a 	mov	r5,zero
    493c:	88000015 	stw	zero,0(r17)
    4940:	88000115 	stw	zero,4(r17)
    4944:	88000215 	stw	zero,8(r17)
    4948:	88001915 	stw	zero,100(r17)
    494c:	8880038d 	sth	r2,14(r17)
    4950:	88000415 	stw	zero,16(r17)
    4954:	88000515 	stw	zero,20(r17)
    4958:	88000615 	stw	zero,24(r17)
    495c:	0005e880 	call	5e88 <memset>
    4960:	94000317 	ldw	r16,12(r18)
    4964:	00800484 	movi	r2,18
    4968:	8c400715 	stw	r17,28(r17)
    496c:	8d800815 	stw	r22,32(r17)
    4970:	8d400915 	stw	r21,36(r17)
    4974:	8d000a15 	stw	r20,40(r17)
    4978:	8cc00b15 	stw	r19,44(r17)
    497c:	8080030d 	sth	r2,12(r16)
    4980:	00800084 	movi	r2,2
    4984:	80000015 	stw	zero,0(r16)
    4988:	80000115 	stw	zero,4(r16)
    498c:	80000215 	stw	zero,8(r16)
    4990:	80001915 	stw	zero,100(r16)
    4994:	8080038d 	sth	r2,14(r16)
    4998:	80000415 	stw	zero,16(r16)
    499c:	80000515 	stw	zero,20(r16)
    49a0:	80000615 	stw	zero,24(r16)
    49a4:	b80d883a 	mov	r6,r23
    49a8:	000b883a 	mov	r5,zero
    49ac:	81001704 	addi	r4,r16,92
    49b0:	0005e880 	call	5e88 <memset>
    49b4:	00800044 	movi	r2,1
    49b8:	84000715 	stw	r16,28(r16)
    49bc:	85800815 	stw	r22,32(r16)
    49c0:	85400915 	stw	r21,36(r16)
    49c4:	85000a15 	stw	r20,40(r16)
    49c8:	84c00b15 	stw	r19,44(r16)
    49cc:	90800e15 	stw	r2,56(r18)
    49d0:	dfc00817 	ldw	ra,32(sp)
    49d4:	ddc00717 	ldw	r23,28(sp)
    49d8:	dd800617 	ldw	r22,24(sp)
    49dc:	dd400517 	ldw	r21,20(sp)
    49e0:	dd000417 	ldw	r20,16(sp)
    49e4:	dcc00317 	ldw	r19,12(sp)
    49e8:	dc800217 	ldw	r18,8(sp)
    49ec:	dc400117 	ldw	r17,4(sp)
    49f0:	dc000017 	ldw	r16,0(sp)
    49f4:	dec00904 	addi	sp,sp,36
    49f8:	f800283a 	ret

000049fc <__fp_lock>:
    49fc:	0005883a 	mov	r2,zero
    4a00:	f800283a 	ret

00004a04 <__sfmoreglue>:
    4a04:	defffc04 	addi	sp,sp,-16
    4a08:	dc800215 	stw	r18,8(sp)
    4a0c:	2825883a 	mov	r18,r5
    4a10:	dc000015 	stw	r16,0(sp)
    4a14:	01401a04 	movi	r5,104
    4a18:	2021883a 	mov	r16,r4
    4a1c:	913fffc4 	addi	r4,r18,-1
    4a20:	dfc00315 	stw	ra,12(sp)
    4a24:	dc400115 	stw	r17,4(sp)
    4a28:	000ab6c0 	call	ab6c <__mulsi3>
    4a2c:	8009883a 	mov	r4,r16
    4a30:	11401d04 	addi	r5,r2,116
    4a34:	1023883a 	mov	r17,r2
    4a38:	00054500 	call	5450 <_malloc_r>
    4a3c:	1021883a 	mov	r16,r2
    4a40:	10000726 	beq	r2,zero,4a60 <__sfmoreglue+0x5c>
    4a44:	11000304 	addi	r4,r2,12
    4a48:	10000015 	stw	zero,0(r2)
    4a4c:	14800115 	stw	r18,4(r2)
    4a50:	11000215 	stw	r4,8(r2)
    4a54:	89801a04 	addi	r6,r17,104
    4a58:	000b883a 	mov	r5,zero
    4a5c:	0005e880 	call	5e88 <memset>
    4a60:	8005883a 	mov	r2,r16
    4a64:	dfc00317 	ldw	ra,12(sp)
    4a68:	dc800217 	ldw	r18,8(sp)
    4a6c:	dc400117 	ldw	r17,4(sp)
    4a70:	dc000017 	ldw	r16,0(sp)
    4a74:	dec00404 	addi	sp,sp,16
    4a78:	f800283a 	ret

00004a7c <__sfp>:
    4a7c:	defffb04 	addi	sp,sp,-20
    4a80:	dc000015 	stw	r16,0(sp)
    4a84:	04000074 	movhi	r16,1
    4a88:	8402c604 	addi	r16,r16,2840
    4a8c:	dcc00315 	stw	r19,12(sp)
    4a90:	2027883a 	mov	r19,r4
    4a94:	81000017 	ldw	r4,0(r16)
    4a98:	dfc00415 	stw	ra,16(sp)
    4a9c:	dc800215 	stw	r18,8(sp)
    4aa0:	20800e17 	ldw	r2,56(r4)
    4aa4:	dc400115 	stw	r17,4(sp)
    4aa8:	1000021e 	bne	r2,zero,4ab4 <__sfp+0x38>
    4aac:	00048600 	call	4860 <__sinit.part.1>
    4ab0:	81000017 	ldw	r4,0(r16)
    4ab4:	2480b804 	addi	r18,r4,736
    4ab8:	047fffc4 	movi	r17,-1
    4abc:	91000117 	ldw	r4,4(r18)
    4ac0:	94000217 	ldw	r16,8(r18)
    4ac4:	213fffc4 	addi	r4,r4,-1
    4ac8:	20000a16 	blt	r4,zero,4af4 <__sfp+0x78>
    4acc:	8080030f 	ldh	r2,12(r16)
    4ad0:	10000c26 	beq	r2,zero,4b04 <__sfp+0x88>
    4ad4:	80c01d04 	addi	r3,r16,116
    4ad8:	00000206 	br	4ae4 <__sfp+0x68>
    4adc:	18bfe60f 	ldh	r2,-104(r3)
    4ae0:	10000826 	beq	r2,zero,4b04 <__sfp+0x88>
    4ae4:	213fffc4 	addi	r4,r4,-1
    4ae8:	1c3ffd04 	addi	r16,r3,-12
    4aec:	18c01a04 	addi	r3,r3,104
    4af0:	247ffa1e 	bne	r4,r17,4adc <__alt_data_end+0xfffd3d9c>
    4af4:	90800017 	ldw	r2,0(r18)
    4af8:	10001d26 	beq	r2,zero,4b70 <__sfp+0xf4>
    4afc:	1025883a 	mov	r18,r2
    4b00:	003fee06 	br	4abc <__alt_data_end+0xfffd3d7c>
    4b04:	00bfffc4 	movi	r2,-1
    4b08:	8080038d 	sth	r2,14(r16)
    4b0c:	00800044 	movi	r2,1
    4b10:	8080030d 	sth	r2,12(r16)
    4b14:	80001915 	stw	zero,100(r16)
    4b18:	80000015 	stw	zero,0(r16)
    4b1c:	80000215 	stw	zero,8(r16)
    4b20:	80000115 	stw	zero,4(r16)
    4b24:	80000415 	stw	zero,16(r16)
    4b28:	80000515 	stw	zero,20(r16)
    4b2c:	80000615 	stw	zero,24(r16)
    4b30:	01800204 	movi	r6,8
    4b34:	000b883a 	mov	r5,zero
    4b38:	81001704 	addi	r4,r16,92
    4b3c:	0005e880 	call	5e88 <memset>
    4b40:	8005883a 	mov	r2,r16
    4b44:	80000c15 	stw	zero,48(r16)
    4b48:	80000d15 	stw	zero,52(r16)
    4b4c:	80001115 	stw	zero,68(r16)
    4b50:	80001215 	stw	zero,72(r16)
    4b54:	dfc00417 	ldw	ra,16(sp)
    4b58:	dcc00317 	ldw	r19,12(sp)
    4b5c:	dc800217 	ldw	r18,8(sp)
    4b60:	dc400117 	ldw	r17,4(sp)
    4b64:	dc000017 	ldw	r16,0(sp)
    4b68:	dec00504 	addi	sp,sp,20
    4b6c:	f800283a 	ret
    4b70:	01400104 	movi	r5,4
    4b74:	9809883a 	mov	r4,r19
    4b78:	0004a040 	call	4a04 <__sfmoreglue>
    4b7c:	90800015 	stw	r2,0(r18)
    4b80:	103fde1e 	bne	r2,zero,4afc <__alt_data_end+0xfffd3dbc>
    4b84:	00800304 	movi	r2,12
    4b88:	98800015 	stw	r2,0(r19)
    4b8c:	0005883a 	mov	r2,zero
    4b90:	003ff006 	br	4b54 <__alt_data_end+0xfffd3e14>

00004b94 <_cleanup>:
    4b94:	00800074 	movhi	r2,1
    4b98:	1082c604 	addi	r2,r2,2840
    4b9c:	11000017 	ldw	r4,0(r2)
    4ba0:	01400074 	movhi	r5,1
    4ba4:	29631a04 	addi	r5,r5,-29592
    4ba8:	00050f41 	jmpi	50f4 <_fwalk_reent>

00004bac <__sinit>:
    4bac:	20800e17 	ldw	r2,56(r4)
    4bb0:	10000126 	beq	r2,zero,4bb8 <__sinit+0xc>
    4bb4:	f800283a 	ret
    4bb8:	00048601 	jmpi	4860 <__sinit.part.1>

00004bbc <__sfp_lock_acquire>:
    4bbc:	f800283a 	ret

00004bc0 <__sfp_lock_release>:
    4bc0:	f800283a 	ret

00004bc4 <__sinit_lock_acquire>:
    4bc4:	f800283a 	ret

00004bc8 <__sinit_lock_release>:
    4bc8:	f800283a 	ret

00004bcc <__fp_lock_all>:
    4bcc:	00800074 	movhi	r2,1
    4bd0:	1082c704 	addi	r2,r2,2844
    4bd4:	11000017 	ldw	r4,0(r2)
    4bd8:	01400034 	movhi	r5,0
    4bdc:	29527f04 	addi	r5,r5,18940
    4be0:	00050301 	jmpi	5030 <_fwalk>

00004be4 <__fp_unlock_all>:
    4be4:	00800074 	movhi	r2,1
    4be8:	1082c704 	addi	r2,r2,2844
    4bec:	11000017 	ldw	r4,0(r2)
    4bf0:	01400034 	movhi	r5,0
    4bf4:	29521304 	addi	r5,r5,18508
    4bf8:	00050301 	jmpi	5030 <_fwalk>

00004bfc <_malloc_trim_r>:
    4bfc:	defffb04 	addi	sp,sp,-20
    4c00:	dcc00315 	stw	r19,12(sp)
    4c04:	04c00074 	movhi	r19,1
    4c08:	dc800215 	stw	r18,8(sp)
    4c0c:	dc400115 	stw	r17,4(sp)
    4c10:	dc000015 	stw	r16,0(sp)
    4c14:	dfc00415 	stw	ra,16(sp)
    4c18:	2821883a 	mov	r16,r5
    4c1c:	9cfd3404 	addi	r19,r19,-2864
    4c20:	2025883a 	mov	r18,r4
    4c24:	000da440 	call	da44 <__malloc_lock>
    4c28:	98800217 	ldw	r2,8(r19)
    4c2c:	14400117 	ldw	r17,4(r2)
    4c30:	00bfff04 	movi	r2,-4
    4c34:	88a2703a 	and	r17,r17,r2
    4c38:	8c21c83a 	sub	r16,r17,r16
    4c3c:	8403fbc4 	addi	r16,r16,4079
    4c40:	8020d33a 	srli	r16,r16,12
    4c44:	0083ffc4 	movi	r2,4095
    4c48:	843fffc4 	addi	r16,r16,-1
    4c4c:	8020933a 	slli	r16,r16,12
    4c50:	1400060e 	bge	r2,r16,4c6c <_malloc_trim_r+0x70>
    4c54:	000b883a 	mov	r5,zero
    4c58:	9009883a 	mov	r4,r18
    4c5c:	00070dc0 	call	70dc <_sbrk_r>
    4c60:	98c00217 	ldw	r3,8(r19)
    4c64:	1c47883a 	add	r3,r3,r17
    4c68:	10c00a26 	beq	r2,r3,4c94 <_malloc_trim_r+0x98>
    4c6c:	9009883a 	mov	r4,r18
    4c70:	000da480 	call	da48 <__malloc_unlock>
    4c74:	0005883a 	mov	r2,zero
    4c78:	dfc00417 	ldw	ra,16(sp)
    4c7c:	dcc00317 	ldw	r19,12(sp)
    4c80:	dc800217 	ldw	r18,8(sp)
    4c84:	dc400117 	ldw	r17,4(sp)
    4c88:	dc000017 	ldw	r16,0(sp)
    4c8c:	dec00504 	addi	sp,sp,20
    4c90:	f800283a 	ret
    4c94:	040bc83a 	sub	r5,zero,r16
    4c98:	9009883a 	mov	r4,r18
    4c9c:	00070dc0 	call	70dc <_sbrk_r>
    4ca0:	00ffffc4 	movi	r3,-1
    4ca4:	10c00d26 	beq	r2,r3,4cdc <_malloc_trim_r+0xe0>
    4ca8:	00c00074 	movhi	r3,1
    4cac:	18c9bf04 	addi	r3,r3,9980
    4cb0:	18800017 	ldw	r2,0(r3)
    4cb4:	99000217 	ldw	r4,8(r19)
    4cb8:	8c23c83a 	sub	r17,r17,r16
    4cbc:	8c400054 	ori	r17,r17,1
    4cc0:	1421c83a 	sub	r16,r2,r16
    4cc4:	24400115 	stw	r17,4(r4)
    4cc8:	9009883a 	mov	r4,r18
    4ccc:	1c000015 	stw	r16,0(r3)
    4cd0:	000da480 	call	da48 <__malloc_unlock>
    4cd4:	00800044 	movi	r2,1
    4cd8:	003fe706 	br	4c78 <__alt_data_end+0xfffd3f38>
    4cdc:	000b883a 	mov	r5,zero
    4ce0:	9009883a 	mov	r4,r18
    4ce4:	00070dc0 	call	70dc <_sbrk_r>
    4ce8:	99000217 	ldw	r4,8(r19)
    4cec:	014003c4 	movi	r5,15
    4cf0:	1107c83a 	sub	r3,r2,r4
    4cf4:	28ffdd0e 	bge	r5,r3,4c6c <__alt_data_end+0xfffd3f2c>
    4cf8:	01400074 	movhi	r5,1
    4cfc:	2942c904 	addi	r5,r5,2852
    4d00:	29400017 	ldw	r5,0(r5)
    4d04:	18c00054 	ori	r3,r3,1
    4d08:	20c00115 	stw	r3,4(r4)
    4d0c:	00c00074 	movhi	r3,1
    4d10:	1145c83a 	sub	r2,r2,r5
    4d14:	18c9bf04 	addi	r3,r3,9980
    4d18:	18800015 	stw	r2,0(r3)
    4d1c:	003fd306 	br	4c6c <__alt_data_end+0xfffd3f2c>

00004d20 <_free_r>:
    4d20:	28004126 	beq	r5,zero,4e28 <_free_r+0x108>
    4d24:	defffd04 	addi	sp,sp,-12
    4d28:	dc400115 	stw	r17,4(sp)
    4d2c:	dc000015 	stw	r16,0(sp)
    4d30:	2023883a 	mov	r17,r4
    4d34:	2821883a 	mov	r16,r5
    4d38:	dfc00215 	stw	ra,8(sp)
    4d3c:	000da440 	call	da44 <__malloc_lock>
    4d40:	81ffff17 	ldw	r7,-4(r16)
    4d44:	00bfff84 	movi	r2,-2
    4d48:	01000074 	movhi	r4,1
    4d4c:	81bffe04 	addi	r6,r16,-8
    4d50:	3884703a 	and	r2,r7,r2
    4d54:	213d3404 	addi	r4,r4,-2864
    4d58:	308b883a 	add	r5,r6,r2
    4d5c:	2a400117 	ldw	r9,4(r5)
    4d60:	22000217 	ldw	r8,8(r4)
    4d64:	00ffff04 	movi	r3,-4
    4d68:	48c6703a 	and	r3,r9,r3
    4d6c:	2a005726 	beq	r5,r8,4ecc <_free_r+0x1ac>
    4d70:	28c00115 	stw	r3,4(r5)
    4d74:	39c0004c 	andi	r7,r7,1
    4d78:	3800091e 	bne	r7,zero,4da0 <_free_r+0x80>
    4d7c:	823ffe17 	ldw	r8,-8(r16)
    4d80:	22400204 	addi	r9,r4,8
    4d84:	320dc83a 	sub	r6,r6,r8
    4d88:	31c00217 	ldw	r7,8(r6)
    4d8c:	1205883a 	add	r2,r2,r8
    4d90:	3a406526 	beq	r7,r9,4f28 <_free_r+0x208>
    4d94:	32000317 	ldw	r8,12(r6)
    4d98:	3a000315 	stw	r8,12(r7)
    4d9c:	41c00215 	stw	r7,8(r8)
    4da0:	28cf883a 	add	r7,r5,r3
    4da4:	39c00117 	ldw	r7,4(r7)
    4da8:	39c0004c 	andi	r7,r7,1
    4dac:	38003a26 	beq	r7,zero,4e98 <_free_r+0x178>
    4db0:	10c00054 	ori	r3,r2,1
    4db4:	30c00115 	stw	r3,4(r6)
    4db8:	3087883a 	add	r3,r6,r2
    4dbc:	18800015 	stw	r2,0(r3)
    4dc0:	00c07fc4 	movi	r3,511
    4dc4:	18801936 	bltu	r3,r2,4e2c <_free_r+0x10c>
    4dc8:	1004d0fa 	srli	r2,r2,3
    4dcc:	01c00044 	movi	r7,1
    4dd0:	21400117 	ldw	r5,4(r4)
    4dd4:	10c00044 	addi	r3,r2,1
    4dd8:	18c7883a 	add	r3,r3,r3
    4ddc:	1005d0ba 	srai	r2,r2,2
    4de0:	18c7883a 	add	r3,r3,r3
    4de4:	18c7883a 	add	r3,r3,r3
    4de8:	1907883a 	add	r3,r3,r4
    4dec:	3884983a 	sll	r2,r7,r2
    4df0:	19c00017 	ldw	r7,0(r3)
    4df4:	1a3ffe04 	addi	r8,r3,-8
    4df8:	1144b03a 	or	r2,r2,r5
    4dfc:	32000315 	stw	r8,12(r6)
    4e00:	31c00215 	stw	r7,8(r6)
    4e04:	20800115 	stw	r2,4(r4)
    4e08:	19800015 	stw	r6,0(r3)
    4e0c:	39800315 	stw	r6,12(r7)
    4e10:	8809883a 	mov	r4,r17
    4e14:	dfc00217 	ldw	ra,8(sp)
    4e18:	dc400117 	ldw	r17,4(sp)
    4e1c:	dc000017 	ldw	r16,0(sp)
    4e20:	dec00304 	addi	sp,sp,12
    4e24:	000da481 	jmpi	da48 <__malloc_unlock>
    4e28:	f800283a 	ret
    4e2c:	100ad27a 	srli	r5,r2,9
    4e30:	00c00104 	movi	r3,4
    4e34:	19404a36 	bltu	r3,r5,4f60 <_free_r+0x240>
    4e38:	100ad1ba 	srli	r5,r2,6
    4e3c:	28c00e44 	addi	r3,r5,57
    4e40:	18c7883a 	add	r3,r3,r3
    4e44:	29400e04 	addi	r5,r5,56
    4e48:	18c7883a 	add	r3,r3,r3
    4e4c:	18c7883a 	add	r3,r3,r3
    4e50:	1909883a 	add	r4,r3,r4
    4e54:	20c00017 	ldw	r3,0(r4)
    4e58:	01c00074 	movhi	r7,1
    4e5c:	213ffe04 	addi	r4,r4,-8
    4e60:	39fd3404 	addi	r7,r7,-2864
    4e64:	20c04426 	beq	r4,r3,4f78 <_free_r+0x258>
    4e68:	01ffff04 	movi	r7,-4
    4e6c:	19400117 	ldw	r5,4(r3)
    4e70:	29ca703a 	and	r5,r5,r7
    4e74:	1140022e 	bgeu	r2,r5,4e80 <_free_r+0x160>
    4e78:	18c00217 	ldw	r3,8(r3)
    4e7c:	20fffb1e 	bne	r4,r3,4e6c <__alt_data_end+0xfffd412c>
    4e80:	19000317 	ldw	r4,12(r3)
    4e84:	31000315 	stw	r4,12(r6)
    4e88:	30c00215 	stw	r3,8(r6)
    4e8c:	21800215 	stw	r6,8(r4)
    4e90:	19800315 	stw	r6,12(r3)
    4e94:	003fde06 	br	4e10 <__alt_data_end+0xfffd40d0>
    4e98:	29c00217 	ldw	r7,8(r5)
    4e9c:	10c5883a 	add	r2,r2,r3
    4ea0:	00c00074 	movhi	r3,1
    4ea4:	18fd3604 	addi	r3,r3,-2856
    4ea8:	38c03b26 	beq	r7,r3,4f98 <_free_r+0x278>
    4eac:	2a000317 	ldw	r8,12(r5)
    4eb0:	11400054 	ori	r5,r2,1
    4eb4:	3087883a 	add	r3,r6,r2
    4eb8:	3a000315 	stw	r8,12(r7)
    4ebc:	41c00215 	stw	r7,8(r8)
    4ec0:	31400115 	stw	r5,4(r6)
    4ec4:	18800015 	stw	r2,0(r3)
    4ec8:	003fbd06 	br	4dc0 <__alt_data_end+0xfffd4080>
    4ecc:	39c0004c 	andi	r7,r7,1
    4ed0:	10c5883a 	add	r2,r2,r3
    4ed4:	3800071e 	bne	r7,zero,4ef4 <_free_r+0x1d4>
    4ed8:	81fffe17 	ldw	r7,-8(r16)
    4edc:	31cdc83a 	sub	r6,r6,r7
    4ee0:	30c00317 	ldw	r3,12(r6)
    4ee4:	31400217 	ldw	r5,8(r6)
    4ee8:	11c5883a 	add	r2,r2,r7
    4eec:	28c00315 	stw	r3,12(r5)
    4ef0:	19400215 	stw	r5,8(r3)
    4ef4:	10c00054 	ori	r3,r2,1
    4ef8:	30c00115 	stw	r3,4(r6)
    4efc:	00c00074 	movhi	r3,1
    4f00:	18c2ca04 	addi	r3,r3,2856
    4f04:	18c00017 	ldw	r3,0(r3)
    4f08:	21800215 	stw	r6,8(r4)
    4f0c:	10ffc036 	bltu	r2,r3,4e10 <__alt_data_end+0xfffd40d0>
    4f10:	00800074 	movhi	r2,1
    4f14:	1089b604 	addi	r2,r2,9944
    4f18:	11400017 	ldw	r5,0(r2)
    4f1c:	8809883a 	mov	r4,r17
    4f20:	0004bfc0 	call	4bfc <_malloc_trim_r>
    4f24:	003fba06 	br	4e10 <__alt_data_end+0xfffd40d0>
    4f28:	28c9883a 	add	r4,r5,r3
    4f2c:	21000117 	ldw	r4,4(r4)
    4f30:	2100004c 	andi	r4,r4,1
    4f34:	2000391e 	bne	r4,zero,501c <_free_r+0x2fc>
    4f38:	29c00217 	ldw	r7,8(r5)
    4f3c:	29000317 	ldw	r4,12(r5)
    4f40:	1885883a 	add	r2,r3,r2
    4f44:	10c00054 	ori	r3,r2,1
    4f48:	39000315 	stw	r4,12(r7)
    4f4c:	21c00215 	stw	r7,8(r4)
    4f50:	30c00115 	stw	r3,4(r6)
    4f54:	308d883a 	add	r6,r6,r2
    4f58:	30800015 	stw	r2,0(r6)
    4f5c:	003fac06 	br	4e10 <__alt_data_end+0xfffd40d0>
    4f60:	00c00504 	movi	r3,20
    4f64:	19401536 	bltu	r3,r5,4fbc <_free_r+0x29c>
    4f68:	28c01704 	addi	r3,r5,92
    4f6c:	18c7883a 	add	r3,r3,r3
    4f70:	294016c4 	addi	r5,r5,91
    4f74:	003fb406 	br	4e48 <__alt_data_end+0xfffd4108>
    4f78:	280bd0ba 	srai	r5,r5,2
    4f7c:	00c00044 	movi	r3,1
    4f80:	38800117 	ldw	r2,4(r7)
    4f84:	194a983a 	sll	r5,r3,r5
    4f88:	2007883a 	mov	r3,r4
    4f8c:	2884b03a 	or	r2,r5,r2
    4f90:	38800115 	stw	r2,4(r7)
    4f94:	003fbb06 	br	4e84 <__alt_data_end+0xfffd4144>
    4f98:	21800515 	stw	r6,20(r4)
    4f9c:	21800415 	stw	r6,16(r4)
    4fa0:	10c00054 	ori	r3,r2,1
    4fa4:	31c00315 	stw	r7,12(r6)
    4fa8:	31c00215 	stw	r7,8(r6)
    4fac:	30c00115 	stw	r3,4(r6)
    4fb0:	308d883a 	add	r6,r6,r2
    4fb4:	30800015 	stw	r2,0(r6)
    4fb8:	003f9506 	br	4e10 <__alt_data_end+0xfffd40d0>
    4fbc:	00c01504 	movi	r3,84
    4fc0:	19400536 	bltu	r3,r5,4fd8 <_free_r+0x2b8>
    4fc4:	100ad33a 	srli	r5,r2,12
    4fc8:	28c01bc4 	addi	r3,r5,111
    4fcc:	18c7883a 	add	r3,r3,r3
    4fd0:	29401b84 	addi	r5,r5,110
    4fd4:	003f9c06 	br	4e48 <__alt_data_end+0xfffd4108>
    4fd8:	00c05504 	movi	r3,340
    4fdc:	19400536 	bltu	r3,r5,4ff4 <_free_r+0x2d4>
    4fe0:	100ad3fa 	srli	r5,r2,15
    4fe4:	28c01e04 	addi	r3,r5,120
    4fe8:	18c7883a 	add	r3,r3,r3
    4fec:	29401dc4 	addi	r5,r5,119
    4ff0:	003f9506 	br	4e48 <__alt_data_end+0xfffd4108>
    4ff4:	00c15504 	movi	r3,1364
    4ff8:	19400536 	bltu	r3,r5,5010 <_free_r+0x2f0>
    4ffc:	100ad4ba 	srli	r5,r2,18
    5000:	28c01f44 	addi	r3,r5,125
    5004:	18c7883a 	add	r3,r3,r3
    5008:	29401f04 	addi	r5,r5,124
    500c:	003f8e06 	br	4e48 <__alt_data_end+0xfffd4108>
    5010:	00c03f84 	movi	r3,254
    5014:	01401f84 	movi	r5,126
    5018:	003f8b06 	br	4e48 <__alt_data_end+0xfffd4108>
    501c:	10c00054 	ori	r3,r2,1
    5020:	30c00115 	stw	r3,4(r6)
    5024:	308d883a 	add	r6,r6,r2
    5028:	30800015 	stw	r2,0(r6)
    502c:	003f7806 	br	4e10 <__alt_data_end+0xfffd40d0>

00005030 <_fwalk>:
    5030:	defff704 	addi	sp,sp,-36
    5034:	dd000415 	stw	r20,16(sp)
    5038:	dfc00815 	stw	ra,32(sp)
    503c:	ddc00715 	stw	r23,28(sp)
    5040:	dd800615 	stw	r22,24(sp)
    5044:	dd400515 	stw	r21,20(sp)
    5048:	dcc00315 	stw	r19,12(sp)
    504c:	dc800215 	stw	r18,8(sp)
    5050:	dc400115 	stw	r17,4(sp)
    5054:	dc000015 	stw	r16,0(sp)
    5058:	2500b804 	addi	r20,r4,736
    505c:	a0002326 	beq	r20,zero,50ec <_fwalk+0xbc>
    5060:	282b883a 	mov	r21,r5
    5064:	002f883a 	mov	r23,zero
    5068:	05800044 	movi	r22,1
    506c:	04ffffc4 	movi	r19,-1
    5070:	a4400117 	ldw	r17,4(r20)
    5074:	a4800217 	ldw	r18,8(r20)
    5078:	8c7fffc4 	addi	r17,r17,-1
    507c:	88000d16 	blt	r17,zero,50b4 <_fwalk+0x84>
    5080:	94000304 	addi	r16,r18,12
    5084:	94800384 	addi	r18,r18,14
    5088:	8080000b 	ldhu	r2,0(r16)
    508c:	8c7fffc4 	addi	r17,r17,-1
    5090:	813ffd04 	addi	r4,r16,-12
    5094:	b080042e 	bgeu	r22,r2,50a8 <_fwalk+0x78>
    5098:	9080000f 	ldh	r2,0(r18)
    509c:	14c00226 	beq	r2,r19,50a8 <_fwalk+0x78>
    50a0:	a83ee83a 	callr	r21
    50a4:	b8aeb03a 	or	r23,r23,r2
    50a8:	84001a04 	addi	r16,r16,104
    50ac:	94801a04 	addi	r18,r18,104
    50b0:	8cfff51e 	bne	r17,r19,5088 <__alt_data_end+0xfffd4348>
    50b4:	a5000017 	ldw	r20,0(r20)
    50b8:	a03fed1e 	bne	r20,zero,5070 <__alt_data_end+0xfffd4330>
    50bc:	b805883a 	mov	r2,r23
    50c0:	dfc00817 	ldw	ra,32(sp)
    50c4:	ddc00717 	ldw	r23,28(sp)
    50c8:	dd800617 	ldw	r22,24(sp)
    50cc:	dd400517 	ldw	r21,20(sp)
    50d0:	dd000417 	ldw	r20,16(sp)
    50d4:	dcc00317 	ldw	r19,12(sp)
    50d8:	dc800217 	ldw	r18,8(sp)
    50dc:	dc400117 	ldw	r17,4(sp)
    50e0:	dc000017 	ldw	r16,0(sp)
    50e4:	dec00904 	addi	sp,sp,36
    50e8:	f800283a 	ret
    50ec:	002f883a 	mov	r23,zero
    50f0:	003ff206 	br	50bc <__alt_data_end+0xfffd437c>

000050f4 <_fwalk_reent>:
    50f4:	defff704 	addi	sp,sp,-36
    50f8:	dd000415 	stw	r20,16(sp)
    50fc:	dfc00815 	stw	ra,32(sp)
    5100:	ddc00715 	stw	r23,28(sp)
    5104:	dd800615 	stw	r22,24(sp)
    5108:	dd400515 	stw	r21,20(sp)
    510c:	dcc00315 	stw	r19,12(sp)
    5110:	dc800215 	stw	r18,8(sp)
    5114:	dc400115 	stw	r17,4(sp)
    5118:	dc000015 	stw	r16,0(sp)
    511c:	2500b804 	addi	r20,r4,736
    5120:	a0002326 	beq	r20,zero,51b0 <_fwalk_reent+0xbc>
    5124:	282b883a 	mov	r21,r5
    5128:	2027883a 	mov	r19,r4
    512c:	002f883a 	mov	r23,zero
    5130:	05800044 	movi	r22,1
    5134:	04bfffc4 	movi	r18,-1
    5138:	a4400117 	ldw	r17,4(r20)
    513c:	a4000217 	ldw	r16,8(r20)
    5140:	8c7fffc4 	addi	r17,r17,-1
    5144:	88000c16 	blt	r17,zero,5178 <_fwalk_reent+0x84>
    5148:	84000304 	addi	r16,r16,12
    514c:	8080000b 	ldhu	r2,0(r16)
    5150:	8c7fffc4 	addi	r17,r17,-1
    5154:	817ffd04 	addi	r5,r16,-12
    5158:	b080052e 	bgeu	r22,r2,5170 <_fwalk_reent+0x7c>
    515c:	8080008f 	ldh	r2,2(r16)
    5160:	9809883a 	mov	r4,r19
    5164:	14800226 	beq	r2,r18,5170 <_fwalk_reent+0x7c>
    5168:	a83ee83a 	callr	r21
    516c:	b8aeb03a 	or	r23,r23,r2
    5170:	84001a04 	addi	r16,r16,104
    5174:	8cbff51e 	bne	r17,r18,514c <__alt_data_end+0xfffd440c>
    5178:	a5000017 	ldw	r20,0(r20)
    517c:	a03fee1e 	bne	r20,zero,5138 <__alt_data_end+0xfffd43f8>
    5180:	b805883a 	mov	r2,r23
    5184:	dfc00817 	ldw	ra,32(sp)
    5188:	ddc00717 	ldw	r23,28(sp)
    518c:	dd800617 	ldw	r22,24(sp)
    5190:	dd400517 	ldw	r21,20(sp)
    5194:	dd000417 	ldw	r20,16(sp)
    5198:	dcc00317 	ldw	r19,12(sp)
    519c:	dc800217 	ldw	r18,8(sp)
    51a0:	dc400117 	ldw	r17,4(sp)
    51a4:	dc000017 	ldw	r16,0(sp)
    51a8:	dec00904 	addi	sp,sp,36
    51ac:	f800283a 	ret
    51b0:	002f883a 	mov	r23,zero
    51b4:	003ff206 	br	5180 <__alt_data_end+0xfffd4440>

000051b8 <_setlocale_r>:
    51b8:	30001b26 	beq	r6,zero,5228 <_setlocale_r+0x70>
    51bc:	01400074 	movhi	r5,1
    51c0:	defffe04 	addi	sp,sp,-8
    51c4:	297b6d04 	addi	r5,r5,-4684
    51c8:	3009883a 	mov	r4,r6
    51cc:	dc000015 	stw	r16,0(sp)
    51d0:	dfc00115 	stw	ra,4(sp)
    51d4:	3021883a 	mov	r16,r6
    51d8:	000726c0 	call	726c <strcmp>
    51dc:	1000061e 	bne	r2,zero,51f8 <_setlocale_r+0x40>
    51e0:	00800074 	movhi	r2,1
    51e4:	10bb6c04 	addi	r2,r2,-4688
    51e8:	dfc00117 	ldw	ra,4(sp)
    51ec:	dc000017 	ldw	r16,0(sp)
    51f0:	dec00204 	addi	sp,sp,8
    51f4:	f800283a 	ret
    51f8:	01400074 	movhi	r5,1
    51fc:	297b6c04 	addi	r5,r5,-4688
    5200:	8009883a 	mov	r4,r16
    5204:	000726c0 	call	726c <strcmp>
    5208:	103ff526 	beq	r2,zero,51e0 <__alt_data_end+0xfffd44a0>
    520c:	01400074 	movhi	r5,1
    5210:	297c0c04 	addi	r5,r5,-4048
    5214:	8009883a 	mov	r4,r16
    5218:	000726c0 	call	726c <strcmp>
    521c:	103ff026 	beq	r2,zero,51e0 <__alt_data_end+0xfffd44a0>
    5220:	0005883a 	mov	r2,zero
    5224:	003ff006 	br	51e8 <__alt_data_end+0xfffd44a8>
    5228:	00800074 	movhi	r2,1
    522c:	10bb6c04 	addi	r2,r2,-4688
    5230:	f800283a 	ret

00005234 <__locale_charset>:
    5234:	00800074 	movhi	r2,1
    5238:	10bd1e04 	addi	r2,r2,-2952
    523c:	f800283a 	ret

00005240 <__locale_mb_cur_max>:
    5240:	00800074 	movhi	r2,1
    5244:	1082c804 	addi	r2,r2,2848
    5248:	10800017 	ldw	r2,0(r2)
    524c:	f800283a 	ret

00005250 <__locale_msgcharset>:
    5250:	00800074 	movhi	r2,1
    5254:	10bd1604 	addi	r2,r2,-2984
    5258:	f800283a 	ret

0000525c <__locale_cjk_lang>:
    525c:	0005883a 	mov	r2,zero
    5260:	f800283a 	ret

00005264 <_localeconv_r>:
    5264:	00800074 	movhi	r2,1
    5268:	10bd2604 	addi	r2,r2,-2920
    526c:	f800283a 	ret

00005270 <setlocale>:
    5270:	00800074 	movhi	r2,1
    5274:	1082c704 	addi	r2,r2,2844
    5278:	280d883a 	mov	r6,r5
    527c:	200b883a 	mov	r5,r4
    5280:	11000017 	ldw	r4,0(r2)
    5284:	00051b81 	jmpi	51b8 <_setlocale_r>

00005288 <localeconv>:
    5288:	00800074 	movhi	r2,1
    528c:	10bd2604 	addi	r2,r2,-2920
    5290:	f800283a 	ret

00005294 <__smakebuf_r>:
    5294:	2880030b 	ldhu	r2,12(r5)
    5298:	10c0008c 	andi	r3,r2,2
    529c:	1800411e 	bne	r3,zero,53a4 <__smakebuf_r+0x110>
    52a0:	deffec04 	addi	sp,sp,-80
    52a4:	dc000f15 	stw	r16,60(sp)
    52a8:	2821883a 	mov	r16,r5
    52ac:	2940038f 	ldh	r5,14(r5)
    52b0:	dc401015 	stw	r17,64(sp)
    52b4:	dfc01315 	stw	ra,76(sp)
    52b8:	dcc01215 	stw	r19,72(sp)
    52bc:	dc801115 	stw	r18,68(sp)
    52c0:	2023883a 	mov	r17,r4
    52c4:	28001c16 	blt	r5,zero,5338 <__smakebuf_r+0xa4>
    52c8:	d80d883a 	mov	r6,sp
    52cc:	0008f740 	call	8f74 <_fstat_r>
    52d0:	10001816 	blt	r2,zero,5334 <__smakebuf_r+0xa0>
    52d4:	d8800117 	ldw	r2,4(sp)
    52d8:	00e00014 	movui	r3,32768
    52dc:	10bc000c 	andi	r2,r2,61440
    52e0:	14c80020 	cmpeqi	r19,r2,8192
    52e4:	10c03726 	beq	r2,r3,53c4 <__smakebuf_r+0x130>
    52e8:	80c0030b 	ldhu	r3,12(r16)
    52ec:	18c20014 	ori	r3,r3,2048
    52f0:	80c0030d 	sth	r3,12(r16)
    52f4:	00c80004 	movi	r3,8192
    52f8:	10c0521e 	bne	r2,r3,5444 <__smakebuf_r+0x1b0>
    52fc:	8140038f 	ldh	r5,14(r16)
    5300:	8809883a 	mov	r4,r17
    5304:	00094980 	call	9498 <_isatty_r>
    5308:	10004c26 	beq	r2,zero,543c <__smakebuf_r+0x1a8>
    530c:	8080030b 	ldhu	r2,12(r16)
    5310:	80c010c4 	addi	r3,r16,67
    5314:	80c00015 	stw	r3,0(r16)
    5318:	10800054 	ori	r2,r2,1
    531c:	8080030d 	sth	r2,12(r16)
    5320:	00800044 	movi	r2,1
    5324:	80c00415 	stw	r3,16(r16)
    5328:	80800515 	stw	r2,20(r16)
    532c:	04810004 	movi	r18,1024
    5330:	00000706 	br	5350 <__smakebuf_r+0xbc>
    5334:	8080030b 	ldhu	r2,12(r16)
    5338:	10c0200c 	andi	r3,r2,128
    533c:	18001f1e 	bne	r3,zero,53bc <__smakebuf_r+0x128>
    5340:	04810004 	movi	r18,1024
    5344:	10820014 	ori	r2,r2,2048
    5348:	8080030d 	sth	r2,12(r16)
    534c:	0027883a 	mov	r19,zero
    5350:	900b883a 	mov	r5,r18
    5354:	8809883a 	mov	r4,r17
    5358:	00054500 	call	5450 <_malloc_r>
    535c:	10002c26 	beq	r2,zero,5410 <__smakebuf_r+0x17c>
    5360:	80c0030b 	ldhu	r3,12(r16)
    5364:	01000034 	movhi	r4,0
    5368:	21121504 	addi	r4,r4,18516
    536c:	89000f15 	stw	r4,60(r17)
    5370:	18c02014 	ori	r3,r3,128
    5374:	80c0030d 	sth	r3,12(r16)
    5378:	80800015 	stw	r2,0(r16)
    537c:	80800415 	stw	r2,16(r16)
    5380:	84800515 	stw	r18,20(r16)
    5384:	98001a1e 	bne	r19,zero,53f0 <__smakebuf_r+0x15c>
    5388:	dfc01317 	ldw	ra,76(sp)
    538c:	dcc01217 	ldw	r19,72(sp)
    5390:	dc801117 	ldw	r18,68(sp)
    5394:	dc401017 	ldw	r17,64(sp)
    5398:	dc000f17 	ldw	r16,60(sp)
    539c:	dec01404 	addi	sp,sp,80
    53a0:	f800283a 	ret
    53a4:	288010c4 	addi	r2,r5,67
    53a8:	28800015 	stw	r2,0(r5)
    53ac:	28800415 	stw	r2,16(r5)
    53b0:	00800044 	movi	r2,1
    53b4:	28800515 	stw	r2,20(r5)
    53b8:	f800283a 	ret
    53bc:	04801004 	movi	r18,64
    53c0:	003fe006 	br	5344 <__alt_data_end+0xfffd4604>
    53c4:	81000a17 	ldw	r4,40(r16)
    53c8:	00c00034 	movhi	r3,0
    53cc:	18dc8204 	addi	r3,r3,29192
    53d0:	20ffc51e 	bne	r4,r3,52e8 <__alt_data_end+0xfffd45a8>
    53d4:	8080030b 	ldhu	r2,12(r16)
    53d8:	04810004 	movi	r18,1024
    53dc:	84801315 	stw	r18,76(r16)
    53e0:	1484b03a 	or	r2,r2,r18
    53e4:	8080030d 	sth	r2,12(r16)
    53e8:	0027883a 	mov	r19,zero
    53ec:	003fd806 	br	5350 <__alt_data_end+0xfffd4610>
    53f0:	8140038f 	ldh	r5,14(r16)
    53f4:	8809883a 	mov	r4,r17
    53f8:	00094980 	call	9498 <_isatty_r>
    53fc:	103fe226 	beq	r2,zero,5388 <__alt_data_end+0xfffd4648>
    5400:	8080030b 	ldhu	r2,12(r16)
    5404:	10800054 	ori	r2,r2,1
    5408:	8080030d 	sth	r2,12(r16)
    540c:	003fde06 	br	5388 <__alt_data_end+0xfffd4648>
    5410:	8080030b 	ldhu	r2,12(r16)
    5414:	10c0800c 	andi	r3,r2,512
    5418:	183fdb1e 	bne	r3,zero,5388 <__alt_data_end+0xfffd4648>
    541c:	10800094 	ori	r2,r2,2
    5420:	80c010c4 	addi	r3,r16,67
    5424:	8080030d 	sth	r2,12(r16)
    5428:	00800044 	movi	r2,1
    542c:	80c00015 	stw	r3,0(r16)
    5430:	80c00415 	stw	r3,16(r16)
    5434:	80800515 	stw	r2,20(r16)
    5438:	003fd306 	br	5388 <__alt_data_end+0xfffd4648>
    543c:	04810004 	movi	r18,1024
    5440:	003fc306 	br	5350 <__alt_data_end+0xfffd4610>
    5444:	0027883a 	mov	r19,zero
    5448:	04810004 	movi	r18,1024
    544c:	003fc006 	br	5350 <__alt_data_end+0xfffd4610>

00005450 <_malloc_r>:
    5450:	defff504 	addi	sp,sp,-44
    5454:	dc800315 	stw	r18,12(sp)
    5458:	dfc00a15 	stw	ra,40(sp)
    545c:	df000915 	stw	fp,36(sp)
    5460:	ddc00815 	stw	r23,32(sp)
    5464:	dd800715 	stw	r22,28(sp)
    5468:	dd400615 	stw	r21,24(sp)
    546c:	dd000515 	stw	r20,20(sp)
    5470:	dcc00415 	stw	r19,16(sp)
    5474:	dc400215 	stw	r17,8(sp)
    5478:	dc000115 	stw	r16,4(sp)
    547c:	288002c4 	addi	r2,r5,11
    5480:	00c00584 	movi	r3,22
    5484:	2025883a 	mov	r18,r4
    5488:	18807f2e 	bgeu	r3,r2,5688 <_malloc_r+0x238>
    548c:	047ffe04 	movi	r17,-8
    5490:	1462703a 	and	r17,r2,r17
    5494:	8800a316 	blt	r17,zero,5724 <_malloc_r+0x2d4>
    5498:	8940a236 	bltu	r17,r5,5724 <_malloc_r+0x2d4>
    549c:	000da440 	call	da44 <__malloc_lock>
    54a0:	00807dc4 	movi	r2,503
    54a4:	1441e92e 	bgeu	r2,r17,5c4c <_malloc_r+0x7fc>
    54a8:	8804d27a 	srli	r2,r17,9
    54ac:	1000a126 	beq	r2,zero,5734 <_malloc_r+0x2e4>
    54b0:	00c00104 	movi	r3,4
    54b4:	18811e36 	bltu	r3,r2,5930 <_malloc_r+0x4e0>
    54b8:	8804d1ba 	srli	r2,r17,6
    54bc:	12000e44 	addi	r8,r2,57
    54c0:	11c00e04 	addi	r7,r2,56
    54c4:	4209883a 	add	r4,r8,r8
    54c8:	04c00074 	movhi	r19,1
    54cc:	2109883a 	add	r4,r4,r4
    54d0:	9cfd3404 	addi	r19,r19,-2864
    54d4:	2109883a 	add	r4,r4,r4
    54d8:	9909883a 	add	r4,r19,r4
    54dc:	24000117 	ldw	r16,4(r4)
    54e0:	213ffe04 	addi	r4,r4,-8
    54e4:	24009726 	beq	r4,r16,5744 <_malloc_r+0x2f4>
    54e8:	80800117 	ldw	r2,4(r16)
    54ec:	01bfff04 	movi	r6,-4
    54f0:	014003c4 	movi	r5,15
    54f4:	1184703a 	and	r2,r2,r6
    54f8:	1447c83a 	sub	r3,r2,r17
    54fc:	28c00716 	blt	r5,r3,551c <_malloc_r+0xcc>
    5500:	1800920e 	bge	r3,zero,574c <_malloc_r+0x2fc>
    5504:	84000317 	ldw	r16,12(r16)
    5508:	24008e26 	beq	r4,r16,5744 <_malloc_r+0x2f4>
    550c:	80800117 	ldw	r2,4(r16)
    5510:	1184703a 	and	r2,r2,r6
    5514:	1447c83a 	sub	r3,r2,r17
    5518:	28fff90e 	bge	r5,r3,5500 <__alt_data_end+0xfffd47c0>
    551c:	3809883a 	mov	r4,r7
    5520:	01800074 	movhi	r6,1
    5524:	9c000417 	ldw	r16,16(r19)
    5528:	31bd3404 	addi	r6,r6,-2864
    552c:	32000204 	addi	r8,r6,8
    5530:	82013426 	beq	r16,r8,5a04 <_malloc_r+0x5b4>
    5534:	80c00117 	ldw	r3,4(r16)
    5538:	00bfff04 	movi	r2,-4
    553c:	188e703a 	and	r7,r3,r2
    5540:	3c45c83a 	sub	r2,r7,r17
    5544:	00c003c4 	movi	r3,15
    5548:	18811f16 	blt	r3,r2,59c8 <_malloc_r+0x578>
    554c:	32000515 	stw	r8,20(r6)
    5550:	32000415 	stw	r8,16(r6)
    5554:	10007f0e 	bge	r2,zero,5754 <_malloc_r+0x304>
    5558:	00807fc4 	movi	r2,511
    555c:	11c0fd36 	bltu	r2,r7,5954 <_malloc_r+0x504>
    5560:	3806d0fa 	srli	r3,r7,3
    5564:	01c00044 	movi	r7,1
    5568:	30800117 	ldw	r2,4(r6)
    556c:	19400044 	addi	r5,r3,1
    5570:	294b883a 	add	r5,r5,r5
    5574:	1807d0ba 	srai	r3,r3,2
    5578:	294b883a 	add	r5,r5,r5
    557c:	294b883a 	add	r5,r5,r5
    5580:	298b883a 	add	r5,r5,r6
    5584:	38c6983a 	sll	r3,r7,r3
    5588:	29c00017 	ldw	r7,0(r5)
    558c:	2a7ffe04 	addi	r9,r5,-8
    5590:	1886b03a 	or	r3,r3,r2
    5594:	82400315 	stw	r9,12(r16)
    5598:	81c00215 	stw	r7,8(r16)
    559c:	30c00115 	stw	r3,4(r6)
    55a0:	2c000015 	stw	r16,0(r5)
    55a4:	3c000315 	stw	r16,12(r7)
    55a8:	2005d0ba 	srai	r2,r4,2
    55ac:	01400044 	movi	r5,1
    55b0:	288a983a 	sll	r5,r5,r2
    55b4:	19406f36 	bltu	r3,r5,5774 <_malloc_r+0x324>
    55b8:	28c4703a 	and	r2,r5,r3
    55bc:	10000a1e 	bne	r2,zero,55e8 <_malloc_r+0x198>
    55c0:	00bfff04 	movi	r2,-4
    55c4:	294b883a 	add	r5,r5,r5
    55c8:	2088703a 	and	r4,r4,r2
    55cc:	28c4703a 	and	r2,r5,r3
    55d0:	21000104 	addi	r4,r4,4
    55d4:	1000041e 	bne	r2,zero,55e8 <_malloc_r+0x198>
    55d8:	294b883a 	add	r5,r5,r5
    55dc:	28c4703a 	and	r2,r5,r3
    55e0:	21000104 	addi	r4,r4,4
    55e4:	103ffc26 	beq	r2,zero,55d8 <__alt_data_end+0xfffd4898>
    55e8:	02bfff04 	movi	r10,-4
    55ec:	024003c4 	movi	r9,15
    55f0:	21800044 	addi	r6,r4,1
    55f4:	318d883a 	add	r6,r6,r6
    55f8:	318d883a 	add	r6,r6,r6
    55fc:	318d883a 	add	r6,r6,r6
    5600:	998d883a 	add	r6,r19,r6
    5604:	333ffe04 	addi	r12,r6,-8
    5608:	2017883a 	mov	r11,r4
    560c:	31800104 	addi	r6,r6,4
    5610:	34000017 	ldw	r16,0(r6)
    5614:	31fffd04 	addi	r7,r6,-12
    5618:	81c0041e 	bne	r16,r7,562c <_malloc_r+0x1dc>
    561c:	0000fb06 	br	5a0c <_malloc_r+0x5bc>
    5620:	1801030e 	bge	r3,zero,5a30 <_malloc_r+0x5e0>
    5624:	84000317 	ldw	r16,12(r16)
    5628:	81c0f826 	beq	r16,r7,5a0c <_malloc_r+0x5bc>
    562c:	80800117 	ldw	r2,4(r16)
    5630:	1284703a 	and	r2,r2,r10
    5634:	1447c83a 	sub	r3,r2,r17
    5638:	48fff90e 	bge	r9,r3,5620 <__alt_data_end+0xfffd48e0>
    563c:	80800317 	ldw	r2,12(r16)
    5640:	81000217 	ldw	r4,8(r16)
    5644:	89400054 	ori	r5,r17,1
    5648:	81400115 	stw	r5,4(r16)
    564c:	20800315 	stw	r2,12(r4)
    5650:	11000215 	stw	r4,8(r2)
    5654:	8463883a 	add	r17,r16,r17
    5658:	9c400515 	stw	r17,20(r19)
    565c:	9c400415 	stw	r17,16(r19)
    5660:	18800054 	ori	r2,r3,1
    5664:	88800115 	stw	r2,4(r17)
    5668:	8a000315 	stw	r8,12(r17)
    566c:	8a000215 	stw	r8,8(r17)
    5670:	88e3883a 	add	r17,r17,r3
    5674:	88c00015 	stw	r3,0(r17)
    5678:	9009883a 	mov	r4,r18
    567c:	000da480 	call	da48 <__malloc_unlock>
    5680:	80800204 	addi	r2,r16,8
    5684:	00001b06 	br	56f4 <_malloc_r+0x2a4>
    5688:	04400404 	movi	r17,16
    568c:	89402536 	bltu	r17,r5,5724 <_malloc_r+0x2d4>
    5690:	000da440 	call	da44 <__malloc_lock>
    5694:	00800184 	movi	r2,6
    5698:	01000084 	movi	r4,2
    569c:	04c00074 	movhi	r19,1
    56a0:	1085883a 	add	r2,r2,r2
    56a4:	9cfd3404 	addi	r19,r19,-2864
    56a8:	1085883a 	add	r2,r2,r2
    56ac:	9885883a 	add	r2,r19,r2
    56b0:	14000117 	ldw	r16,4(r2)
    56b4:	10fffe04 	addi	r3,r2,-8
    56b8:	80c0d926 	beq	r16,r3,5a20 <_malloc_r+0x5d0>
    56bc:	80c00117 	ldw	r3,4(r16)
    56c0:	81000317 	ldw	r4,12(r16)
    56c4:	00bfff04 	movi	r2,-4
    56c8:	1884703a 	and	r2,r3,r2
    56cc:	81400217 	ldw	r5,8(r16)
    56d0:	8085883a 	add	r2,r16,r2
    56d4:	10c00117 	ldw	r3,4(r2)
    56d8:	29000315 	stw	r4,12(r5)
    56dc:	21400215 	stw	r5,8(r4)
    56e0:	18c00054 	ori	r3,r3,1
    56e4:	10c00115 	stw	r3,4(r2)
    56e8:	9009883a 	mov	r4,r18
    56ec:	000da480 	call	da48 <__malloc_unlock>
    56f0:	80800204 	addi	r2,r16,8
    56f4:	dfc00a17 	ldw	ra,40(sp)
    56f8:	df000917 	ldw	fp,36(sp)
    56fc:	ddc00817 	ldw	r23,32(sp)
    5700:	dd800717 	ldw	r22,28(sp)
    5704:	dd400617 	ldw	r21,24(sp)
    5708:	dd000517 	ldw	r20,20(sp)
    570c:	dcc00417 	ldw	r19,16(sp)
    5710:	dc800317 	ldw	r18,12(sp)
    5714:	dc400217 	ldw	r17,8(sp)
    5718:	dc000117 	ldw	r16,4(sp)
    571c:	dec00b04 	addi	sp,sp,44
    5720:	f800283a 	ret
    5724:	00800304 	movi	r2,12
    5728:	90800015 	stw	r2,0(r18)
    572c:	0005883a 	mov	r2,zero
    5730:	003ff006 	br	56f4 <__alt_data_end+0xfffd49b4>
    5734:	01002004 	movi	r4,128
    5738:	02001004 	movi	r8,64
    573c:	01c00fc4 	movi	r7,63
    5740:	003f6106 	br	54c8 <__alt_data_end+0xfffd4788>
    5744:	4009883a 	mov	r4,r8
    5748:	003f7506 	br	5520 <__alt_data_end+0xfffd47e0>
    574c:	81000317 	ldw	r4,12(r16)
    5750:	003fde06 	br	56cc <__alt_data_end+0xfffd498c>
    5754:	81c5883a 	add	r2,r16,r7
    5758:	11400117 	ldw	r5,4(r2)
    575c:	9009883a 	mov	r4,r18
    5760:	29400054 	ori	r5,r5,1
    5764:	11400115 	stw	r5,4(r2)
    5768:	000da480 	call	da48 <__malloc_unlock>
    576c:	80800204 	addi	r2,r16,8
    5770:	003fe006 	br	56f4 <__alt_data_end+0xfffd49b4>
    5774:	9c000217 	ldw	r16,8(r19)
    5778:	00bfff04 	movi	r2,-4
    577c:	85800117 	ldw	r22,4(r16)
    5780:	b0ac703a 	and	r22,r22,r2
    5784:	b4400336 	bltu	r22,r17,5794 <_malloc_r+0x344>
    5788:	b445c83a 	sub	r2,r22,r17
    578c:	00c003c4 	movi	r3,15
    5790:	18805d16 	blt	r3,r2,5908 <_malloc_r+0x4b8>
    5794:	05c00074 	movhi	r23,1
    5798:	00800074 	movhi	r2,1
    579c:	1089b604 	addi	r2,r2,9944
    57a0:	bdc2c904 	addi	r23,r23,2852
    57a4:	15400017 	ldw	r21,0(r2)
    57a8:	b8c00017 	ldw	r3,0(r23)
    57ac:	00bfffc4 	movi	r2,-1
    57b0:	858d883a 	add	r6,r16,r22
    57b4:	8d6b883a 	add	r21,r17,r21
    57b8:	1880ea26 	beq	r3,r2,5b64 <_malloc_r+0x714>
    57bc:	ad4403c4 	addi	r21,r21,4111
    57c0:	00bc0004 	movi	r2,-4096
    57c4:	a8aa703a 	and	r21,r21,r2
    57c8:	a80b883a 	mov	r5,r21
    57cc:	9009883a 	mov	r4,r18
    57d0:	d9800015 	stw	r6,0(sp)
    57d4:	00070dc0 	call	70dc <_sbrk_r>
    57d8:	1029883a 	mov	r20,r2
    57dc:	00bfffc4 	movi	r2,-1
    57e0:	d9800017 	ldw	r6,0(sp)
    57e4:	a080e826 	beq	r20,r2,5b88 <_malloc_r+0x738>
    57e8:	a180a636 	bltu	r20,r6,5a84 <_malloc_r+0x634>
    57ec:	07000074 	movhi	fp,1
    57f0:	e709bf04 	addi	fp,fp,9980
    57f4:	e0800017 	ldw	r2,0(fp)
    57f8:	a887883a 	add	r3,r21,r2
    57fc:	e0c00015 	stw	r3,0(fp)
    5800:	3500e626 	beq	r6,r20,5b9c <_malloc_r+0x74c>
    5804:	b9000017 	ldw	r4,0(r23)
    5808:	00bfffc4 	movi	r2,-1
    580c:	2080ee26 	beq	r4,r2,5bc8 <_malloc_r+0x778>
    5810:	a185c83a 	sub	r2,r20,r6
    5814:	10c5883a 	add	r2,r2,r3
    5818:	e0800015 	stw	r2,0(fp)
    581c:	a0c001cc 	andi	r3,r20,7
    5820:	1800bc26 	beq	r3,zero,5b14 <_malloc_r+0x6c4>
    5824:	a0e9c83a 	sub	r20,r20,r3
    5828:	00840204 	movi	r2,4104
    582c:	a5000204 	addi	r20,r20,8
    5830:	10c7c83a 	sub	r3,r2,r3
    5834:	a545883a 	add	r2,r20,r21
    5838:	1083ffcc 	andi	r2,r2,4095
    583c:	18abc83a 	sub	r21,r3,r2
    5840:	a80b883a 	mov	r5,r21
    5844:	9009883a 	mov	r4,r18
    5848:	00070dc0 	call	70dc <_sbrk_r>
    584c:	00ffffc4 	movi	r3,-1
    5850:	10c0e126 	beq	r2,r3,5bd8 <_malloc_r+0x788>
    5854:	1505c83a 	sub	r2,r2,r20
    5858:	1545883a 	add	r2,r2,r21
    585c:	10800054 	ori	r2,r2,1
    5860:	e0c00017 	ldw	r3,0(fp)
    5864:	9d000215 	stw	r20,8(r19)
    5868:	a0800115 	stw	r2,4(r20)
    586c:	a8c7883a 	add	r3,r21,r3
    5870:	e0c00015 	stw	r3,0(fp)
    5874:	84c00e26 	beq	r16,r19,58b0 <_malloc_r+0x460>
    5878:	018003c4 	movi	r6,15
    587c:	3580a72e 	bgeu	r6,r22,5b1c <_malloc_r+0x6cc>
    5880:	81400117 	ldw	r5,4(r16)
    5884:	013ffe04 	movi	r4,-8
    5888:	b0bffd04 	addi	r2,r22,-12
    588c:	1104703a 	and	r2,r2,r4
    5890:	2900004c 	andi	r4,r5,1
    5894:	2088b03a 	or	r4,r4,r2
    5898:	81000115 	stw	r4,4(r16)
    589c:	01400144 	movi	r5,5
    58a0:	8089883a 	add	r4,r16,r2
    58a4:	21400115 	stw	r5,4(r4)
    58a8:	21400215 	stw	r5,8(r4)
    58ac:	3080cd36 	bltu	r6,r2,5be4 <_malloc_r+0x794>
    58b0:	00800074 	movhi	r2,1
    58b4:	1089b504 	addi	r2,r2,9940
    58b8:	11000017 	ldw	r4,0(r2)
    58bc:	20c0012e 	bgeu	r4,r3,58c4 <_malloc_r+0x474>
    58c0:	10c00015 	stw	r3,0(r2)
    58c4:	00800074 	movhi	r2,1
    58c8:	1089b404 	addi	r2,r2,9936
    58cc:	11000017 	ldw	r4,0(r2)
    58d0:	9c000217 	ldw	r16,8(r19)
    58d4:	20c0012e 	bgeu	r4,r3,58dc <_malloc_r+0x48c>
    58d8:	10c00015 	stw	r3,0(r2)
    58dc:	80c00117 	ldw	r3,4(r16)
    58e0:	00bfff04 	movi	r2,-4
    58e4:	1886703a 	and	r3,r3,r2
    58e8:	1c45c83a 	sub	r2,r3,r17
    58ec:	1c400236 	bltu	r3,r17,58f8 <_malloc_r+0x4a8>
    58f0:	00c003c4 	movi	r3,15
    58f4:	18800416 	blt	r3,r2,5908 <_malloc_r+0x4b8>
    58f8:	9009883a 	mov	r4,r18
    58fc:	000da480 	call	da48 <__malloc_unlock>
    5900:	0005883a 	mov	r2,zero
    5904:	003f7b06 	br	56f4 <__alt_data_end+0xfffd49b4>
    5908:	88c00054 	ori	r3,r17,1
    590c:	80c00115 	stw	r3,4(r16)
    5910:	8463883a 	add	r17,r16,r17
    5914:	10800054 	ori	r2,r2,1
    5918:	9c400215 	stw	r17,8(r19)
    591c:	88800115 	stw	r2,4(r17)
    5920:	9009883a 	mov	r4,r18
    5924:	000da480 	call	da48 <__malloc_unlock>
    5928:	80800204 	addi	r2,r16,8
    592c:	003f7106 	br	56f4 <__alt_data_end+0xfffd49b4>
    5930:	00c00504 	movi	r3,20
    5934:	18804a2e 	bgeu	r3,r2,5a60 <_malloc_r+0x610>
    5938:	00c01504 	movi	r3,84
    593c:	18806e36 	bltu	r3,r2,5af8 <_malloc_r+0x6a8>
    5940:	8804d33a 	srli	r2,r17,12
    5944:	12001bc4 	addi	r8,r2,111
    5948:	11c01b84 	addi	r7,r2,110
    594c:	4209883a 	add	r4,r8,r8
    5950:	003edd06 	br	54c8 <__alt_data_end+0xfffd4788>
    5954:	3804d27a 	srli	r2,r7,9
    5958:	00c00104 	movi	r3,4
    595c:	1880442e 	bgeu	r3,r2,5a70 <_malloc_r+0x620>
    5960:	00c00504 	movi	r3,20
    5964:	18808136 	bltu	r3,r2,5b6c <_malloc_r+0x71c>
    5968:	11401704 	addi	r5,r2,92
    596c:	10c016c4 	addi	r3,r2,91
    5970:	294b883a 	add	r5,r5,r5
    5974:	294b883a 	add	r5,r5,r5
    5978:	294b883a 	add	r5,r5,r5
    597c:	994b883a 	add	r5,r19,r5
    5980:	28800017 	ldw	r2,0(r5)
    5984:	01800074 	movhi	r6,1
    5988:	297ffe04 	addi	r5,r5,-8
    598c:	31bd3404 	addi	r6,r6,-2864
    5990:	28806526 	beq	r5,r2,5b28 <_malloc_r+0x6d8>
    5994:	01bfff04 	movi	r6,-4
    5998:	10c00117 	ldw	r3,4(r2)
    599c:	1986703a 	and	r3,r3,r6
    59a0:	38c0022e 	bgeu	r7,r3,59ac <_malloc_r+0x55c>
    59a4:	10800217 	ldw	r2,8(r2)
    59a8:	28bffb1e 	bne	r5,r2,5998 <__alt_data_end+0xfffd4c58>
    59ac:	11400317 	ldw	r5,12(r2)
    59b0:	98c00117 	ldw	r3,4(r19)
    59b4:	81400315 	stw	r5,12(r16)
    59b8:	80800215 	stw	r2,8(r16)
    59bc:	2c000215 	stw	r16,8(r5)
    59c0:	14000315 	stw	r16,12(r2)
    59c4:	003ef806 	br	55a8 <__alt_data_end+0xfffd4868>
    59c8:	88c00054 	ori	r3,r17,1
    59cc:	80c00115 	stw	r3,4(r16)
    59d0:	8463883a 	add	r17,r16,r17
    59d4:	34400515 	stw	r17,20(r6)
    59d8:	34400415 	stw	r17,16(r6)
    59dc:	10c00054 	ori	r3,r2,1
    59e0:	8a000315 	stw	r8,12(r17)
    59e4:	8a000215 	stw	r8,8(r17)
    59e8:	88c00115 	stw	r3,4(r17)
    59ec:	88a3883a 	add	r17,r17,r2
    59f0:	88800015 	stw	r2,0(r17)
    59f4:	9009883a 	mov	r4,r18
    59f8:	000da480 	call	da48 <__malloc_unlock>
    59fc:	80800204 	addi	r2,r16,8
    5a00:	003f3c06 	br	56f4 <__alt_data_end+0xfffd49b4>
    5a04:	30c00117 	ldw	r3,4(r6)
    5a08:	003ee706 	br	55a8 <__alt_data_end+0xfffd4868>
    5a0c:	5ac00044 	addi	r11,r11,1
    5a10:	588000cc 	andi	r2,r11,3
    5a14:	31800204 	addi	r6,r6,8
    5a18:	103efd1e 	bne	r2,zero,5610 <__alt_data_end+0xfffd48d0>
    5a1c:	00002406 	br	5ab0 <_malloc_r+0x660>
    5a20:	14000317 	ldw	r16,12(r2)
    5a24:	143f251e 	bne	r2,r16,56bc <__alt_data_end+0xfffd497c>
    5a28:	21000084 	addi	r4,r4,2
    5a2c:	003ebc06 	br	5520 <__alt_data_end+0xfffd47e0>
    5a30:	8085883a 	add	r2,r16,r2
    5a34:	10c00117 	ldw	r3,4(r2)
    5a38:	81000317 	ldw	r4,12(r16)
    5a3c:	81400217 	ldw	r5,8(r16)
    5a40:	18c00054 	ori	r3,r3,1
    5a44:	10c00115 	stw	r3,4(r2)
    5a48:	29000315 	stw	r4,12(r5)
    5a4c:	21400215 	stw	r5,8(r4)
    5a50:	9009883a 	mov	r4,r18
    5a54:	000da480 	call	da48 <__malloc_unlock>
    5a58:	80800204 	addi	r2,r16,8
    5a5c:	003f2506 	br	56f4 <__alt_data_end+0xfffd49b4>
    5a60:	12001704 	addi	r8,r2,92
    5a64:	11c016c4 	addi	r7,r2,91
    5a68:	4209883a 	add	r4,r8,r8
    5a6c:	003e9606 	br	54c8 <__alt_data_end+0xfffd4788>
    5a70:	3804d1ba 	srli	r2,r7,6
    5a74:	11400e44 	addi	r5,r2,57
    5a78:	10c00e04 	addi	r3,r2,56
    5a7c:	294b883a 	add	r5,r5,r5
    5a80:	003fbc06 	br	5974 <__alt_data_end+0xfffd4c34>
    5a84:	84ff5926 	beq	r16,r19,57ec <__alt_data_end+0xfffd4aac>
    5a88:	00800074 	movhi	r2,1
    5a8c:	10bd3404 	addi	r2,r2,-2864
    5a90:	14000217 	ldw	r16,8(r2)
    5a94:	00bfff04 	movi	r2,-4
    5a98:	80c00117 	ldw	r3,4(r16)
    5a9c:	1886703a 	and	r3,r3,r2
    5aa0:	003f9106 	br	58e8 <__alt_data_end+0xfffd4ba8>
    5aa4:	60800217 	ldw	r2,8(r12)
    5aa8:	213fffc4 	addi	r4,r4,-1
    5aac:	1300651e 	bne	r2,r12,5c44 <_malloc_r+0x7f4>
    5ab0:	208000cc 	andi	r2,r4,3
    5ab4:	633ffe04 	addi	r12,r12,-8
    5ab8:	103ffa1e 	bne	r2,zero,5aa4 <__alt_data_end+0xfffd4d64>
    5abc:	98800117 	ldw	r2,4(r19)
    5ac0:	0146303a 	nor	r3,zero,r5
    5ac4:	1884703a 	and	r2,r3,r2
    5ac8:	98800115 	stw	r2,4(r19)
    5acc:	294b883a 	add	r5,r5,r5
    5ad0:	117f2836 	bltu	r2,r5,5774 <__alt_data_end+0xfffd4a34>
    5ad4:	283f2726 	beq	r5,zero,5774 <__alt_data_end+0xfffd4a34>
    5ad8:	2886703a 	and	r3,r5,r2
    5adc:	5809883a 	mov	r4,r11
    5ae0:	183ec31e 	bne	r3,zero,55f0 <__alt_data_end+0xfffd48b0>
    5ae4:	294b883a 	add	r5,r5,r5
    5ae8:	2886703a 	and	r3,r5,r2
    5aec:	21000104 	addi	r4,r4,4
    5af0:	183ffc26 	beq	r3,zero,5ae4 <__alt_data_end+0xfffd4da4>
    5af4:	003ebe06 	br	55f0 <__alt_data_end+0xfffd48b0>
    5af8:	00c05504 	movi	r3,340
    5afc:	18801236 	bltu	r3,r2,5b48 <_malloc_r+0x6f8>
    5b00:	8804d3fa 	srli	r2,r17,15
    5b04:	12001e04 	addi	r8,r2,120
    5b08:	11c01dc4 	addi	r7,r2,119
    5b0c:	4209883a 	add	r4,r8,r8
    5b10:	003e6d06 	br	54c8 <__alt_data_end+0xfffd4788>
    5b14:	00c40004 	movi	r3,4096
    5b18:	003f4606 	br	5834 <__alt_data_end+0xfffd4af4>
    5b1c:	00800044 	movi	r2,1
    5b20:	a0800115 	stw	r2,4(r20)
    5b24:	003f7406 	br	58f8 <__alt_data_end+0xfffd4bb8>
    5b28:	1805d0ba 	srai	r2,r3,2
    5b2c:	01c00044 	movi	r7,1
    5b30:	30c00117 	ldw	r3,4(r6)
    5b34:	388e983a 	sll	r7,r7,r2
    5b38:	2805883a 	mov	r2,r5
    5b3c:	38c6b03a 	or	r3,r7,r3
    5b40:	30c00115 	stw	r3,4(r6)
    5b44:	003f9b06 	br	59b4 <__alt_data_end+0xfffd4c74>
    5b48:	00c15504 	movi	r3,1364
    5b4c:	18801a36 	bltu	r3,r2,5bb8 <_malloc_r+0x768>
    5b50:	8804d4ba 	srli	r2,r17,18
    5b54:	12001f44 	addi	r8,r2,125
    5b58:	11c01f04 	addi	r7,r2,124
    5b5c:	4209883a 	add	r4,r8,r8
    5b60:	003e5906 	br	54c8 <__alt_data_end+0xfffd4788>
    5b64:	ad400404 	addi	r21,r21,16
    5b68:	003f1706 	br	57c8 <__alt_data_end+0xfffd4a88>
    5b6c:	00c01504 	movi	r3,84
    5b70:	18802336 	bltu	r3,r2,5c00 <_malloc_r+0x7b0>
    5b74:	3804d33a 	srli	r2,r7,12
    5b78:	11401bc4 	addi	r5,r2,111
    5b7c:	10c01b84 	addi	r3,r2,110
    5b80:	294b883a 	add	r5,r5,r5
    5b84:	003f7b06 	br	5974 <__alt_data_end+0xfffd4c34>
    5b88:	9c000217 	ldw	r16,8(r19)
    5b8c:	00bfff04 	movi	r2,-4
    5b90:	80c00117 	ldw	r3,4(r16)
    5b94:	1886703a 	and	r3,r3,r2
    5b98:	003f5306 	br	58e8 <__alt_data_end+0xfffd4ba8>
    5b9c:	3083ffcc 	andi	r2,r6,4095
    5ba0:	103f181e 	bne	r2,zero,5804 <__alt_data_end+0xfffd4ac4>
    5ba4:	99000217 	ldw	r4,8(r19)
    5ba8:	b545883a 	add	r2,r22,r21
    5bac:	10800054 	ori	r2,r2,1
    5bb0:	20800115 	stw	r2,4(r4)
    5bb4:	003f3e06 	br	58b0 <__alt_data_end+0xfffd4b70>
    5bb8:	01003f84 	movi	r4,254
    5bbc:	02001fc4 	movi	r8,127
    5bc0:	01c01f84 	movi	r7,126
    5bc4:	003e4006 	br	54c8 <__alt_data_end+0xfffd4788>
    5bc8:	00800074 	movhi	r2,1
    5bcc:	1082c904 	addi	r2,r2,2852
    5bd0:	15000015 	stw	r20,0(r2)
    5bd4:	003f1106 	br	581c <__alt_data_end+0xfffd4adc>
    5bd8:	00800044 	movi	r2,1
    5bdc:	002b883a 	mov	r21,zero
    5be0:	003f1f06 	br	5860 <__alt_data_end+0xfffd4b20>
    5be4:	81400204 	addi	r5,r16,8
    5be8:	9009883a 	mov	r4,r18
    5bec:	0004d200 	call	4d20 <_free_r>
    5bf0:	00800074 	movhi	r2,1
    5bf4:	1089bf04 	addi	r2,r2,9980
    5bf8:	10c00017 	ldw	r3,0(r2)
    5bfc:	003f2c06 	br	58b0 <__alt_data_end+0xfffd4b70>
    5c00:	00c05504 	movi	r3,340
    5c04:	18800536 	bltu	r3,r2,5c1c <_malloc_r+0x7cc>
    5c08:	3804d3fa 	srli	r2,r7,15
    5c0c:	11401e04 	addi	r5,r2,120
    5c10:	10c01dc4 	addi	r3,r2,119
    5c14:	294b883a 	add	r5,r5,r5
    5c18:	003f5606 	br	5974 <__alt_data_end+0xfffd4c34>
    5c1c:	00c15504 	movi	r3,1364
    5c20:	18800536 	bltu	r3,r2,5c38 <_malloc_r+0x7e8>
    5c24:	3804d4ba 	srli	r2,r7,18
    5c28:	11401f44 	addi	r5,r2,125
    5c2c:	10c01f04 	addi	r3,r2,124
    5c30:	294b883a 	add	r5,r5,r5
    5c34:	003f4f06 	br	5974 <__alt_data_end+0xfffd4c34>
    5c38:	01403f84 	movi	r5,254
    5c3c:	00c01f84 	movi	r3,126
    5c40:	003f4c06 	br	5974 <__alt_data_end+0xfffd4c34>
    5c44:	98800117 	ldw	r2,4(r19)
    5c48:	003fa006 	br	5acc <__alt_data_end+0xfffd4d8c>
    5c4c:	8808d0fa 	srli	r4,r17,3
    5c50:	20800044 	addi	r2,r4,1
    5c54:	1085883a 	add	r2,r2,r2
    5c58:	003e9006 	br	569c <__alt_data_end+0xfffd495c>

00005c5c <memchr>:
    5c5c:	208000cc 	andi	r2,r4,3
    5c60:	280f883a 	mov	r7,r5
    5c64:	10003426 	beq	r2,zero,5d38 <memchr+0xdc>
    5c68:	30bfffc4 	addi	r2,r6,-1
    5c6c:	30001a26 	beq	r6,zero,5cd8 <memchr+0x7c>
    5c70:	20c00003 	ldbu	r3,0(r4)
    5c74:	29803fcc 	andi	r6,r5,255
    5c78:	30c0051e 	bne	r6,r3,5c90 <memchr+0x34>
    5c7c:	00001806 	br	5ce0 <memchr+0x84>
    5c80:	10001526 	beq	r2,zero,5cd8 <memchr+0x7c>
    5c84:	20c00003 	ldbu	r3,0(r4)
    5c88:	10bfffc4 	addi	r2,r2,-1
    5c8c:	30c01426 	beq	r6,r3,5ce0 <memchr+0x84>
    5c90:	21000044 	addi	r4,r4,1
    5c94:	20c000cc 	andi	r3,r4,3
    5c98:	183ff91e 	bne	r3,zero,5c80 <__alt_data_end+0xfffd4f40>
    5c9c:	020000c4 	movi	r8,3
    5ca0:	40801136 	bltu	r8,r2,5ce8 <memchr+0x8c>
    5ca4:	10000c26 	beq	r2,zero,5cd8 <memchr+0x7c>
    5ca8:	20c00003 	ldbu	r3,0(r4)
    5cac:	29403fcc 	andi	r5,r5,255
    5cb0:	28c00b26 	beq	r5,r3,5ce0 <memchr+0x84>
    5cb4:	20c00044 	addi	r3,r4,1
    5cb8:	39803fcc 	andi	r6,r7,255
    5cbc:	2089883a 	add	r4,r4,r2
    5cc0:	00000306 	br	5cd0 <memchr+0x74>
    5cc4:	18c00044 	addi	r3,r3,1
    5cc8:	197fffc3 	ldbu	r5,-1(r3)
    5ccc:	31400526 	beq	r6,r5,5ce4 <memchr+0x88>
    5cd0:	1805883a 	mov	r2,r3
    5cd4:	20fffb1e 	bne	r4,r3,5cc4 <__alt_data_end+0xfffd4f84>
    5cd8:	0005883a 	mov	r2,zero
    5cdc:	f800283a 	ret
    5ce0:	2005883a 	mov	r2,r4
    5ce4:	f800283a 	ret
    5ce8:	28c03fcc 	andi	r3,r5,255
    5cec:	1812923a 	slli	r9,r3,8
    5cf0:	02ffbff4 	movhi	r11,65279
    5cf4:	02a02074 	movhi	r10,32897
    5cf8:	48d2b03a 	or	r9,r9,r3
    5cfc:	4806943a 	slli	r3,r9,16
    5d00:	5affbfc4 	addi	r11,r11,-257
    5d04:	52a02004 	addi	r10,r10,-32640
    5d08:	48d2b03a 	or	r9,r9,r3
    5d0c:	20c00017 	ldw	r3,0(r4)
    5d10:	48c6f03a 	xor	r3,r9,r3
    5d14:	1acd883a 	add	r6,r3,r11
    5d18:	00c6303a 	nor	r3,zero,r3
    5d1c:	30c6703a 	and	r3,r6,r3
    5d20:	1a86703a 	and	r3,r3,r10
    5d24:	183fe01e 	bne	r3,zero,5ca8 <__alt_data_end+0xfffd4f68>
    5d28:	10bfff04 	addi	r2,r2,-4
    5d2c:	21000104 	addi	r4,r4,4
    5d30:	40bff636 	bltu	r8,r2,5d0c <__alt_data_end+0xfffd4fcc>
    5d34:	003fdb06 	br	5ca4 <__alt_data_end+0xfffd4f64>
    5d38:	3005883a 	mov	r2,r6
    5d3c:	003fd706 	br	5c9c <__alt_data_end+0xfffd4f5c>

00005d40 <memcpy>:
    5d40:	defffd04 	addi	sp,sp,-12
    5d44:	dfc00215 	stw	ra,8(sp)
    5d48:	dc400115 	stw	r17,4(sp)
    5d4c:	dc000015 	stw	r16,0(sp)
    5d50:	00c003c4 	movi	r3,15
    5d54:	2005883a 	mov	r2,r4
    5d58:	1980452e 	bgeu	r3,r6,5e70 <memcpy+0x130>
    5d5c:	2906b03a 	or	r3,r5,r4
    5d60:	18c000cc 	andi	r3,r3,3
    5d64:	1800441e 	bne	r3,zero,5e78 <memcpy+0x138>
    5d68:	347ffc04 	addi	r17,r6,-16
    5d6c:	8822d13a 	srli	r17,r17,4
    5d70:	28c00104 	addi	r3,r5,4
    5d74:	23400104 	addi	r13,r4,4
    5d78:	8820913a 	slli	r16,r17,4
    5d7c:	2b000204 	addi	r12,r5,8
    5d80:	22c00204 	addi	r11,r4,8
    5d84:	84000504 	addi	r16,r16,20
    5d88:	2a800304 	addi	r10,r5,12
    5d8c:	22400304 	addi	r9,r4,12
    5d90:	2c21883a 	add	r16,r5,r16
    5d94:	2811883a 	mov	r8,r5
    5d98:	200f883a 	mov	r7,r4
    5d9c:	41000017 	ldw	r4,0(r8)
    5da0:	1fc00017 	ldw	ra,0(r3)
    5da4:	63c00017 	ldw	r15,0(r12)
    5da8:	39000015 	stw	r4,0(r7)
    5dac:	53800017 	ldw	r14,0(r10)
    5db0:	6fc00015 	stw	ra,0(r13)
    5db4:	5bc00015 	stw	r15,0(r11)
    5db8:	4b800015 	stw	r14,0(r9)
    5dbc:	18c00404 	addi	r3,r3,16
    5dc0:	39c00404 	addi	r7,r7,16
    5dc4:	42000404 	addi	r8,r8,16
    5dc8:	6b400404 	addi	r13,r13,16
    5dcc:	63000404 	addi	r12,r12,16
    5dd0:	5ac00404 	addi	r11,r11,16
    5dd4:	52800404 	addi	r10,r10,16
    5dd8:	4a400404 	addi	r9,r9,16
    5ddc:	1c3fef1e 	bne	r3,r16,5d9c <__alt_data_end+0xfffd505c>
    5de0:	89c00044 	addi	r7,r17,1
    5de4:	380e913a 	slli	r7,r7,4
    5de8:	310003cc 	andi	r4,r6,15
    5dec:	02c000c4 	movi	r11,3
    5df0:	11c7883a 	add	r3,r2,r7
    5df4:	29cb883a 	add	r5,r5,r7
    5df8:	5900212e 	bgeu	r11,r4,5e80 <memcpy+0x140>
    5dfc:	1813883a 	mov	r9,r3
    5e00:	2811883a 	mov	r8,r5
    5e04:	200f883a 	mov	r7,r4
    5e08:	42800017 	ldw	r10,0(r8)
    5e0c:	4a400104 	addi	r9,r9,4
    5e10:	39ffff04 	addi	r7,r7,-4
    5e14:	4abfff15 	stw	r10,-4(r9)
    5e18:	42000104 	addi	r8,r8,4
    5e1c:	59fffa36 	bltu	r11,r7,5e08 <__alt_data_end+0xfffd50c8>
    5e20:	213fff04 	addi	r4,r4,-4
    5e24:	2008d0ba 	srli	r4,r4,2
    5e28:	318000cc 	andi	r6,r6,3
    5e2c:	21000044 	addi	r4,r4,1
    5e30:	2109883a 	add	r4,r4,r4
    5e34:	2109883a 	add	r4,r4,r4
    5e38:	1907883a 	add	r3,r3,r4
    5e3c:	290b883a 	add	r5,r5,r4
    5e40:	30000626 	beq	r6,zero,5e5c <memcpy+0x11c>
    5e44:	198d883a 	add	r6,r3,r6
    5e48:	29c00003 	ldbu	r7,0(r5)
    5e4c:	18c00044 	addi	r3,r3,1
    5e50:	29400044 	addi	r5,r5,1
    5e54:	19ffffc5 	stb	r7,-1(r3)
    5e58:	19bffb1e 	bne	r3,r6,5e48 <__alt_data_end+0xfffd5108>
    5e5c:	dfc00217 	ldw	ra,8(sp)
    5e60:	dc400117 	ldw	r17,4(sp)
    5e64:	dc000017 	ldw	r16,0(sp)
    5e68:	dec00304 	addi	sp,sp,12
    5e6c:	f800283a 	ret
    5e70:	2007883a 	mov	r3,r4
    5e74:	003ff206 	br	5e40 <__alt_data_end+0xfffd5100>
    5e78:	2007883a 	mov	r3,r4
    5e7c:	003ff106 	br	5e44 <__alt_data_end+0xfffd5104>
    5e80:	200d883a 	mov	r6,r4
    5e84:	003fee06 	br	5e40 <__alt_data_end+0xfffd5100>

00005e88 <memset>:
    5e88:	20c000cc 	andi	r3,r4,3
    5e8c:	2005883a 	mov	r2,r4
    5e90:	18004426 	beq	r3,zero,5fa4 <memset+0x11c>
    5e94:	31ffffc4 	addi	r7,r6,-1
    5e98:	30004026 	beq	r6,zero,5f9c <memset+0x114>
    5e9c:	2813883a 	mov	r9,r5
    5ea0:	200d883a 	mov	r6,r4
    5ea4:	2007883a 	mov	r3,r4
    5ea8:	00000406 	br	5ebc <memset+0x34>
    5eac:	3a3fffc4 	addi	r8,r7,-1
    5eb0:	31800044 	addi	r6,r6,1
    5eb4:	38003926 	beq	r7,zero,5f9c <memset+0x114>
    5eb8:	400f883a 	mov	r7,r8
    5ebc:	18c00044 	addi	r3,r3,1
    5ec0:	32400005 	stb	r9,0(r6)
    5ec4:	1a0000cc 	andi	r8,r3,3
    5ec8:	403ff81e 	bne	r8,zero,5eac <__alt_data_end+0xfffd516c>
    5ecc:	010000c4 	movi	r4,3
    5ed0:	21c02d2e 	bgeu	r4,r7,5f88 <memset+0x100>
    5ed4:	29003fcc 	andi	r4,r5,255
    5ed8:	200c923a 	slli	r6,r4,8
    5edc:	3108b03a 	or	r4,r6,r4
    5ee0:	200c943a 	slli	r6,r4,16
    5ee4:	218cb03a 	or	r6,r4,r6
    5ee8:	010003c4 	movi	r4,15
    5eec:	21c0182e 	bgeu	r4,r7,5f50 <memset+0xc8>
    5ef0:	3b3ffc04 	addi	r12,r7,-16
    5ef4:	6018d13a 	srli	r12,r12,4
    5ef8:	1a000104 	addi	r8,r3,4
    5efc:	1ac00204 	addi	r11,r3,8
    5f00:	6008913a 	slli	r4,r12,4
    5f04:	1a800304 	addi	r10,r3,12
    5f08:	1813883a 	mov	r9,r3
    5f0c:	21000504 	addi	r4,r4,20
    5f10:	1909883a 	add	r4,r3,r4
    5f14:	49800015 	stw	r6,0(r9)
    5f18:	41800015 	stw	r6,0(r8)
    5f1c:	59800015 	stw	r6,0(r11)
    5f20:	51800015 	stw	r6,0(r10)
    5f24:	42000404 	addi	r8,r8,16
    5f28:	4a400404 	addi	r9,r9,16
    5f2c:	5ac00404 	addi	r11,r11,16
    5f30:	52800404 	addi	r10,r10,16
    5f34:	413ff71e 	bne	r8,r4,5f14 <__alt_data_end+0xfffd51d4>
    5f38:	63000044 	addi	r12,r12,1
    5f3c:	6018913a 	slli	r12,r12,4
    5f40:	39c003cc 	andi	r7,r7,15
    5f44:	010000c4 	movi	r4,3
    5f48:	1b07883a 	add	r3,r3,r12
    5f4c:	21c00e2e 	bgeu	r4,r7,5f88 <memset+0x100>
    5f50:	1813883a 	mov	r9,r3
    5f54:	3811883a 	mov	r8,r7
    5f58:	010000c4 	movi	r4,3
    5f5c:	49800015 	stw	r6,0(r9)
    5f60:	423fff04 	addi	r8,r8,-4
    5f64:	4a400104 	addi	r9,r9,4
    5f68:	223ffc36 	bltu	r4,r8,5f5c <__alt_data_end+0xfffd521c>
    5f6c:	393fff04 	addi	r4,r7,-4
    5f70:	2008d0ba 	srli	r4,r4,2
    5f74:	39c000cc 	andi	r7,r7,3
    5f78:	21000044 	addi	r4,r4,1
    5f7c:	2109883a 	add	r4,r4,r4
    5f80:	2109883a 	add	r4,r4,r4
    5f84:	1907883a 	add	r3,r3,r4
    5f88:	38000526 	beq	r7,zero,5fa0 <memset+0x118>
    5f8c:	19cf883a 	add	r7,r3,r7
    5f90:	19400005 	stb	r5,0(r3)
    5f94:	18c00044 	addi	r3,r3,1
    5f98:	38fffd1e 	bne	r7,r3,5f90 <__alt_data_end+0xfffd5250>
    5f9c:	f800283a 	ret
    5fa0:	f800283a 	ret
    5fa4:	2007883a 	mov	r3,r4
    5fa8:	300f883a 	mov	r7,r6
    5fac:	003fc706 	br	5ecc <__alt_data_end+0xfffd518c>

00005fb0 <_Balloc>:
    5fb0:	20801317 	ldw	r2,76(r4)
    5fb4:	defffc04 	addi	sp,sp,-16
    5fb8:	dc400115 	stw	r17,4(sp)
    5fbc:	dc000015 	stw	r16,0(sp)
    5fc0:	dfc00315 	stw	ra,12(sp)
    5fc4:	dc800215 	stw	r18,8(sp)
    5fc8:	2023883a 	mov	r17,r4
    5fcc:	2821883a 	mov	r16,r5
    5fd0:	10000f26 	beq	r2,zero,6010 <_Balloc+0x60>
    5fd4:	8407883a 	add	r3,r16,r16
    5fd8:	18c7883a 	add	r3,r3,r3
    5fdc:	10c7883a 	add	r3,r2,r3
    5fe0:	18800017 	ldw	r2,0(r3)
    5fe4:	10001126 	beq	r2,zero,602c <_Balloc+0x7c>
    5fe8:	11000017 	ldw	r4,0(r2)
    5fec:	19000015 	stw	r4,0(r3)
    5ff0:	10000415 	stw	zero,16(r2)
    5ff4:	10000315 	stw	zero,12(r2)
    5ff8:	dfc00317 	ldw	ra,12(sp)
    5ffc:	dc800217 	ldw	r18,8(sp)
    6000:	dc400117 	ldw	r17,4(sp)
    6004:	dc000017 	ldw	r16,0(sp)
    6008:	dec00404 	addi	sp,sp,16
    600c:	f800283a 	ret
    6010:	01800844 	movi	r6,33
    6014:	01400104 	movi	r5,4
    6018:	0008b8c0 	call	8b8c <_calloc_r>
    601c:	88801315 	stw	r2,76(r17)
    6020:	103fec1e 	bne	r2,zero,5fd4 <__alt_data_end+0xfffd5294>
    6024:	0005883a 	mov	r2,zero
    6028:	003ff306 	br	5ff8 <__alt_data_end+0xfffd52b8>
    602c:	01400044 	movi	r5,1
    6030:	2c24983a 	sll	r18,r5,r16
    6034:	8809883a 	mov	r4,r17
    6038:	91800144 	addi	r6,r18,5
    603c:	318d883a 	add	r6,r6,r6
    6040:	318d883a 	add	r6,r6,r6
    6044:	0008b8c0 	call	8b8c <_calloc_r>
    6048:	103ff626 	beq	r2,zero,6024 <__alt_data_end+0xfffd52e4>
    604c:	14000115 	stw	r16,4(r2)
    6050:	14800215 	stw	r18,8(r2)
    6054:	003fe606 	br	5ff0 <__alt_data_end+0xfffd52b0>

00006058 <_Bfree>:
    6058:	28000826 	beq	r5,zero,607c <_Bfree+0x24>
    605c:	28c00117 	ldw	r3,4(r5)
    6060:	20801317 	ldw	r2,76(r4)
    6064:	18c7883a 	add	r3,r3,r3
    6068:	18c7883a 	add	r3,r3,r3
    606c:	10c5883a 	add	r2,r2,r3
    6070:	10c00017 	ldw	r3,0(r2)
    6074:	28c00015 	stw	r3,0(r5)
    6078:	11400015 	stw	r5,0(r2)
    607c:	f800283a 	ret

00006080 <__multadd>:
    6080:	defff704 	addi	sp,sp,-36
    6084:	dc800215 	stw	r18,8(sp)
    6088:	2c800417 	ldw	r18,16(r5)
    608c:	dd800615 	stw	r22,24(sp)
    6090:	dd400515 	stw	r21,20(sp)
    6094:	dd000415 	stw	r20,16(sp)
    6098:	dcc00315 	stw	r19,12(sp)
    609c:	dc400115 	stw	r17,4(sp)
    60a0:	dc000015 	stw	r16,0(sp)
    60a4:	dfc00815 	stw	ra,32(sp)
    60a8:	ddc00715 	stw	r23,28(sp)
    60ac:	2827883a 	mov	r19,r5
    60b0:	2029883a 	mov	r20,r4
    60b4:	3023883a 	mov	r17,r6
    60b8:	3821883a 	mov	r16,r7
    60bc:	2d400504 	addi	r21,r5,20
    60c0:	002d883a 	mov	r22,zero
    60c4:	adc00017 	ldw	r23,0(r21)
    60c8:	880b883a 	mov	r5,r17
    60cc:	ad400104 	addi	r21,r21,4
    60d0:	b93fffcc 	andi	r4,r23,65535
    60d4:	000ab6c0 	call	ab6c <__mulsi3>
    60d8:	b808d43a 	srli	r4,r23,16
    60dc:	880b883a 	mov	r5,r17
    60e0:	1421883a 	add	r16,r2,r16
    60e4:	000ab6c0 	call	ab6c <__mulsi3>
    60e8:	800ed43a 	srli	r7,r16,16
    60ec:	80ffffcc 	andi	r3,r16,65535
    60f0:	b5800044 	addi	r22,r22,1
    60f4:	11c5883a 	add	r2,r2,r7
    60f8:	100e943a 	slli	r7,r2,16
    60fc:	1020d43a 	srli	r16,r2,16
    6100:	38c7883a 	add	r3,r7,r3
    6104:	a8ffff15 	stw	r3,-4(r21)
    6108:	b4bfee16 	blt	r22,r18,60c4 <__alt_data_end+0xfffd5384>
    610c:	80000926 	beq	r16,zero,6134 <__multadd+0xb4>
    6110:	98800217 	ldw	r2,8(r19)
    6114:	9080130e 	bge	r18,r2,6164 <__multadd+0xe4>
    6118:	90800144 	addi	r2,r18,5
    611c:	1085883a 	add	r2,r2,r2
    6120:	1085883a 	add	r2,r2,r2
    6124:	9885883a 	add	r2,r19,r2
    6128:	14000015 	stw	r16,0(r2)
    612c:	94800044 	addi	r18,r18,1
    6130:	9c800415 	stw	r18,16(r19)
    6134:	9805883a 	mov	r2,r19
    6138:	dfc00817 	ldw	ra,32(sp)
    613c:	ddc00717 	ldw	r23,28(sp)
    6140:	dd800617 	ldw	r22,24(sp)
    6144:	dd400517 	ldw	r21,20(sp)
    6148:	dd000417 	ldw	r20,16(sp)
    614c:	dcc00317 	ldw	r19,12(sp)
    6150:	dc800217 	ldw	r18,8(sp)
    6154:	dc400117 	ldw	r17,4(sp)
    6158:	dc000017 	ldw	r16,0(sp)
    615c:	dec00904 	addi	sp,sp,36
    6160:	f800283a 	ret
    6164:	99400117 	ldw	r5,4(r19)
    6168:	a009883a 	mov	r4,r20
    616c:	29400044 	addi	r5,r5,1
    6170:	0005fb00 	call	5fb0 <_Balloc>
    6174:	99800417 	ldw	r6,16(r19)
    6178:	99400304 	addi	r5,r19,12
    617c:	11000304 	addi	r4,r2,12
    6180:	31800084 	addi	r6,r6,2
    6184:	318d883a 	add	r6,r6,r6
    6188:	318d883a 	add	r6,r6,r6
    618c:	1023883a 	mov	r17,r2
    6190:	0005d400 	call	5d40 <memcpy>
    6194:	98000a26 	beq	r19,zero,61c0 <__multadd+0x140>
    6198:	98c00117 	ldw	r3,4(r19)
    619c:	a0801317 	ldw	r2,76(r20)
    61a0:	18c7883a 	add	r3,r3,r3
    61a4:	18c7883a 	add	r3,r3,r3
    61a8:	10c5883a 	add	r2,r2,r3
    61ac:	10c00017 	ldw	r3,0(r2)
    61b0:	98c00015 	stw	r3,0(r19)
    61b4:	14c00015 	stw	r19,0(r2)
    61b8:	8827883a 	mov	r19,r17
    61bc:	003fd606 	br	6118 <__alt_data_end+0xfffd53d8>
    61c0:	8827883a 	mov	r19,r17
    61c4:	003fd406 	br	6118 <__alt_data_end+0xfffd53d8>

000061c8 <__s2b>:
    61c8:	defff904 	addi	sp,sp,-28
    61cc:	dc400115 	stw	r17,4(sp)
    61d0:	dc000015 	stw	r16,0(sp)
    61d4:	2023883a 	mov	r17,r4
    61d8:	2821883a 	mov	r16,r5
    61dc:	39000204 	addi	r4,r7,8
    61e0:	01400244 	movi	r5,9
    61e4:	dcc00315 	stw	r19,12(sp)
    61e8:	dc800215 	stw	r18,8(sp)
    61ec:	dfc00615 	stw	ra,24(sp)
    61f0:	dd400515 	stw	r21,20(sp)
    61f4:	dd000415 	stw	r20,16(sp)
    61f8:	3825883a 	mov	r18,r7
    61fc:	3027883a 	mov	r19,r6
    6200:	00005cc0 	call	5cc <__divsi3>
    6204:	00c00044 	movi	r3,1
    6208:	000b883a 	mov	r5,zero
    620c:	1880030e 	bge	r3,r2,621c <__s2b+0x54>
    6210:	18c7883a 	add	r3,r3,r3
    6214:	29400044 	addi	r5,r5,1
    6218:	18bffd16 	blt	r3,r2,6210 <__alt_data_end+0xfffd54d0>
    621c:	8809883a 	mov	r4,r17
    6220:	0005fb00 	call	5fb0 <_Balloc>
    6224:	d8c00717 	ldw	r3,28(sp)
    6228:	10c00515 	stw	r3,20(r2)
    622c:	00c00044 	movi	r3,1
    6230:	10c00415 	stw	r3,16(r2)
    6234:	00c00244 	movi	r3,9
    6238:	1cc0210e 	bge	r3,r19,62c0 <__s2b+0xf8>
    623c:	80eb883a 	add	r21,r16,r3
    6240:	a829883a 	mov	r20,r21
    6244:	84e1883a 	add	r16,r16,r19
    6248:	a1c00007 	ldb	r7,0(r20)
    624c:	01800284 	movi	r6,10
    6250:	a5000044 	addi	r20,r20,1
    6254:	100b883a 	mov	r5,r2
    6258:	39fff404 	addi	r7,r7,-48
    625c:	8809883a 	mov	r4,r17
    6260:	00060800 	call	6080 <__multadd>
    6264:	a43ff81e 	bne	r20,r16,6248 <__alt_data_end+0xfffd5508>
    6268:	ace1883a 	add	r16,r21,r19
    626c:	843ffe04 	addi	r16,r16,-8
    6270:	9c800a0e 	bge	r19,r18,629c <__s2b+0xd4>
    6274:	94e5c83a 	sub	r18,r18,r19
    6278:	84a5883a 	add	r18,r16,r18
    627c:	81c00007 	ldb	r7,0(r16)
    6280:	01800284 	movi	r6,10
    6284:	84000044 	addi	r16,r16,1
    6288:	100b883a 	mov	r5,r2
    628c:	39fff404 	addi	r7,r7,-48
    6290:	8809883a 	mov	r4,r17
    6294:	00060800 	call	6080 <__multadd>
    6298:	84bff81e 	bne	r16,r18,627c <__alt_data_end+0xfffd553c>
    629c:	dfc00617 	ldw	ra,24(sp)
    62a0:	dd400517 	ldw	r21,20(sp)
    62a4:	dd000417 	ldw	r20,16(sp)
    62a8:	dcc00317 	ldw	r19,12(sp)
    62ac:	dc800217 	ldw	r18,8(sp)
    62b0:	dc400117 	ldw	r17,4(sp)
    62b4:	dc000017 	ldw	r16,0(sp)
    62b8:	dec00704 	addi	sp,sp,28
    62bc:	f800283a 	ret
    62c0:	84000284 	addi	r16,r16,10
    62c4:	1827883a 	mov	r19,r3
    62c8:	003fe906 	br	6270 <__alt_data_end+0xfffd5530>

000062cc <__hi0bits>:
    62cc:	20bfffec 	andhi	r2,r4,65535
    62d0:	1000141e 	bne	r2,zero,6324 <__hi0bits+0x58>
    62d4:	2008943a 	slli	r4,r4,16
    62d8:	00800404 	movi	r2,16
    62dc:	20ffc02c 	andhi	r3,r4,65280
    62e0:	1800021e 	bne	r3,zero,62ec <__hi0bits+0x20>
    62e4:	2008923a 	slli	r4,r4,8
    62e8:	10800204 	addi	r2,r2,8
    62ec:	20fc002c 	andhi	r3,r4,61440
    62f0:	1800021e 	bne	r3,zero,62fc <__hi0bits+0x30>
    62f4:	2008913a 	slli	r4,r4,4
    62f8:	10800104 	addi	r2,r2,4
    62fc:	20f0002c 	andhi	r3,r4,49152
    6300:	1800031e 	bne	r3,zero,6310 <__hi0bits+0x44>
    6304:	2109883a 	add	r4,r4,r4
    6308:	10800084 	addi	r2,r2,2
    630c:	2109883a 	add	r4,r4,r4
    6310:	20000316 	blt	r4,zero,6320 <__hi0bits+0x54>
    6314:	2110002c 	andhi	r4,r4,16384
    6318:	2000041e 	bne	r4,zero,632c <__hi0bits+0x60>
    631c:	00800804 	movi	r2,32
    6320:	f800283a 	ret
    6324:	0005883a 	mov	r2,zero
    6328:	003fec06 	br	62dc <__alt_data_end+0xfffd559c>
    632c:	10800044 	addi	r2,r2,1
    6330:	f800283a 	ret

00006334 <__lo0bits>:
    6334:	20c00017 	ldw	r3,0(r4)
    6338:	188001cc 	andi	r2,r3,7
    633c:	10000826 	beq	r2,zero,6360 <__lo0bits+0x2c>
    6340:	1880004c 	andi	r2,r3,1
    6344:	1000211e 	bne	r2,zero,63cc <__lo0bits+0x98>
    6348:	1880008c 	andi	r2,r3,2
    634c:	1000211e 	bne	r2,zero,63d4 <__lo0bits+0xa0>
    6350:	1806d0ba 	srli	r3,r3,2
    6354:	00800084 	movi	r2,2
    6358:	20c00015 	stw	r3,0(r4)
    635c:	f800283a 	ret
    6360:	18bfffcc 	andi	r2,r3,65535
    6364:	10001326 	beq	r2,zero,63b4 <__lo0bits+0x80>
    6368:	0005883a 	mov	r2,zero
    636c:	19403fcc 	andi	r5,r3,255
    6370:	2800021e 	bne	r5,zero,637c <__lo0bits+0x48>
    6374:	1806d23a 	srli	r3,r3,8
    6378:	10800204 	addi	r2,r2,8
    637c:	194003cc 	andi	r5,r3,15
    6380:	2800021e 	bne	r5,zero,638c <__lo0bits+0x58>
    6384:	1806d13a 	srli	r3,r3,4
    6388:	10800104 	addi	r2,r2,4
    638c:	194000cc 	andi	r5,r3,3
    6390:	2800021e 	bne	r5,zero,639c <__lo0bits+0x68>
    6394:	1806d0ba 	srli	r3,r3,2
    6398:	10800084 	addi	r2,r2,2
    639c:	1940004c 	andi	r5,r3,1
    63a0:	2800081e 	bne	r5,zero,63c4 <__lo0bits+0x90>
    63a4:	1806d07a 	srli	r3,r3,1
    63a8:	1800051e 	bne	r3,zero,63c0 <__lo0bits+0x8c>
    63ac:	00800804 	movi	r2,32
    63b0:	f800283a 	ret
    63b4:	1806d43a 	srli	r3,r3,16
    63b8:	00800404 	movi	r2,16
    63bc:	003feb06 	br	636c <__alt_data_end+0xfffd562c>
    63c0:	10800044 	addi	r2,r2,1
    63c4:	20c00015 	stw	r3,0(r4)
    63c8:	f800283a 	ret
    63cc:	0005883a 	mov	r2,zero
    63d0:	f800283a 	ret
    63d4:	1806d07a 	srli	r3,r3,1
    63d8:	00800044 	movi	r2,1
    63dc:	20c00015 	stw	r3,0(r4)
    63e0:	f800283a 	ret

000063e4 <__i2b>:
    63e4:	defffd04 	addi	sp,sp,-12
    63e8:	dc000015 	stw	r16,0(sp)
    63ec:	04000044 	movi	r16,1
    63f0:	dc400115 	stw	r17,4(sp)
    63f4:	2823883a 	mov	r17,r5
    63f8:	800b883a 	mov	r5,r16
    63fc:	dfc00215 	stw	ra,8(sp)
    6400:	0005fb00 	call	5fb0 <_Balloc>
    6404:	14400515 	stw	r17,20(r2)
    6408:	14000415 	stw	r16,16(r2)
    640c:	dfc00217 	ldw	ra,8(sp)
    6410:	dc400117 	ldw	r17,4(sp)
    6414:	dc000017 	ldw	r16,0(sp)
    6418:	dec00304 	addi	sp,sp,12
    641c:	f800283a 	ret

00006420 <__multiply>:
    6420:	deffef04 	addi	sp,sp,-68
    6424:	dc400815 	stw	r17,32(sp)
    6428:	dc000715 	stw	r16,28(sp)
    642c:	34400417 	ldw	r17,16(r6)
    6430:	2c000417 	ldw	r16,16(r5)
    6434:	dd800d15 	stw	r22,52(sp)
    6438:	dc800915 	stw	r18,36(sp)
    643c:	dfc01015 	stw	ra,64(sp)
    6440:	df000f15 	stw	fp,60(sp)
    6444:	ddc00e15 	stw	r23,56(sp)
    6448:	dd400c15 	stw	r21,48(sp)
    644c:	dd000b15 	stw	r20,44(sp)
    6450:	dcc00a15 	stw	r19,40(sp)
    6454:	2825883a 	mov	r18,r5
    6458:	302d883a 	mov	r22,r6
    645c:	8440050e 	bge	r16,r17,6474 <__multiply+0x54>
    6460:	8007883a 	mov	r3,r16
    6464:	3025883a 	mov	r18,r6
    6468:	8821883a 	mov	r16,r17
    646c:	282d883a 	mov	r22,r5
    6470:	1823883a 	mov	r17,r3
    6474:	90800217 	ldw	r2,8(r18)
    6478:	8447883a 	add	r3,r16,r17
    647c:	d8c00215 	stw	r3,8(sp)
    6480:	91400117 	ldw	r5,4(r18)
    6484:	10c0010e 	bge	r2,r3,648c <__multiply+0x6c>
    6488:	29400044 	addi	r5,r5,1
    648c:	0005fb00 	call	5fb0 <_Balloc>
    6490:	d8c00217 	ldw	r3,8(sp)
    6494:	d8800615 	stw	r2,24(sp)
    6498:	18eb883a 	add	r21,r3,r3
    649c:	ad6b883a 	add	r21,r21,r21
    64a0:	10c00504 	addi	r3,r2,20
    64a4:	1d6b883a 	add	r21,r3,r21
    64a8:	d8c00115 	stw	r3,4(sp)
    64ac:	dd400315 	stw	r21,12(sp)
    64b0:	1805883a 	mov	r2,r3
    64b4:	1d40042e 	bgeu	r3,r21,64c8 <__multiply+0xa8>
    64b8:	d8c00317 	ldw	r3,12(sp)
    64bc:	10000015 	stw	zero,0(r2)
    64c0:	10800104 	addi	r2,r2,4
    64c4:	10fffc36 	bltu	r2,r3,64b8 <__alt_data_end+0xfffd5778>
    64c8:	8c63883a 	add	r17,r17,r17
    64cc:	b5800504 	addi	r22,r22,20
    64d0:	8c63883a 	add	r17,r17,r17
    64d4:	94800504 	addi	r18,r18,20
    64d8:	8421883a 	add	r16,r16,r16
    64dc:	b463883a 	add	r17,r22,r17
    64e0:	8421883a 	add	r16,r16,r16
    64e4:	dd800015 	stw	r22,0(sp)
    64e8:	dc800415 	stw	r18,16(sp)
    64ec:	dc400515 	stw	r17,20(sp)
    64f0:	9429883a 	add	r20,r18,r16
    64f4:	b4404f2e 	bgeu	r22,r17,6634 <__multiply+0x214>
    64f8:	d8c00017 	ldw	r3,0(sp)
    64fc:	1c800017 	ldw	r18,0(r3)
    6500:	947fffcc 	andi	r17,r18,65535
    6504:	88001e26 	beq	r17,zero,6580 <__multiply+0x160>
    6508:	dd800117 	ldw	r22,4(sp)
    650c:	dd400417 	ldw	r21,16(sp)
    6510:	0027883a 	mov	r19,zero
    6514:	ac800017 	ldw	r18,0(r21)
    6518:	b4000017 	ldw	r16,0(r22)
    651c:	880b883a 	mov	r5,r17
    6520:	913fffcc 	andi	r4,r18,65535
    6524:	000ab6c0 	call	ab6c <__mulsi3>
    6528:	9008d43a 	srli	r4,r18,16
    652c:	84bfffcc 	andi	r18,r16,65535
    6530:	1485883a 	add	r2,r2,r18
    6534:	14e5883a 	add	r18,r2,r19
    6538:	8020d43a 	srli	r16,r16,16
    653c:	9026d43a 	srli	r19,r18,16
    6540:	880b883a 	mov	r5,r17
    6544:	000ab6c0 	call	ab6c <__mulsi3>
    6548:	1405883a 	add	r2,r2,r16
    654c:	14e1883a 	add	r16,r2,r19
    6550:	90ffffcc 	andi	r3,r18,65535
    6554:	8024943a 	slli	r18,r16,16
    6558:	ad400104 	addi	r21,r21,4
    655c:	b005883a 	mov	r2,r22
    6560:	90c6b03a 	or	r3,r18,r3
    6564:	b0c00015 	stw	r3,0(r22)
    6568:	8026d43a 	srli	r19,r16,16
    656c:	b5800104 	addi	r22,r22,4
    6570:	ad3fe836 	bltu	r21,r20,6514 <__alt_data_end+0xfffd57d4>
    6574:	d8c00017 	ldw	r3,0(sp)
    6578:	14c00115 	stw	r19,4(r2)
    657c:	1c800017 	ldw	r18,0(r3)
    6580:	9024d43a 	srli	r18,r18,16
    6584:	90002226 	beq	r18,zero,6610 <__multiply+0x1f0>
    6588:	d8c00117 	ldw	r3,4(sp)
    658c:	dd800417 	ldw	r22,16(sp)
    6590:	002f883a 	mov	r23,zero
    6594:	1f000017 	ldw	fp,0(r3)
    6598:	1823883a 	mov	r17,r3
    659c:	182b883a 	mov	r21,r3
    65a0:	e021883a 	mov	r16,fp
    65a4:	00000106 	br	65ac <__multiply+0x18c>
    65a8:	982b883a 	mov	r21,r19
    65ac:	b100000b 	ldhu	r4,0(r22)
    65b0:	8020d43a 	srli	r16,r16,16
    65b4:	900b883a 	mov	r5,r18
    65b8:	000ab6c0 	call	ab6c <__mulsi3>
    65bc:	1405883a 	add	r2,r2,r16
    65c0:	15ef883a 	add	r23,r2,r23
    65c4:	b804943a 	slli	r2,r23,16
    65c8:	e0ffffcc 	andi	r3,fp,65535
    65cc:	8c400104 	addi	r17,r17,4
    65d0:	10c6b03a 	or	r3,r2,r3
    65d4:	88ffff15 	stw	r3,-4(r17)
    65d8:	b5800104 	addi	r22,r22,4
    65dc:	b13fff17 	ldw	r4,-4(r22)
    65e0:	acc00104 	addi	r19,r21,4
    65e4:	900b883a 	mov	r5,r18
    65e8:	2008d43a 	srli	r4,r4,16
    65ec:	9c000017 	ldw	r16,0(r19)
    65f0:	000ab6c0 	call	ab6c <__mulsi3>
    65f4:	b806d43a 	srli	r3,r23,16
    65f8:	813fffcc 	andi	r4,r16,65535
    65fc:	1105883a 	add	r2,r2,r4
    6600:	10f9883a 	add	fp,r2,r3
    6604:	e02ed43a 	srli	r23,fp,16
    6608:	b53fe736 	bltu	r22,r20,65a8 <__alt_data_end+0xfffd5868>
    660c:	af000115 	stw	fp,4(r21)
    6610:	d8c00017 	ldw	r3,0(sp)
    6614:	d9000517 	ldw	r4,20(sp)
    6618:	18c00104 	addi	r3,r3,4
    661c:	d8c00015 	stw	r3,0(sp)
    6620:	d8c00117 	ldw	r3,4(sp)
    6624:	18c00104 	addi	r3,r3,4
    6628:	d8c00115 	stw	r3,4(sp)
    662c:	d8c00017 	ldw	r3,0(sp)
    6630:	193fb136 	bltu	r3,r4,64f8 <__alt_data_end+0xfffd57b8>
    6634:	d8c00217 	ldw	r3,8(sp)
    6638:	00c00c0e 	bge	zero,r3,666c <__multiply+0x24c>
    663c:	d8c00317 	ldw	r3,12(sp)
    6640:	18bfff17 	ldw	r2,-4(r3)
    6644:	1d7fff04 	addi	r21,r3,-4
    6648:	10000326 	beq	r2,zero,6658 <__multiply+0x238>
    664c:	00000706 	br	666c <__multiply+0x24c>
    6650:	a8800017 	ldw	r2,0(r21)
    6654:	1000051e 	bne	r2,zero,666c <__multiply+0x24c>
    6658:	d8c00217 	ldw	r3,8(sp)
    665c:	ad7fff04 	addi	r21,r21,-4
    6660:	18ffffc4 	addi	r3,r3,-1
    6664:	d8c00215 	stw	r3,8(sp)
    6668:	183ff91e 	bne	r3,zero,6650 <__alt_data_end+0xfffd5910>
    666c:	d8c00617 	ldw	r3,24(sp)
    6670:	d9000217 	ldw	r4,8(sp)
    6674:	1805883a 	mov	r2,r3
    6678:	19000415 	stw	r4,16(r3)
    667c:	dfc01017 	ldw	ra,64(sp)
    6680:	df000f17 	ldw	fp,60(sp)
    6684:	ddc00e17 	ldw	r23,56(sp)
    6688:	dd800d17 	ldw	r22,52(sp)
    668c:	dd400c17 	ldw	r21,48(sp)
    6690:	dd000b17 	ldw	r20,44(sp)
    6694:	dcc00a17 	ldw	r19,40(sp)
    6698:	dc800917 	ldw	r18,36(sp)
    669c:	dc400817 	ldw	r17,32(sp)
    66a0:	dc000717 	ldw	r16,28(sp)
    66a4:	dec01104 	addi	sp,sp,68
    66a8:	f800283a 	ret

000066ac <__pow5mult>:
    66ac:	defffa04 	addi	sp,sp,-24
    66b0:	dcc00315 	stw	r19,12(sp)
    66b4:	dc000015 	stw	r16,0(sp)
    66b8:	dfc00515 	stw	ra,20(sp)
    66bc:	dd000415 	stw	r20,16(sp)
    66c0:	dc800215 	stw	r18,8(sp)
    66c4:	dc400115 	stw	r17,4(sp)
    66c8:	308000cc 	andi	r2,r6,3
    66cc:	3021883a 	mov	r16,r6
    66d0:	2027883a 	mov	r19,r4
    66d4:	10002f1e 	bne	r2,zero,6794 <__pow5mult+0xe8>
    66d8:	2825883a 	mov	r18,r5
    66dc:	8021d0ba 	srai	r16,r16,2
    66e0:	80001a26 	beq	r16,zero,674c <__pow5mult+0xa0>
    66e4:	9c401217 	ldw	r17,72(r19)
    66e8:	8800061e 	bne	r17,zero,6704 <__pow5mult+0x58>
    66ec:	00003406 	br	67c0 <__pow5mult+0x114>
    66f0:	8021d07a 	srai	r16,r16,1
    66f4:	80001526 	beq	r16,zero,674c <__pow5mult+0xa0>
    66f8:	88800017 	ldw	r2,0(r17)
    66fc:	10001c26 	beq	r2,zero,6770 <__pow5mult+0xc4>
    6700:	1023883a 	mov	r17,r2
    6704:	8080004c 	andi	r2,r16,1
    6708:	103ff926 	beq	r2,zero,66f0 <__alt_data_end+0xfffd59b0>
    670c:	880d883a 	mov	r6,r17
    6710:	900b883a 	mov	r5,r18
    6714:	9809883a 	mov	r4,r19
    6718:	00064200 	call	6420 <__multiply>
    671c:	90001b26 	beq	r18,zero,678c <__pow5mult+0xe0>
    6720:	91000117 	ldw	r4,4(r18)
    6724:	98c01317 	ldw	r3,76(r19)
    6728:	8021d07a 	srai	r16,r16,1
    672c:	2109883a 	add	r4,r4,r4
    6730:	2109883a 	add	r4,r4,r4
    6734:	1907883a 	add	r3,r3,r4
    6738:	19000017 	ldw	r4,0(r3)
    673c:	91000015 	stw	r4,0(r18)
    6740:	1c800015 	stw	r18,0(r3)
    6744:	1025883a 	mov	r18,r2
    6748:	803feb1e 	bne	r16,zero,66f8 <__alt_data_end+0xfffd59b8>
    674c:	9005883a 	mov	r2,r18
    6750:	dfc00517 	ldw	ra,20(sp)
    6754:	dd000417 	ldw	r20,16(sp)
    6758:	dcc00317 	ldw	r19,12(sp)
    675c:	dc800217 	ldw	r18,8(sp)
    6760:	dc400117 	ldw	r17,4(sp)
    6764:	dc000017 	ldw	r16,0(sp)
    6768:	dec00604 	addi	sp,sp,24
    676c:	f800283a 	ret
    6770:	880d883a 	mov	r6,r17
    6774:	880b883a 	mov	r5,r17
    6778:	9809883a 	mov	r4,r19
    677c:	00064200 	call	6420 <__multiply>
    6780:	88800015 	stw	r2,0(r17)
    6784:	10000015 	stw	zero,0(r2)
    6788:	003fdd06 	br	6700 <__alt_data_end+0xfffd59c0>
    678c:	1025883a 	mov	r18,r2
    6790:	003fd706 	br	66f0 <__alt_data_end+0xfffd59b0>
    6794:	10bfffc4 	addi	r2,r2,-1
    6798:	1085883a 	add	r2,r2,r2
    679c:	00c00074 	movhi	r3,1
    67a0:	18fb7004 	addi	r3,r3,-4672
    67a4:	1085883a 	add	r2,r2,r2
    67a8:	1885883a 	add	r2,r3,r2
    67ac:	11800017 	ldw	r6,0(r2)
    67b0:	000f883a 	mov	r7,zero
    67b4:	00060800 	call	6080 <__multadd>
    67b8:	1025883a 	mov	r18,r2
    67bc:	003fc706 	br	66dc <__alt_data_end+0xfffd599c>
    67c0:	05000044 	movi	r20,1
    67c4:	a00b883a 	mov	r5,r20
    67c8:	9809883a 	mov	r4,r19
    67cc:	0005fb00 	call	5fb0 <_Balloc>
    67d0:	1023883a 	mov	r17,r2
    67d4:	00809c44 	movi	r2,625
    67d8:	88800515 	stw	r2,20(r17)
    67dc:	8d000415 	stw	r20,16(r17)
    67e0:	9c401215 	stw	r17,72(r19)
    67e4:	88000015 	stw	zero,0(r17)
    67e8:	003fc606 	br	6704 <__alt_data_end+0xfffd59c4>

000067ec <__lshift>:
    67ec:	defff904 	addi	sp,sp,-28
    67f0:	dd400515 	stw	r21,20(sp)
    67f4:	dcc00315 	stw	r19,12(sp)
    67f8:	302bd17a 	srai	r21,r6,5
    67fc:	2cc00417 	ldw	r19,16(r5)
    6800:	28800217 	ldw	r2,8(r5)
    6804:	dd000415 	stw	r20,16(sp)
    6808:	ace7883a 	add	r19,r21,r19
    680c:	dc800215 	stw	r18,8(sp)
    6810:	dc400115 	stw	r17,4(sp)
    6814:	dc000015 	stw	r16,0(sp)
    6818:	dfc00615 	stw	ra,24(sp)
    681c:	9c000044 	addi	r16,r19,1
    6820:	2823883a 	mov	r17,r5
    6824:	3029883a 	mov	r20,r6
    6828:	2025883a 	mov	r18,r4
    682c:	29400117 	ldw	r5,4(r5)
    6830:	1400030e 	bge	r2,r16,6840 <__lshift+0x54>
    6834:	1085883a 	add	r2,r2,r2
    6838:	29400044 	addi	r5,r5,1
    683c:	143ffd16 	blt	r2,r16,6834 <__alt_data_end+0xfffd5af4>
    6840:	9009883a 	mov	r4,r18
    6844:	0005fb00 	call	5fb0 <_Balloc>
    6848:	10c00504 	addi	r3,r2,20
    684c:	0540070e 	bge	zero,r21,686c <__lshift+0x80>
    6850:	ad6b883a 	add	r21,r21,r21
    6854:	ad6b883a 	add	r21,r21,r21
    6858:	1809883a 	mov	r4,r3
    685c:	1d47883a 	add	r3,r3,r21
    6860:	20000015 	stw	zero,0(r4)
    6864:	21000104 	addi	r4,r4,4
    6868:	193ffd1e 	bne	r3,r4,6860 <__alt_data_end+0xfffd5b20>
    686c:	8a000417 	ldw	r8,16(r17)
    6870:	89000504 	addi	r4,r17,20
    6874:	a18007cc 	andi	r6,r20,31
    6878:	4211883a 	add	r8,r8,r8
    687c:	4211883a 	add	r8,r8,r8
    6880:	2211883a 	add	r8,r4,r8
    6884:	30002326 	beq	r6,zero,6914 <__lshift+0x128>
    6888:	02400804 	movi	r9,32
    688c:	4993c83a 	sub	r9,r9,r6
    6890:	000b883a 	mov	r5,zero
    6894:	21c00017 	ldw	r7,0(r4)
    6898:	1815883a 	mov	r10,r3
    689c:	18c00104 	addi	r3,r3,4
    68a0:	398e983a 	sll	r7,r7,r6
    68a4:	21000104 	addi	r4,r4,4
    68a8:	394ab03a 	or	r5,r7,r5
    68ac:	197fff15 	stw	r5,-4(r3)
    68b0:	217fff17 	ldw	r5,-4(r4)
    68b4:	2a4ad83a 	srl	r5,r5,r9
    68b8:	223ff636 	bltu	r4,r8,6894 <__alt_data_end+0xfffd5b54>
    68bc:	51400115 	stw	r5,4(r10)
    68c0:	28001a1e 	bne	r5,zero,692c <__lshift+0x140>
    68c4:	843fffc4 	addi	r16,r16,-1
    68c8:	14000415 	stw	r16,16(r2)
    68cc:	88000826 	beq	r17,zero,68f0 <__lshift+0x104>
    68d0:	89000117 	ldw	r4,4(r17)
    68d4:	90c01317 	ldw	r3,76(r18)
    68d8:	2109883a 	add	r4,r4,r4
    68dc:	2109883a 	add	r4,r4,r4
    68e0:	1907883a 	add	r3,r3,r4
    68e4:	19000017 	ldw	r4,0(r3)
    68e8:	89000015 	stw	r4,0(r17)
    68ec:	1c400015 	stw	r17,0(r3)
    68f0:	dfc00617 	ldw	ra,24(sp)
    68f4:	dd400517 	ldw	r21,20(sp)
    68f8:	dd000417 	ldw	r20,16(sp)
    68fc:	dcc00317 	ldw	r19,12(sp)
    6900:	dc800217 	ldw	r18,8(sp)
    6904:	dc400117 	ldw	r17,4(sp)
    6908:	dc000017 	ldw	r16,0(sp)
    690c:	dec00704 	addi	sp,sp,28
    6910:	f800283a 	ret
    6914:	21400017 	ldw	r5,0(r4)
    6918:	18c00104 	addi	r3,r3,4
    691c:	21000104 	addi	r4,r4,4
    6920:	197fff15 	stw	r5,-4(r3)
    6924:	223ffb36 	bltu	r4,r8,6914 <__alt_data_end+0xfffd5bd4>
    6928:	003fe606 	br	68c4 <__alt_data_end+0xfffd5b84>
    692c:	9c000084 	addi	r16,r19,2
    6930:	003fe406 	br	68c4 <__alt_data_end+0xfffd5b84>

00006934 <__mcmp>:
    6934:	20800417 	ldw	r2,16(r4)
    6938:	28c00417 	ldw	r3,16(r5)
    693c:	10c5c83a 	sub	r2,r2,r3
    6940:	1000111e 	bne	r2,zero,6988 <__mcmp+0x54>
    6944:	18c7883a 	add	r3,r3,r3
    6948:	18c7883a 	add	r3,r3,r3
    694c:	21000504 	addi	r4,r4,20
    6950:	29400504 	addi	r5,r5,20
    6954:	20c5883a 	add	r2,r4,r3
    6958:	28cb883a 	add	r5,r5,r3
    695c:	00000106 	br	6964 <__mcmp+0x30>
    6960:	20800a2e 	bgeu	r4,r2,698c <__mcmp+0x58>
    6964:	10bfff04 	addi	r2,r2,-4
    6968:	297fff04 	addi	r5,r5,-4
    696c:	11800017 	ldw	r6,0(r2)
    6970:	28c00017 	ldw	r3,0(r5)
    6974:	30fffa26 	beq	r6,r3,6960 <__alt_data_end+0xfffd5c20>
    6978:	30c00236 	bltu	r6,r3,6984 <__mcmp+0x50>
    697c:	00800044 	movi	r2,1
    6980:	f800283a 	ret
    6984:	00bfffc4 	movi	r2,-1
    6988:	f800283a 	ret
    698c:	0005883a 	mov	r2,zero
    6990:	f800283a 	ret

00006994 <__mdiff>:
    6994:	28c00417 	ldw	r3,16(r5)
    6998:	30800417 	ldw	r2,16(r6)
    699c:	defffa04 	addi	sp,sp,-24
    69a0:	dcc00315 	stw	r19,12(sp)
    69a4:	dc800215 	stw	r18,8(sp)
    69a8:	dfc00515 	stw	ra,20(sp)
    69ac:	dd000415 	stw	r20,16(sp)
    69b0:	dc400115 	stw	r17,4(sp)
    69b4:	dc000015 	stw	r16,0(sp)
    69b8:	1887c83a 	sub	r3,r3,r2
    69bc:	2825883a 	mov	r18,r5
    69c0:	3027883a 	mov	r19,r6
    69c4:	1800141e 	bne	r3,zero,6a18 <__mdiff+0x84>
    69c8:	1085883a 	add	r2,r2,r2
    69cc:	1085883a 	add	r2,r2,r2
    69d0:	2a000504 	addi	r8,r5,20
    69d4:	34000504 	addi	r16,r6,20
    69d8:	4087883a 	add	r3,r8,r2
    69dc:	8085883a 	add	r2,r16,r2
    69e0:	00000106 	br	69e8 <__mdiff+0x54>
    69e4:	40c0592e 	bgeu	r8,r3,6b4c <__mdiff+0x1b8>
    69e8:	18ffff04 	addi	r3,r3,-4
    69ec:	10bfff04 	addi	r2,r2,-4
    69f0:	19c00017 	ldw	r7,0(r3)
    69f4:	11400017 	ldw	r5,0(r2)
    69f8:	397ffa26 	beq	r7,r5,69e4 <__alt_data_end+0xfffd5ca4>
    69fc:	3940592e 	bgeu	r7,r5,6b64 <__mdiff+0x1d0>
    6a00:	9005883a 	mov	r2,r18
    6a04:	4023883a 	mov	r17,r8
    6a08:	9825883a 	mov	r18,r19
    6a0c:	05000044 	movi	r20,1
    6a10:	1027883a 	mov	r19,r2
    6a14:	00000406 	br	6a28 <__mdiff+0x94>
    6a18:	18005616 	blt	r3,zero,6b74 <__mdiff+0x1e0>
    6a1c:	34400504 	addi	r17,r6,20
    6a20:	2c000504 	addi	r16,r5,20
    6a24:	0029883a 	mov	r20,zero
    6a28:	91400117 	ldw	r5,4(r18)
    6a2c:	0005fb00 	call	5fb0 <_Balloc>
    6a30:	92400417 	ldw	r9,16(r18)
    6a34:	9b000417 	ldw	r12,16(r19)
    6a38:	12c00504 	addi	r11,r2,20
    6a3c:	4a51883a 	add	r8,r9,r9
    6a40:	6319883a 	add	r12,r12,r12
    6a44:	4211883a 	add	r8,r8,r8
    6a48:	6319883a 	add	r12,r12,r12
    6a4c:	15000315 	stw	r20,12(r2)
    6a50:	8211883a 	add	r8,r16,r8
    6a54:	8b19883a 	add	r12,r17,r12
    6a58:	0007883a 	mov	r3,zero
    6a5c:	81400017 	ldw	r5,0(r16)
    6a60:	89c00017 	ldw	r7,0(r17)
    6a64:	59800104 	addi	r6,r11,4
    6a68:	293fffcc 	andi	r4,r5,65535
    6a6c:	20c7883a 	add	r3,r4,r3
    6a70:	393fffcc 	andi	r4,r7,65535
    6a74:	1909c83a 	sub	r4,r3,r4
    6a78:	280ad43a 	srli	r5,r5,16
    6a7c:	380ed43a 	srli	r7,r7,16
    6a80:	2007d43a 	srai	r3,r4,16
    6a84:	213fffcc 	andi	r4,r4,65535
    6a88:	29cbc83a 	sub	r5,r5,r7
    6a8c:	28c7883a 	add	r3,r5,r3
    6a90:	180a943a 	slli	r5,r3,16
    6a94:	8c400104 	addi	r17,r17,4
    6a98:	84000104 	addi	r16,r16,4
    6a9c:	2908b03a 	or	r4,r5,r4
    6aa0:	59000015 	stw	r4,0(r11)
    6aa4:	1807d43a 	srai	r3,r3,16
    6aa8:	3015883a 	mov	r10,r6
    6aac:	3017883a 	mov	r11,r6
    6ab0:	8b3fea36 	bltu	r17,r12,6a5c <__alt_data_end+0xfffd5d1c>
    6ab4:	8200162e 	bgeu	r16,r8,6b10 <__mdiff+0x17c>
    6ab8:	8017883a 	mov	r11,r16
    6abc:	59400017 	ldw	r5,0(r11)
    6ac0:	31800104 	addi	r6,r6,4
    6ac4:	5ac00104 	addi	r11,r11,4
    6ac8:	293fffcc 	andi	r4,r5,65535
    6acc:	20c7883a 	add	r3,r4,r3
    6ad0:	280ed43a 	srli	r7,r5,16
    6ad4:	180bd43a 	srai	r5,r3,16
    6ad8:	193fffcc 	andi	r4,r3,65535
    6adc:	3947883a 	add	r3,r7,r5
    6ae0:	180a943a 	slli	r5,r3,16
    6ae4:	1807d43a 	srai	r3,r3,16
    6ae8:	2908b03a 	or	r4,r5,r4
    6aec:	313fff15 	stw	r4,-4(r6)
    6af0:	5a3ff236 	bltu	r11,r8,6abc <__alt_data_end+0xfffd5d7c>
    6af4:	0406303a 	nor	r3,zero,r16
    6af8:	1a07883a 	add	r3,r3,r8
    6afc:	1806d0ba 	srli	r3,r3,2
    6b00:	18c00044 	addi	r3,r3,1
    6b04:	18c7883a 	add	r3,r3,r3
    6b08:	18c7883a 	add	r3,r3,r3
    6b0c:	50d5883a 	add	r10,r10,r3
    6b10:	50ffff04 	addi	r3,r10,-4
    6b14:	2000041e 	bne	r4,zero,6b28 <__mdiff+0x194>
    6b18:	18ffff04 	addi	r3,r3,-4
    6b1c:	19000017 	ldw	r4,0(r3)
    6b20:	4a7fffc4 	addi	r9,r9,-1
    6b24:	203ffc26 	beq	r4,zero,6b18 <__alt_data_end+0xfffd5dd8>
    6b28:	12400415 	stw	r9,16(r2)
    6b2c:	dfc00517 	ldw	ra,20(sp)
    6b30:	dd000417 	ldw	r20,16(sp)
    6b34:	dcc00317 	ldw	r19,12(sp)
    6b38:	dc800217 	ldw	r18,8(sp)
    6b3c:	dc400117 	ldw	r17,4(sp)
    6b40:	dc000017 	ldw	r16,0(sp)
    6b44:	dec00604 	addi	sp,sp,24
    6b48:	f800283a 	ret
    6b4c:	000b883a 	mov	r5,zero
    6b50:	0005fb00 	call	5fb0 <_Balloc>
    6b54:	00c00044 	movi	r3,1
    6b58:	10c00415 	stw	r3,16(r2)
    6b5c:	10000515 	stw	zero,20(r2)
    6b60:	003ff206 	br	6b2c <__alt_data_end+0xfffd5dec>
    6b64:	8023883a 	mov	r17,r16
    6b68:	0029883a 	mov	r20,zero
    6b6c:	4021883a 	mov	r16,r8
    6b70:	003fad06 	br	6a28 <__alt_data_end+0xfffd5ce8>
    6b74:	9005883a 	mov	r2,r18
    6b78:	94400504 	addi	r17,r18,20
    6b7c:	9c000504 	addi	r16,r19,20
    6b80:	9825883a 	mov	r18,r19
    6b84:	05000044 	movi	r20,1
    6b88:	1027883a 	mov	r19,r2
    6b8c:	003fa606 	br	6a28 <__alt_data_end+0xfffd5ce8>

00006b90 <__ulp>:
    6b90:	295ffc2c 	andhi	r5,r5,32752
    6b94:	00bf3034 	movhi	r2,64704
    6b98:	2887883a 	add	r3,r5,r2
    6b9c:	00c0020e 	bge	zero,r3,6ba8 <__ulp+0x18>
    6ba0:	0005883a 	mov	r2,zero
    6ba4:	f800283a 	ret
    6ba8:	00c7c83a 	sub	r3,zero,r3
    6bac:	1807d53a 	srai	r3,r3,20
    6bb0:	008004c4 	movi	r2,19
    6bb4:	10c00b0e 	bge	r2,r3,6be4 <__ulp+0x54>
    6bb8:	18bffb04 	addi	r2,r3,-20
    6bbc:	01000784 	movi	r4,30
    6bc0:	0007883a 	mov	r3,zero
    6bc4:	20800516 	blt	r4,r2,6bdc <__ulp+0x4c>
    6bc8:	010007c4 	movi	r4,31
    6bcc:	2089c83a 	sub	r4,r4,r2
    6bd0:	00800044 	movi	r2,1
    6bd4:	1104983a 	sll	r2,r2,r4
    6bd8:	f800283a 	ret
    6bdc:	00800044 	movi	r2,1
    6be0:	f800283a 	ret
    6be4:	01400234 	movhi	r5,8
    6be8:	28c7d83a 	sra	r3,r5,r3
    6bec:	0005883a 	mov	r2,zero
    6bf0:	f800283a 	ret

00006bf4 <__b2d>:
    6bf4:	defffa04 	addi	sp,sp,-24
    6bf8:	dc000015 	stw	r16,0(sp)
    6bfc:	24000417 	ldw	r16,16(r4)
    6c00:	dc400115 	stw	r17,4(sp)
    6c04:	24400504 	addi	r17,r4,20
    6c08:	8421883a 	add	r16,r16,r16
    6c0c:	8421883a 	add	r16,r16,r16
    6c10:	8c21883a 	add	r16,r17,r16
    6c14:	dc800215 	stw	r18,8(sp)
    6c18:	84bfff17 	ldw	r18,-4(r16)
    6c1c:	dd000415 	stw	r20,16(sp)
    6c20:	dcc00315 	stw	r19,12(sp)
    6c24:	9009883a 	mov	r4,r18
    6c28:	2829883a 	mov	r20,r5
    6c2c:	dfc00515 	stw	ra,20(sp)
    6c30:	00062cc0 	call	62cc <__hi0bits>
    6c34:	00c00804 	movi	r3,32
    6c38:	1889c83a 	sub	r4,r3,r2
    6c3c:	a1000015 	stw	r4,0(r20)
    6c40:	01000284 	movi	r4,10
    6c44:	84ffff04 	addi	r19,r16,-4
    6c48:	20801216 	blt	r4,r2,6c94 <__b2d+0xa0>
    6c4c:	018002c4 	movi	r6,11
    6c50:	308dc83a 	sub	r6,r6,r2
    6c54:	9186d83a 	srl	r3,r18,r6
    6c58:	18cffc34 	orhi	r3,r3,16368
    6c5c:	8cc0212e 	bgeu	r17,r19,6ce4 <__b2d+0xf0>
    6c60:	813ffe17 	ldw	r4,-8(r16)
    6c64:	218cd83a 	srl	r6,r4,r6
    6c68:	10800544 	addi	r2,r2,21
    6c6c:	9084983a 	sll	r2,r18,r2
    6c70:	1184b03a 	or	r2,r2,r6
    6c74:	dfc00517 	ldw	ra,20(sp)
    6c78:	dd000417 	ldw	r20,16(sp)
    6c7c:	dcc00317 	ldw	r19,12(sp)
    6c80:	dc800217 	ldw	r18,8(sp)
    6c84:	dc400117 	ldw	r17,4(sp)
    6c88:	dc000017 	ldw	r16,0(sp)
    6c8c:	dec00604 	addi	sp,sp,24
    6c90:	f800283a 	ret
    6c94:	8cc00f2e 	bgeu	r17,r19,6cd4 <__b2d+0xe0>
    6c98:	117ffd44 	addi	r5,r2,-11
    6c9c:	80bffe17 	ldw	r2,-8(r16)
    6ca0:	28000e26 	beq	r5,zero,6cdc <__b2d+0xe8>
    6ca4:	1949c83a 	sub	r4,r3,r5
    6ca8:	9164983a 	sll	r18,r18,r5
    6cac:	1106d83a 	srl	r3,r2,r4
    6cb0:	81bffe04 	addi	r6,r16,-8
    6cb4:	948ffc34 	orhi	r18,r18,16368
    6cb8:	90c6b03a 	or	r3,r18,r3
    6cbc:	89800e2e 	bgeu	r17,r6,6cf8 <__b2d+0x104>
    6cc0:	81bffd17 	ldw	r6,-12(r16)
    6cc4:	1144983a 	sll	r2,r2,r5
    6cc8:	310ad83a 	srl	r5,r6,r4
    6ccc:	2884b03a 	or	r2,r5,r2
    6cd0:	003fe806 	br	6c74 <__alt_data_end+0xfffd5f34>
    6cd4:	10bffd44 	addi	r2,r2,-11
    6cd8:	1000041e 	bne	r2,zero,6cec <__b2d+0xf8>
    6cdc:	90cffc34 	orhi	r3,r18,16368
    6ce0:	003fe406 	br	6c74 <__alt_data_end+0xfffd5f34>
    6ce4:	000d883a 	mov	r6,zero
    6ce8:	003fdf06 	br	6c68 <__alt_data_end+0xfffd5f28>
    6cec:	90a4983a 	sll	r18,r18,r2
    6cf0:	0005883a 	mov	r2,zero
    6cf4:	003ff906 	br	6cdc <__alt_data_end+0xfffd5f9c>
    6cf8:	1144983a 	sll	r2,r2,r5
    6cfc:	003fdd06 	br	6c74 <__alt_data_end+0xfffd5f34>

00006d00 <__d2b>:
    6d00:	defff804 	addi	sp,sp,-32
    6d04:	dc000215 	stw	r16,8(sp)
    6d08:	3021883a 	mov	r16,r6
    6d0c:	dc400315 	stw	r17,12(sp)
    6d10:	8022907a 	slli	r17,r16,1
    6d14:	dd000615 	stw	r20,24(sp)
    6d18:	2829883a 	mov	r20,r5
    6d1c:	01400044 	movi	r5,1
    6d20:	dcc00515 	stw	r19,20(sp)
    6d24:	dc800415 	stw	r18,16(sp)
    6d28:	dfc00715 	stw	ra,28(sp)
    6d2c:	3825883a 	mov	r18,r7
    6d30:	8822d57a 	srli	r17,r17,21
    6d34:	0005fb00 	call	5fb0 <_Balloc>
    6d38:	1027883a 	mov	r19,r2
    6d3c:	00800434 	movhi	r2,16
    6d40:	10bfffc4 	addi	r2,r2,-1
    6d44:	808c703a 	and	r6,r16,r2
    6d48:	88000126 	beq	r17,zero,6d50 <__d2b+0x50>
    6d4c:	31800434 	orhi	r6,r6,16
    6d50:	d9800015 	stw	r6,0(sp)
    6d54:	a0002426 	beq	r20,zero,6de8 <__d2b+0xe8>
    6d58:	d9000104 	addi	r4,sp,4
    6d5c:	dd000115 	stw	r20,4(sp)
    6d60:	00063340 	call	6334 <__lo0bits>
    6d64:	d8c00017 	ldw	r3,0(sp)
    6d68:	10002f1e 	bne	r2,zero,6e28 <__d2b+0x128>
    6d6c:	d9000117 	ldw	r4,4(sp)
    6d70:	99000515 	stw	r4,20(r19)
    6d74:	1821003a 	cmpeq	r16,r3,zero
    6d78:	01000084 	movi	r4,2
    6d7c:	2421c83a 	sub	r16,r4,r16
    6d80:	98c00615 	stw	r3,24(r19)
    6d84:	9c000415 	stw	r16,16(r19)
    6d88:	88001f1e 	bne	r17,zero,6e08 <__d2b+0x108>
    6d8c:	10bef384 	addi	r2,r2,-1074
    6d90:	90800015 	stw	r2,0(r18)
    6d94:	00900034 	movhi	r2,16384
    6d98:	10bfffc4 	addi	r2,r2,-1
    6d9c:	8085883a 	add	r2,r16,r2
    6da0:	1085883a 	add	r2,r2,r2
    6da4:	1085883a 	add	r2,r2,r2
    6da8:	9885883a 	add	r2,r19,r2
    6dac:	11000517 	ldw	r4,20(r2)
    6db0:	8020917a 	slli	r16,r16,5
    6db4:	00062cc0 	call	62cc <__hi0bits>
    6db8:	d8c00817 	ldw	r3,32(sp)
    6dbc:	8085c83a 	sub	r2,r16,r2
    6dc0:	18800015 	stw	r2,0(r3)
    6dc4:	9805883a 	mov	r2,r19
    6dc8:	dfc00717 	ldw	ra,28(sp)
    6dcc:	dd000617 	ldw	r20,24(sp)
    6dd0:	dcc00517 	ldw	r19,20(sp)
    6dd4:	dc800417 	ldw	r18,16(sp)
    6dd8:	dc400317 	ldw	r17,12(sp)
    6ddc:	dc000217 	ldw	r16,8(sp)
    6de0:	dec00804 	addi	sp,sp,32
    6de4:	f800283a 	ret
    6de8:	d809883a 	mov	r4,sp
    6dec:	00063340 	call	6334 <__lo0bits>
    6df0:	d8c00017 	ldw	r3,0(sp)
    6df4:	04000044 	movi	r16,1
    6df8:	9c000415 	stw	r16,16(r19)
    6dfc:	98c00515 	stw	r3,20(r19)
    6e00:	10800804 	addi	r2,r2,32
    6e04:	883fe126 	beq	r17,zero,6d8c <__alt_data_end+0xfffd604c>
    6e08:	00c00d44 	movi	r3,53
    6e0c:	8c7ef344 	addi	r17,r17,-1075
    6e10:	88a3883a 	add	r17,r17,r2
    6e14:	1885c83a 	sub	r2,r3,r2
    6e18:	d8c00817 	ldw	r3,32(sp)
    6e1c:	94400015 	stw	r17,0(r18)
    6e20:	18800015 	stw	r2,0(r3)
    6e24:	003fe706 	br	6dc4 <__alt_data_end+0xfffd6084>
    6e28:	01000804 	movi	r4,32
    6e2c:	2089c83a 	sub	r4,r4,r2
    6e30:	1908983a 	sll	r4,r3,r4
    6e34:	d9400117 	ldw	r5,4(sp)
    6e38:	1886d83a 	srl	r3,r3,r2
    6e3c:	2148b03a 	or	r4,r4,r5
    6e40:	99000515 	stw	r4,20(r19)
    6e44:	d8c00015 	stw	r3,0(sp)
    6e48:	003fca06 	br	6d74 <__alt_data_end+0xfffd6034>

00006e4c <__ratio>:
    6e4c:	defff904 	addi	sp,sp,-28
    6e50:	dc400315 	stw	r17,12(sp)
    6e54:	2823883a 	mov	r17,r5
    6e58:	d9400104 	addi	r5,sp,4
    6e5c:	dfc00615 	stw	ra,24(sp)
    6e60:	dcc00515 	stw	r19,20(sp)
    6e64:	dc800415 	stw	r18,16(sp)
    6e68:	2027883a 	mov	r19,r4
    6e6c:	dc000215 	stw	r16,8(sp)
    6e70:	0006bf40 	call	6bf4 <__b2d>
    6e74:	d80b883a 	mov	r5,sp
    6e78:	8809883a 	mov	r4,r17
    6e7c:	1025883a 	mov	r18,r2
    6e80:	1821883a 	mov	r16,r3
    6e84:	0006bf40 	call	6bf4 <__b2d>
    6e88:	8a000417 	ldw	r8,16(r17)
    6e8c:	99000417 	ldw	r4,16(r19)
    6e90:	d9400117 	ldw	r5,4(sp)
    6e94:	2209c83a 	sub	r4,r4,r8
    6e98:	2010917a 	slli	r8,r4,5
    6e9c:	d9000017 	ldw	r4,0(sp)
    6ea0:	2909c83a 	sub	r4,r5,r4
    6ea4:	4109883a 	add	r4,r8,r4
    6ea8:	01000e0e 	bge	zero,r4,6ee4 <__ratio+0x98>
    6eac:	2008953a 	slli	r4,r4,20
    6eb0:	2421883a 	add	r16,r4,r16
    6eb4:	100d883a 	mov	r6,r2
    6eb8:	180f883a 	mov	r7,r3
    6ebc:	9009883a 	mov	r4,r18
    6ec0:	800b883a 	mov	r5,r16
    6ec4:	000b4400 	call	b440 <__divdf3>
    6ec8:	dfc00617 	ldw	ra,24(sp)
    6ecc:	dcc00517 	ldw	r19,20(sp)
    6ed0:	dc800417 	ldw	r18,16(sp)
    6ed4:	dc400317 	ldw	r17,12(sp)
    6ed8:	dc000217 	ldw	r16,8(sp)
    6edc:	dec00704 	addi	sp,sp,28
    6ee0:	f800283a 	ret
    6ee4:	2008953a 	slli	r4,r4,20
    6ee8:	1907c83a 	sub	r3,r3,r4
    6eec:	003ff106 	br	6eb4 <__alt_data_end+0xfffd6174>

00006ef0 <_mprec_log10>:
    6ef0:	defffe04 	addi	sp,sp,-8
    6ef4:	dc000015 	stw	r16,0(sp)
    6ef8:	dfc00115 	stw	ra,4(sp)
    6efc:	008005c4 	movi	r2,23
    6f00:	2021883a 	mov	r16,r4
    6f04:	11000d0e 	bge	r2,r4,6f3c <_mprec_log10+0x4c>
    6f08:	0005883a 	mov	r2,zero
    6f0c:	00cffc34 	movhi	r3,16368
    6f10:	843fffc4 	addi	r16,r16,-1
    6f14:	000d883a 	mov	r6,zero
    6f18:	01d00934 	movhi	r7,16420
    6f1c:	1009883a 	mov	r4,r2
    6f20:	180b883a 	mov	r5,r3
    6f24:	000c0680 	call	c068 <__muldf3>
    6f28:	803ff91e 	bne	r16,zero,6f10 <__alt_data_end+0xfffd61d0>
    6f2c:	dfc00117 	ldw	ra,4(sp)
    6f30:	dc000017 	ldw	r16,0(sp)
    6f34:	dec00204 	addi	sp,sp,8
    6f38:	f800283a 	ret
    6f3c:	202090fa 	slli	r16,r4,3
    6f40:	00800074 	movhi	r2,1
    6f44:	10bb8704 	addi	r2,r2,-4580
    6f48:	1421883a 	add	r16,r2,r16
    6f4c:	80800017 	ldw	r2,0(r16)
    6f50:	80c00117 	ldw	r3,4(r16)
    6f54:	dfc00117 	ldw	ra,4(sp)
    6f58:	dc000017 	ldw	r16,0(sp)
    6f5c:	dec00204 	addi	sp,sp,8
    6f60:	f800283a 	ret

00006f64 <__copybits>:
    6f64:	297fffc4 	addi	r5,r5,-1
    6f68:	280fd17a 	srai	r7,r5,5
    6f6c:	30c00417 	ldw	r3,16(r6)
    6f70:	30800504 	addi	r2,r6,20
    6f74:	39c00044 	addi	r7,r7,1
    6f78:	18c7883a 	add	r3,r3,r3
    6f7c:	39cf883a 	add	r7,r7,r7
    6f80:	18c7883a 	add	r3,r3,r3
    6f84:	39cf883a 	add	r7,r7,r7
    6f88:	10c7883a 	add	r3,r2,r3
    6f8c:	21cf883a 	add	r7,r4,r7
    6f90:	10c00d2e 	bgeu	r2,r3,6fc8 <__copybits+0x64>
    6f94:	200b883a 	mov	r5,r4
    6f98:	12000017 	ldw	r8,0(r2)
    6f9c:	29400104 	addi	r5,r5,4
    6fa0:	10800104 	addi	r2,r2,4
    6fa4:	2a3fff15 	stw	r8,-4(r5)
    6fa8:	10fffb36 	bltu	r2,r3,6f98 <__alt_data_end+0xfffd6258>
    6fac:	1985c83a 	sub	r2,r3,r6
    6fb0:	10bffac4 	addi	r2,r2,-21
    6fb4:	1004d0ba 	srli	r2,r2,2
    6fb8:	10800044 	addi	r2,r2,1
    6fbc:	1085883a 	add	r2,r2,r2
    6fc0:	1085883a 	add	r2,r2,r2
    6fc4:	2089883a 	add	r4,r4,r2
    6fc8:	21c0032e 	bgeu	r4,r7,6fd8 <__copybits+0x74>
    6fcc:	20000015 	stw	zero,0(r4)
    6fd0:	21000104 	addi	r4,r4,4
    6fd4:	21fffd36 	bltu	r4,r7,6fcc <__alt_data_end+0xfffd628c>
    6fd8:	f800283a 	ret

00006fdc <__any_on>:
    6fdc:	20c00417 	ldw	r3,16(r4)
    6fe0:	2805d17a 	srai	r2,r5,5
    6fe4:	21000504 	addi	r4,r4,20
    6fe8:	18800d0e 	bge	r3,r2,7020 <__any_on+0x44>
    6fec:	18c7883a 	add	r3,r3,r3
    6ff0:	18c7883a 	add	r3,r3,r3
    6ff4:	20c7883a 	add	r3,r4,r3
    6ff8:	20c0192e 	bgeu	r4,r3,7060 <__any_on+0x84>
    6ffc:	18bfff17 	ldw	r2,-4(r3)
    7000:	18ffff04 	addi	r3,r3,-4
    7004:	1000041e 	bne	r2,zero,7018 <__any_on+0x3c>
    7008:	20c0142e 	bgeu	r4,r3,705c <__any_on+0x80>
    700c:	18ffff04 	addi	r3,r3,-4
    7010:	19400017 	ldw	r5,0(r3)
    7014:	283ffc26 	beq	r5,zero,7008 <__alt_data_end+0xfffd62c8>
    7018:	00800044 	movi	r2,1
    701c:	f800283a 	ret
    7020:	10c00a0e 	bge	r2,r3,704c <__any_on+0x70>
    7024:	1085883a 	add	r2,r2,r2
    7028:	1085883a 	add	r2,r2,r2
    702c:	294007cc 	andi	r5,r5,31
    7030:	2087883a 	add	r3,r4,r2
    7034:	283ff026 	beq	r5,zero,6ff8 <__alt_data_end+0xfffd62b8>
    7038:	19800017 	ldw	r6,0(r3)
    703c:	3144d83a 	srl	r2,r6,r5
    7040:	114a983a 	sll	r5,r2,r5
    7044:	317ff41e 	bne	r6,r5,7018 <__alt_data_end+0xfffd62d8>
    7048:	003feb06 	br	6ff8 <__alt_data_end+0xfffd62b8>
    704c:	1085883a 	add	r2,r2,r2
    7050:	1085883a 	add	r2,r2,r2
    7054:	2087883a 	add	r3,r4,r2
    7058:	003fe706 	br	6ff8 <__alt_data_end+0xfffd62b8>
    705c:	f800283a 	ret
    7060:	0005883a 	mov	r2,zero
    7064:	f800283a 	ret

00007068 <__fpclassifyd>:
    7068:	00a00034 	movhi	r2,32768
    706c:	10bfffc4 	addi	r2,r2,-1
    7070:	2884703a 	and	r2,r5,r2
    7074:	10000726 	beq	r2,zero,7094 <__fpclassifyd+0x2c>
    7078:	00fffc34 	movhi	r3,65520
    707c:	019ff834 	movhi	r6,32736
    7080:	28c7883a 	add	r3,r5,r3
    7084:	31bfffc4 	addi	r6,r6,-1
    7088:	30c00536 	bltu	r6,r3,70a0 <__fpclassifyd+0x38>
    708c:	00800104 	movi	r2,4
    7090:	f800283a 	ret
    7094:	2000021e 	bne	r4,zero,70a0 <__fpclassifyd+0x38>
    7098:	00800084 	movi	r2,2
    709c:	f800283a 	ret
    70a0:	00dffc34 	movhi	r3,32752
    70a4:	019ff834 	movhi	r6,32736
    70a8:	28cb883a 	add	r5,r5,r3
    70ac:	31bfffc4 	addi	r6,r6,-1
    70b0:	317ff62e 	bgeu	r6,r5,708c <__alt_data_end+0xfffd634c>
    70b4:	01400434 	movhi	r5,16
    70b8:	297fffc4 	addi	r5,r5,-1
    70bc:	28800236 	bltu	r5,r2,70c8 <__fpclassifyd+0x60>
    70c0:	008000c4 	movi	r2,3
    70c4:	f800283a 	ret
    70c8:	10c00226 	beq	r2,r3,70d4 <__fpclassifyd+0x6c>
    70cc:	0005883a 	mov	r2,zero
    70d0:	f800283a 	ret
    70d4:	2005003a 	cmpeq	r2,r4,zero
    70d8:	f800283a 	ret

000070dc <_sbrk_r>:
    70dc:	defffd04 	addi	sp,sp,-12
    70e0:	dc000015 	stw	r16,0(sp)
    70e4:	04000074 	movhi	r16,1
    70e8:	dc400115 	stw	r17,4(sp)
    70ec:	8409b704 	addi	r16,r16,9948
    70f0:	2023883a 	mov	r17,r4
    70f4:	2809883a 	mov	r4,r5
    70f8:	dfc00215 	stw	ra,8(sp)
    70fc:	80000015 	stw	zero,0(r16)
    7100:	000dbd00 	call	dbd0 <sbrk>
    7104:	00ffffc4 	movi	r3,-1
    7108:	10c00526 	beq	r2,r3,7120 <_sbrk_r+0x44>
    710c:	dfc00217 	ldw	ra,8(sp)
    7110:	dc400117 	ldw	r17,4(sp)
    7114:	dc000017 	ldw	r16,0(sp)
    7118:	dec00304 	addi	sp,sp,12
    711c:	f800283a 	ret
    7120:	80c00017 	ldw	r3,0(r16)
    7124:	183ff926 	beq	r3,zero,710c <__alt_data_end+0xfffd63cc>
    7128:	88c00015 	stw	r3,0(r17)
    712c:	003ff706 	br	710c <__alt_data_end+0xfffd63cc>

00007130 <__sread>:
    7130:	defffe04 	addi	sp,sp,-8
    7134:	dc000015 	stw	r16,0(sp)
    7138:	2821883a 	mov	r16,r5
    713c:	2940038f 	ldh	r5,14(r5)
    7140:	dfc00115 	stw	ra,4(sp)
    7144:	00096a80 	call	96a8 <_read_r>
    7148:	10000716 	blt	r2,zero,7168 <__sread+0x38>
    714c:	80c01417 	ldw	r3,80(r16)
    7150:	1887883a 	add	r3,r3,r2
    7154:	80c01415 	stw	r3,80(r16)
    7158:	dfc00117 	ldw	ra,4(sp)
    715c:	dc000017 	ldw	r16,0(sp)
    7160:	dec00204 	addi	sp,sp,8
    7164:	f800283a 	ret
    7168:	80c0030b 	ldhu	r3,12(r16)
    716c:	18fbffcc 	andi	r3,r3,61439
    7170:	80c0030d 	sth	r3,12(r16)
    7174:	dfc00117 	ldw	ra,4(sp)
    7178:	dc000017 	ldw	r16,0(sp)
    717c:	dec00204 	addi	sp,sp,8
    7180:	f800283a 	ret

00007184 <__seofread>:
    7184:	0005883a 	mov	r2,zero
    7188:	f800283a 	ret

0000718c <__swrite>:
    718c:	2880030b 	ldhu	r2,12(r5)
    7190:	defffb04 	addi	sp,sp,-20
    7194:	dcc00315 	stw	r19,12(sp)
    7198:	dc800215 	stw	r18,8(sp)
    719c:	dc400115 	stw	r17,4(sp)
    71a0:	dc000015 	stw	r16,0(sp)
    71a4:	dfc00415 	stw	ra,16(sp)
    71a8:	10c0400c 	andi	r3,r2,256
    71ac:	2821883a 	mov	r16,r5
    71b0:	2023883a 	mov	r17,r4
    71b4:	3025883a 	mov	r18,r6
    71b8:	3827883a 	mov	r19,r7
    71bc:	18000526 	beq	r3,zero,71d4 <__swrite+0x48>
    71c0:	2940038f 	ldh	r5,14(r5)
    71c4:	01c00084 	movi	r7,2
    71c8:	000d883a 	mov	r6,zero
    71cc:	00094ec0 	call	94ec <_lseek_r>
    71d0:	8080030b 	ldhu	r2,12(r16)
    71d4:	8140038f 	ldh	r5,14(r16)
    71d8:	10bbffcc 	andi	r2,r2,61439
    71dc:	980f883a 	mov	r7,r19
    71e0:	900d883a 	mov	r6,r18
    71e4:	8809883a 	mov	r4,r17
    71e8:	8080030d 	sth	r2,12(r16)
    71ec:	dfc00417 	ldw	ra,16(sp)
    71f0:	dcc00317 	ldw	r19,12(sp)
    71f4:	dc800217 	ldw	r18,8(sp)
    71f8:	dc400117 	ldw	r17,4(sp)
    71fc:	dc000017 	ldw	r16,0(sp)
    7200:	dec00504 	addi	sp,sp,20
    7204:	0008ad81 	jmpi	8ad8 <_write_r>

00007208 <__sseek>:
    7208:	defffe04 	addi	sp,sp,-8
    720c:	dc000015 	stw	r16,0(sp)
    7210:	2821883a 	mov	r16,r5
    7214:	2940038f 	ldh	r5,14(r5)
    7218:	dfc00115 	stw	ra,4(sp)
    721c:	00094ec0 	call	94ec <_lseek_r>
    7220:	00ffffc4 	movi	r3,-1
    7224:	10c00826 	beq	r2,r3,7248 <__sseek+0x40>
    7228:	80c0030b 	ldhu	r3,12(r16)
    722c:	80801415 	stw	r2,80(r16)
    7230:	18c40014 	ori	r3,r3,4096
    7234:	80c0030d 	sth	r3,12(r16)
    7238:	dfc00117 	ldw	ra,4(sp)
    723c:	dc000017 	ldw	r16,0(sp)
    7240:	dec00204 	addi	sp,sp,8
    7244:	f800283a 	ret
    7248:	80c0030b 	ldhu	r3,12(r16)
    724c:	18fbffcc 	andi	r3,r3,61439
    7250:	80c0030d 	sth	r3,12(r16)
    7254:	dfc00117 	ldw	ra,4(sp)
    7258:	dc000017 	ldw	r16,0(sp)
    725c:	dec00204 	addi	sp,sp,8
    7260:	f800283a 	ret

00007264 <__sclose>:
    7264:	2940038f 	ldh	r5,14(r5)
    7268:	0008b381 	jmpi	8b38 <_close_r>

0000726c <strcmp>:
    726c:	2144b03a 	or	r2,r4,r5
    7270:	108000cc 	andi	r2,r2,3
    7274:	1000171e 	bne	r2,zero,72d4 <strcmp+0x68>
    7278:	20800017 	ldw	r2,0(r4)
    727c:	28c00017 	ldw	r3,0(r5)
    7280:	10c0141e 	bne	r2,r3,72d4 <strcmp+0x68>
    7284:	027fbff4 	movhi	r9,65279
    7288:	4a7fbfc4 	addi	r9,r9,-257
    728c:	0086303a 	nor	r3,zero,r2
    7290:	02202074 	movhi	r8,32897
    7294:	1245883a 	add	r2,r2,r9
    7298:	42202004 	addi	r8,r8,-32640
    729c:	10c4703a 	and	r2,r2,r3
    72a0:	1204703a 	and	r2,r2,r8
    72a4:	10000226 	beq	r2,zero,72b0 <strcmp+0x44>
    72a8:	00002306 	br	7338 <strcmp+0xcc>
    72ac:	1000221e 	bne	r2,zero,7338 <strcmp+0xcc>
    72b0:	21000104 	addi	r4,r4,4
    72b4:	20c00017 	ldw	r3,0(r4)
    72b8:	29400104 	addi	r5,r5,4
    72bc:	29800017 	ldw	r6,0(r5)
    72c0:	1a4f883a 	add	r7,r3,r9
    72c4:	00c4303a 	nor	r2,zero,r3
    72c8:	3884703a 	and	r2,r7,r2
    72cc:	1204703a 	and	r2,r2,r8
    72d0:	19bff626 	beq	r3,r6,72ac <__alt_data_end+0xfffd656c>
    72d4:	20800003 	ldbu	r2,0(r4)
    72d8:	10c03fcc 	andi	r3,r2,255
    72dc:	18c0201c 	xori	r3,r3,128
    72e0:	18ffe004 	addi	r3,r3,-128
    72e4:	18000c26 	beq	r3,zero,7318 <strcmp+0xac>
    72e8:	29800007 	ldb	r6,0(r5)
    72ec:	19800326 	beq	r3,r6,72fc <strcmp+0x90>
    72f0:	00001306 	br	7340 <strcmp+0xd4>
    72f4:	29800007 	ldb	r6,0(r5)
    72f8:	11800b1e 	bne	r2,r6,7328 <strcmp+0xbc>
    72fc:	21000044 	addi	r4,r4,1
    7300:	20c00003 	ldbu	r3,0(r4)
    7304:	29400044 	addi	r5,r5,1
    7308:	18803fcc 	andi	r2,r3,255
    730c:	1080201c 	xori	r2,r2,128
    7310:	10bfe004 	addi	r2,r2,-128
    7314:	103ff71e 	bne	r2,zero,72f4 <__alt_data_end+0xfffd65b4>
    7318:	0007883a 	mov	r3,zero
    731c:	28800003 	ldbu	r2,0(r5)
    7320:	1885c83a 	sub	r2,r3,r2
    7324:	f800283a 	ret
    7328:	28800003 	ldbu	r2,0(r5)
    732c:	18c03fcc 	andi	r3,r3,255
    7330:	1885c83a 	sub	r2,r3,r2
    7334:	f800283a 	ret
    7338:	0005883a 	mov	r2,zero
    733c:	f800283a 	ret
    7340:	10c03fcc 	andi	r3,r2,255
    7344:	003ff506 	br	731c <__alt_data_end+0xfffd65dc>

00007348 <strlen>:
    7348:	208000cc 	andi	r2,r4,3
    734c:	10002026 	beq	r2,zero,73d0 <strlen+0x88>
    7350:	20800007 	ldb	r2,0(r4)
    7354:	10002026 	beq	r2,zero,73d8 <strlen+0x90>
    7358:	2005883a 	mov	r2,r4
    735c:	00000206 	br	7368 <strlen+0x20>
    7360:	10c00007 	ldb	r3,0(r2)
    7364:	18001826 	beq	r3,zero,73c8 <strlen+0x80>
    7368:	10800044 	addi	r2,r2,1
    736c:	10c000cc 	andi	r3,r2,3
    7370:	183ffb1e 	bne	r3,zero,7360 <__alt_data_end+0xfffd6620>
    7374:	10c00017 	ldw	r3,0(r2)
    7378:	01ffbff4 	movhi	r7,65279
    737c:	39ffbfc4 	addi	r7,r7,-257
    7380:	00ca303a 	nor	r5,zero,r3
    7384:	01a02074 	movhi	r6,32897
    7388:	19c7883a 	add	r3,r3,r7
    738c:	31a02004 	addi	r6,r6,-32640
    7390:	1946703a 	and	r3,r3,r5
    7394:	1986703a 	and	r3,r3,r6
    7398:	1800091e 	bne	r3,zero,73c0 <strlen+0x78>
    739c:	10800104 	addi	r2,r2,4
    73a0:	10c00017 	ldw	r3,0(r2)
    73a4:	19cb883a 	add	r5,r3,r7
    73a8:	00c6303a 	nor	r3,zero,r3
    73ac:	28c6703a 	and	r3,r5,r3
    73b0:	1986703a 	and	r3,r3,r6
    73b4:	183ff926 	beq	r3,zero,739c <__alt_data_end+0xfffd665c>
    73b8:	00000106 	br	73c0 <strlen+0x78>
    73bc:	10800044 	addi	r2,r2,1
    73c0:	10c00007 	ldb	r3,0(r2)
    73c4:	183ffd1e 	bne	r3,zero,73bc <__alt_data_end+0xfffd667c>
    73c8:	1105c83a 	sub	r2,r2,r4
    73cc:	f800283a 	ret
    73d0:	2005883a 	mov	r2,r4
    73d4:	003fe706 	br	7374 <__alt_data_end+0xfffd6634>
    73d8:	0005883a 	mov	r2,zero
    73dc:	f800283a 	ret

000073e0 <__sprint_r.part.0>:
    73e0:	28801917 	ldw	r2,100(r5)
    73e4:	defff604 	addi	sp,sp,-40
    73e8:	dd400515 	stw	r21,20(sp)
    73ec:	dfc00915 	stw	ra,36(sp)
    73f0:	df000815 	stw	fp,32(sp)
    73f4:	ddc00715 	stw	r23,28(sp)
    73f8:	dd800615 	stw	r22,24(sp)
    73fc:	dd000415 	stw	r20,16(sp)
    7400:	dcc00315 	stw	r19,12(sp)
    7404:	dc800215 	stw	r18,8(sp)
    7408:	dc400115 	stw	r17,4(sp)
    740c:	dc000015 	stw	r16,0(sp)
    7410:	1088000c 	andi	r2,r2,8192
    7414:	302b883a 	mov	r21,r6
    7418:	10002e26 	beq	r2,zero,74d4 <__sprint_r.part.0+0xf4>
    741c:	30800217 	ldw	r2,8(r6)
    7420:	35800017 	ldw	r22,0(r6)
    7424:	10002926 	beq	r2,zero,74cc <__sprint_r.part.0+0xec>
    7428:	2827883a 	mov	r19,r5
    742c:	2029883a 	mov	r20,r4
    7430:	b5c00104 	addi	r23,r22,4
    7434:	04bfffc4 	movi	r18,-1
    7438:	bc400017 	ldw	r17,0(r23)
    743c:	b4000017 	ldw	r16,0(r22)
    7440:	0039883a 	mov	fp,zero
    7444:	8822d0ba 	srli	r17,r17,2
    7448:	8800031e 	bne	r17,zero,7458 <__sprint_r.part.0+0x78>
    744c:	00001806 	br	74b0 <__sprint_r.part.0+0xd0>
    7450:	84000104 	addi	r16,r16,4
    7454:	8f001526 	beq	r17,fp,74ac <__sprint_r.part.0+0xcc>
    7458:	81400017 	ldw	r5,0(r16)
    745c:	980d883a 	mov	r6,r19
    7460:	a009883a 	mov	r4,r20
    7464:	0008ed00 	call	8ed0 <_fputwc_r>
    7468:	e7000044 	addi	fp,fp,1
    746c:	14bff81e 	bne	r2,r18,7450 <__alt_data_end+0xfffd6710>
    7470:	9005883a 	mov	r2,r18
    7474:	a8000215 	stw	zero,8(r21)
    7478:	a8000115 	stw	zero,4(r21)
    747c:	dfc00917 	ldw	ra,36(sp)
    7480:	df000817 	ldw	fp,32(sp)
    7484:	ddc00717 	ldw	r23,28(sp)
    7488:	dd800617 	ldw	r22,24(sp)
    748c:	dd400517 	ldw	r21,20(sp)
    7490:	dd000417 	ldw	r20,16(sp)
    7494:	dcc00317 	ldw	r19,12(sp)
    7498:	dc800217 	ldw	r18,8(sp)
    749c:	dc400117 	ldw	r17,4(sp)
    74a0:	dc000017 	ldw	r16,0(sp)
    74a4:	dec00a04 	addi	sp,sp,40
    74a8:	f800283a 	ret
    74ac:	a8800217 	ldw	r2,8(r21)
    74b0:	8c63883a 	add	r17,r17,r17
    74b4:	8c63883a 	add	r17,r17,r17
    74b8:	1445c83a 	sub	r2,r2,r17
    74bc:	a8800215 	stw	r2,8(r21)
    74c0:	b5800204 	addi	r22,r22,8
    74c4:	bdc00204 	addi	r23,r23,8
    74c8:	103fdb1e 	bne	r2,zero,7438 <__alt_data_end+0xfffd66f8>
    74cc:	0005883a 	mov	r2,zero
    74d0:	003fe806 	br	7474 <__alt_data_end+0xfffd6734>
    74d4:	0008fd00 	call	8fd0 <__sfvwrite_r>
    74d8:	003fe606 	br	7474 <__alt_data_end+0xfffd6734>

000074dc <__sprint_r>:
    74dc:	30c00217 	ldw	r3,8(r6)
    74e0:	18000126 	beq	r3,zero,74e8 <__sprint_r+0xc>
    74e4:	00073e01 	jmpi	73e0 <__sprint_r.part.0>
    74e8:	30000115 	stw	zero,4(r6)
    74ec:	0005883a 	mov	r2,zero
    74f0:	f800283a 	ret

000074f4 <___vfiprintf_internal_r>:
    74f4:	deffca04 	addi	sp,sp,-216
    74f8:	dd403115 	stw	r21,196(sp)
    74fc:	dfc03515 	stw	ra,212(sp)
    7500:	df003415 	stw	fp,208(sp)
    7504:	ddc03315 	stw	r23,204(sp)
    7508:	dd803215 	stw	r22,200(sp)
    750c:	dd003015 	stw	r20,192(sp)
    7510:	dcc02f15 	stw	r19,188(sp)
    7514:	dc802e15 	stw	r18,184(sp)
    7518:	dc402d15 	stw	r17,180(sp)
    751c:	dc002c15 	stw	r16,176(sp)
    7520:	d9002115 	stw	r4,132(sp)
    7524:	d9402015 	stw	r5,128(sp)
    7528:	d9c02215 	stw	r7,136(sp)
    752c:	302b883a 	mov	r21,r6
    7530:	20000226 	beq	r4,zero,753c <___vfiprintf_internal_r+0x48>
    7534:	20800e17 	ldw	r2,56(r4)
    7538:	1000cf26 	beq	r2,zero,7878 <___vfiprintf_internal_r+0x384>
    753c:	d8c02017 	ldw	r3,128(sp)
    7540:	1880030b 	ldhu	r2,12(r3)
    7544:	10c8000c 	andi	r3,r2,8192
    7548:	1800071e 	bne	r3,zero,7568 <___vfiprintf_internal_r+0x74>
    754c:	d9402017 	ldw	r5,128(sp)
    7550:	00f7ffc4 	movi	r3,-8193
    7554:	10880014 	ori	r2,r2,8192
    7558:	29001917 	ldw	r4,100(r5)
    755c:	2880030d 	sth	r2,12(r5)
    7560:	20c6703a 	and	r3,r4,r3
    7564:	28c01915 	stw	r3,100(r5)
    7568:	10c0020c 	andi	r3,r2,8
    756c:	1800a526 	beq	r3,zero,7804 <___vfiprintf_internal_r+0x310>
    7570:	d9002017 	ldw	r4,128(sp)
    7574:	20c00417 	ldw	r3,16(r4)
    7578:	1800a226 	beq	r3,zero,7804 <___vfiprintf_internal_r+0x310>
    757c:	1080068c 	andi	r2,r2,26
    7580:	00c00284 	movi	r3,10
    7584:	10c0a826 	beq	r2,r3,7828 <___vfiprintf_internal_r+0x334>
    7588:	d9001a04 	addi	r4,sp,104
    758c:	d94019c4 	addi	r5,sp,103
    7590:	04800074 	movhi	r18,1
    7594:	2145c83a 	sub	r2,r4,r5
    7598:	94bbb904 	addi	r18,r18,-4380
    759c:	d9001e15 	stw	r4,120(sp)
    75a0:	d9401f15 	stw	r5,124(sp)
    75a4:	dec01a15 	stw	sp,104(sp)
    75a8:	d8001c15 	stw	zero,112(sp)
    75ac:	d8001b15 	stw	zero,108(sp)
    75b0:	d811883a 	mov	r8,sp
    75b4:	d8002615 	stw	zero,152(sp)
    75b8:	d8002415 	stw	zero,144(sp)
    75bc:	d8802815 	stw	r2,160(sp)
    75c0:	a82d883a 	mov	r22,r21
    75c4:	b0800007 	ldb	r2,0(r22)
    75c8:	10040d26 	beq	r2,zero,8600 <___vfiprintf_internal_r+0x110c>
    75cc:	00c00944 	movi	r3,37
    75d0:	b029883a 	mov	r20,r22
    75d4:	10c0021e 	bne	r2,r3,75e0 <___vfiprintf_internal_r+0xec>
    75d8:	00001606 	br	7634 <___vfiprintf_internal_r+0x140>
    75dc:	10c00326 	beq	r2,r3,75ec <___vfiprintf_internal_r+0xf8>
    75e0:	a5000044 	addi	r20,r20,1
    75e4:	a0800007 	ldb	r2,0(r20)
    75e8:	103ffc1e 	bne	r2,zero,75dc <__alt_data_end+0xfffd689c>
    75ec:	a5a1c83a 	sub	r16,r20,r22
    75f0:	80001026 	beq	r16,zero,7634 <___vfiprintf_internal_r+0x140>
    75f4:	d8c01c17 	ldw	r3,112(sp)
    75f8:	d8801b17 	ldw	r2,108(sp)
    75fc:	45800015 	stw	r22,0(r8)
    7600:	80c7883a 	add	r3,r16,r3
    7604:	10800044 	addi	r2,r2,1
    7608:	44000115 	stw	r16,4(r8)
    760c:	d8c01c15 	stw	r3,112(sp)
    7610:	d8801b15 	stw	r2,108(sp)
    7614:	010001c4 	movi	r4,7
    7618:	2080750e 	bge	r4,r2,77f0 <___vfiprintf_internal_r+0x2fc>
    761c:	1803951e 	bne	r3,zero,8474 <___vfiprintf_internal_r+0xf80>
    7620:	d8c02417 	ldw	r3,144(sp)
    7624:	d8001b15 	stw	zero,108(sp)
    7628:	d811883a 	mov	r8,sp
    762c:	1c07883a 	add	r3,r3,r16
    7630:	d8c02415 	stw	r3,144(sp)
    7634:	a0800007 	ldb	r2,0(r20)
    7638:	1002e026 	beq	r2,zero,81bc <___vfiprintf_internal_r+0xcc8>
    763c:	a5800044 	addi	r22,r20,1
    7640:	a0c00047 	ldb	r3,1(r20)
    7644:	d8001d85 	stb	zero,118(sp)
    7648:	0027883a 	mov	r19,zero
    764c:	d8002305 	stb	zero,140(sp)
    7650:	043fffc4 	movi	r16,-1
    7654:	d8002515 	stw	zero,148(sp)
    7658:	0023883a 	mov	r17,zero
    765c:	05001604 	movi	r20,88
    7660:	05400244 	movi	r21,9
    7664:	402f883a 	mov	r23,r8
    7668:	b5800044 	addi	r22,r22,1
    766c:	18bff804 	addi	r2,r3,-32
    7670:	a0827736 	bltu	r20,r2,8050 <___vfiprintf_internal_r+0xb5c>
    7674:	100490ba 	slli	r2,r2,2
    7678:	01000034 	movhi	r4,0
    767c:	211da304 	addi	r4,r4,30348
    7680:	1105883a 	add	r2,r2,r4
    7684:	10800017 	ldw	r2,0(r2)
    7688:	1000683a 	jmp	r2
    768c:	00007d50 	cmplti	zero,zero,501
    7690:	00008050 	cmplti	zero,zero,513
    7694:	00008050 	cmplti	zero,zero,513
    7698:	00007d6c 	andhi	zero,zero,501
    769c:	00008050 	cmplti	zero,zero,513
    76a0:	00008050 	cmplti	zero,zero,513
    76a4:	00008050 	cmplti	zero,zero,513
    76a8:	00008050 	cmplti	zero,zero,513
    76ac:	00008050 	cmplti	zero,zero,513
    76b0:	00008050 	cmplti	zero,zero,513
    76b4:	00007f74 	movhi	zero,509
    76b8:	00007f98 	cmpnei	zero,zero,510
    76bc:	00008050 	cmplti	zero,zero,513
    76c0:	00007890 	cmplti	zero,zero,482
    76c4:	00007fac 	andhi	zero,zero,510
    76c8:	00008050 	cmplti	zero,zero,513
    76cc:	00007d78 	rdprs	zero,zero,501
    76d0:	00007d84 	movi	zero,502
    76d4:	00007d84 	movi	zero,502
    76d8:	00007d84 	movi	zero,502
    76dc:	00007d84 	movi	zero,502
    76e0:	00007d84 	movi	zero,502
    76e4:	00007d84 	movi	zero,502
    76e8:	00007d84 	movi	zero,502
    76ec:	00007d84 	movi	zero,502
    76f0:	00007d84 	movi	zero,502
    76f4:	00008050 	cmplti	zero,zero,513
    76f8:	00008050 	cmplti	zero,zero,513
    76fc:	00008050 	cmplti	zero,zero,513
    7700:	00008050 	cmplti	zero,zero,513
    7704:	00008050 	cmplti	zero,zero,513
    7708:	00008050 	cmplti	zero,zero,513
    770c:	00008050 	cmplti	zero,zero,513
    7710:	00008050 	cmplti	zero,zero,513
    7714:	00008050 	cmplti	zero,zero,513
    7718:	00008050 	cmplti	zero,zero,513
    771c:	00007dc4 	movi	zero,503
    7720:	00008050 	cmplti	zero,zero,513
    7724:	00008050 	cmplti	zero,zero,513
    7728:	00008050 	cmplti	zero,zero,513
    772c:	00008050 	cmplti	zero,zero,513
    7730:	00008050 	cmplti	zero,zero,513
    7734:	00008050 	cmplti	zero,zero,513
    7738:	00008050 	cmplti	zero,zero,513
    773c:	00008050 	cmplti	zero,zero,513
    7740:	00008050 	cmplti	zero,zero,513
    7744:	00008050 	cmplti	zero,zero,513
    7748:	00007e00 	call	7e0 <printf+0x30>
    774c:	00008050 	cmplti	zero,zero,513
    7750:	00008050 	cmplti	zero,zero,513
    7754:	00008050 	cmplti	zero,zero,513
    7758:	00008050 	cmplti	zero,zero,513
    775c:	00008050 	cmplti	zero,zero,513
    7760:	00007e5c 	xori	zero,zero,505
    7764:	00008050 	cmplti	zero,zero,513
    7768:	00008050 	cmplti	zero,zero,513
    776c:	00007ed0 	cmplti	zero,zero,507
    7770:	00008050 	cmplti	zero,zero,513
    7774:	00008050 	cmplti	zero,zero,513
    7778:	00008050 	cmplti	zero,zero,513
    777c:	00008050 	cmplti	zero,zero,513
    7780:	00008050 	cmplti	zero,zero,513
    7784:	00008050 	cmplti	zero,zero,513
    7788:	00008050 	cmplti	zero,zero,513
    778c:	00008050 	cmplti	zero,zero,513
    7790:	00008050 	cmplti	zero,zero,513
    7794:	00008050 	cmplti	zero,zero,513
    7798:	00007c78 	rdprs	zero,zero,497
    779c:	00007ca8 	cmpgeui	zero,zero,498
    77a0:	00008050 	cmplti	zero,zero,513
    77a4:	00008050 	cmplti	zero,zero,513
    77a8:	00008050 	cmplti	zero,zero,513
    77ac:	00007ff8 	rdprs	zero,zero,511
    77b0:	00007ca8 	cmpgeui	zero,zero,498
    77b4:	00008050 	cmplti	zero,zero,513
    77b8:	00008050 	cmplti	zero,zero,513
    77bc:	00007b50 	cmplti	zero,zero,493
    77c0:	00008050 	cmplti	zero,zero,513
    77c4:	00007b64 	muli	zero,zero,493
    77c8:	00007b9c 	xori	zero,zero,494
    77cc:	0000789c 	xori	zero,zero,482
    77d0:	00007b44 	movi	zero,493
    77d4:	00008050 	cmplti	zero,zero,513
    77d8:	00007f10 	cmplti	zero,zero,508
    77dc:	00008050 	cmplti	zero,zero,513
    77e0:	00007f5c 	xori	zero,zero,509
    77e4:	00008050 	cmplti	zero,zero,513
    77e8:	00008050 	cmplti	zero,zero,513
    77ec:	00007c20 	cmpeqi	zero,zero,496
    77f0:	42000204 	addi	r8,r8,8
    77f4:	d8c02417 	ldw	r3,144(sp)
    77f8:	1c07883a 	add	r3,r3,r16
    77fc:	d8c02415 	stw	r3,144(sp)
    7800:	003f8c06 	br	7634 <__alt_data_end+0xfffd68f4>
    7804:	d9402017 	ldw	r5,128(sp)
    7808:	d9002117 	ldw	r4,132(sp)
    780c:	0002ba00 	call	2ba0 <__swsetup_r>
    7810:	1003c11e 	bne	r2,zero,8718 <___vfiprintf_internal_r+0x1224>
    7814:	d9402017 	ldw	r5,128(sp)
    7818:	00c00284 	movi	r3,10
    781c:	2880030b 	ldhu	r2,12(r5)
    7820:	1080068c 	andi	r2,r2,26
    7824:	10ff581e 	bne	r2,r3,7588 <__alt_data_end+0xfffd6848>
    7828:	d8c02017 	ldw	r3,128(sp)
    782c:	1880038f 	ldh	r2,14(r3)
    7830:	103f5516 	blt	r2,zero,7588 <__alt_data_end+0xfffd6848>
    7834:	d9c02217 	ldw	r7,136(sp)
    7838:	d9002117 	ldw	r4,132(sp)
    783c:	a80d883a 	mov	r6,r21
    7840:	180b883a 	mov	r5,r3
    7844:	0008a1c0 	call	8a1c <__sbprintf>
    7848:	dfc03517 	ldw	ra,212(sp)
    784c:	df003417 	ldw	fp,208(sp)
    7850:	ddc03317 	ldw	r23,204(sp)
    7854:	dd803217 	ldw	r22,200(sp)
    7858:	dd403117 	ldw	r21,196(sp)
    785c:	dd003017 	ldw	r20,192(sp)
    7860:	dcc02f17 	ldw	r19,188(sp)
    7864:	dc802e17 	ldw	r18,184(sp)
    7868:	dc402d17 	ldw	r17,180(sp)
    786c:	dc002c17 	ldw	r16,176(sp)
    7870:	dec03604 	addi	sp,sp,216
    7874:	f800283a 	ret
    7878:	0004bac0 	call	4bac <__sinit>
    787c:	003f2f06 	br	753c <__alt_data_end+0xfffd67fc>
    7880:	d8c02517 	ldw	r3,148(sp)
    7884:	d8802215 	stw	r2,136(sp)
    7888:	00c7c83a 	sub	r3,zero,r3
    788c:	d8c02515 	stw	r3,148(sp)
    7890:	8c400114 	ori	r17,r17,4
    7894:	b0c00007 	ldb	r3,0(r22)
    7898:	003f7306 	br	7668 <__alt_data_end+0xfffd6928>
    789c:	00800c04 	movi	r2,48
    78a0:	d9402217 	ldw	r5,136(sp)
    78a4:	d8801d05 	stb	r2,116(sp)
    78a8:	00801e04 	movi	r2,120
    78ac:	d8801d45 	stb	r2,117(sp)
    78b0:	d8001d85 	stb	zero,118(sp)
    78b4:	b811883a 	mov	r8,r23
    78b8:	28c00104 	addi	r3,r5,4
    78bc:	2cc00017 	ldw	r19,0(r5)
    78c0:	0029883a 	mov	r20,zero
    78c4:	88800094 	ori	r2,r17,2
    78c8:	80032516 	blt	r16,zero,8560 <___vfiprintf_internal_r+0x106c>
    78cc:	00bfdfc4 	movi	r2,-129
    78d0:	88a2703a 	and	r17,r17,r2
    78d4:	d8c02215 	stw	r3,136(sp)
    78d8:	8c400094 	ori	r17,r17,2
    78dc:	98032a1e 	bne	r19,zero,8588 <___vfiprintf_internal_r+0x1094>
    78e0:	00800074 	movhi	r2,1
    78e4:	10bb5804 	addi	r2,r2,-4768
    78e8:	d8802615 	stw	r2,152(sp)
    78ec:	002b883a 	mov	r21,zero
    78f0:	8001741e 	bne	r16,zero,7ec4 <___vfiprintf_internal_r+0x9d0>
    78f4:	0021883a 	mov	r16,zero
    78f8:	0029883a 	mov	r20,zero
    78fc:	ddc01a04 	addi	r23,sp,104
    7900:	8027883a 	mov	r19,r16
    7904:	8500010e 	bge	r16,r20,790c <___vfiprintf_internal_r+0x418>
    7908:	a027883a 	mov	r19,r20
    790c:	ad403fcc 	andi	r21,r21,255
    7910:	ad40201c 	xori	r21,r21,128
    7914:	ad7fe004 	addi	r21,r21,-128
    7918:	a8000126 	beq	r21,zero,7920 <___vfiprintf_internal_r+0x42c>
    791c:	9cc00044 	addi	r19,r19,1
    7920:	89c0008c 	andi	r7,r17,2
    7924:	38000126 	beq	r7,zero,792c <___vfiprintf_internal_r+0x438>
    7928:	9cc00084 	addi	r19,r19,2
    792c:	88c0210c 	andi	r3,r17,132
    7930:	1801dd1e 	bne	r3,zero,80a8 <___vfiprintf_internal_r+0xbb4>
    7934:	d9402517 	ldw	r5,148(sp)
    7938:	2cebc83a 	sub	r21,r5,r19
    793c:	0541da0e 	bge	zero,r21,80a8 <___vfiprintf_internal_r+0xbb4>
    7940:	07000404 	movi	fp,16
    7944:	d8801c17 	ldw	r2,112(sp)
    7948:	e543be0e 	bge	fp,r21,8844 <___vfiprintf_internal_r+0x1350>
    794c:	01400074 	movhi	r5,1
    7950:	297bbd04 	addi	r5,r5,-4364
    7954:	dc002715 	stw	r16,156(sp)
    7958:	d9801b17 	ldw	r6,108(sp)
    795c:	a821883a 	mov	r16,r21
    7960:	d9402315 	stw	r5,140(sp)
    7964:	028001c4 	movi	r10,7
    7968:	d9c02915 	stw	r7,164(sp)
    796c:	182b883a 	mov	r21,r3
    7970:	00000506 	br	7988 <___vfiprintf_internal_r+0x494>
    7974:	31000084 	addi	r4,r6,2
    7978:	42000204 	addi	r8,r8,8
    797c:	180d883a 	mov	r6,r3
    7980:	843ffc04 	addi	r16,r16,-16
    7984:	e4000f0e 	bge	fp,r16,79c4 <___vfiprintf_internal_r+0x4d0>
    7988:	01000074 	movhi	r4,1
    798c:	10800404 	addi	r2,r2,16
    7990:	30c00044 	addi	r3,r6,1
    7994:	213bbd04 	addi	r4,r4,-4364
    7998:	41000015 	stw	r4,0(r8)
    799c:	47000115 	stw	fp,4(r8)
    79a0:	d8801c15 	stw	r2,112(sp)
    79a4:	d8c01b15 	stw	r3,108(sp)
    79a8:	50fff20e 	bge	r10,r3,7974 <__alt_data_end+0xfffd6c34>
    79ac:	1001b21e 	bne	r2,zero,8078 <___vfiprintf_internal_r+0xb84>
    79b0:	843ffc04 	addi	r16,r16,-16
    79b4:	000d883a 	mov	r6,zero
    79b8:	01000044 	movi	r4,1
    79bc:	d811883a 	mov	r8,sp
    79c0:	e43ff116 	blt	fp,r16,7988 <__alt_data_end+0xfffd6c48>
    79c4:	a807883a 	mov	r3,r21
    79c8:	d9c02917 	ldw	r7,164(sp)
    79cc:	802b883a 	mov	r21,r16
    79d0:	dc002717 	ldw	r16,156(sp)
    79d4:	d9402317 	ldw	r5,140(sp)
    79d8:	a885883a 	add	r2,r21,r2
    79dc:	45400115 	stw	r21,4(r8)
    79e0:	41400015 	stw	r5,0(r8)
    79e4:	d8801c15 	stw	r2,112(sp)
    79e8:	d9001b15 	stw	r4,108(sp)
    79ec:	014001c4 	movi	r5,7
    79f0:	29026216 	blt	r5,r4,837c <___vfiprintf_internal_r+0xe88>
    79f4:	d9801d87 	ldb	r6,118(sp)
    79f8:	42000204 	addi	r8,r8,8
    79fc:	21400044 	addi	r5,r4,1
    7a00:	3001ae1e 	bne	r6,zero,80bc <___vfiprintf_internal_r+0xbc8>
    7a04:	3801bb26 	beq	r7,zero,80f4 <___vfiprintf_internal_r+0xc00>
    7a08:	d9001d04 	addi	r4,sp,116
    7a0c:	10800084 	addi	r2,r2,2
    7a10:	41000015 	stw	r4,0(r8)
    7a14:	01000084 	movi	r4,2
    7a18:	41000115 	stw	r4,4(r8)
    7a1c:	d8801c15 	stw	r2,112(sp)
    7a20:	d9401b15 	stw	r5,108(sp)
    7a24:	010001c4 	movi	r4,7
    7a28:	2142680e 	bge	r4,r5,83cc <___vfiprintf_internal_r+0xed8>
    7a2c:	1002b11e 	bne	r2,zero,84f4 <___vfiprintf_internal_r+0x1000>
    7a30:	01802004 	movi	r6,128
    7a34:	01400044 	movi	r5,1
    7a38:	0009883a 	mov	r4,zero
    7a3c:	d811883a 	mov	r8,sp
    7a40:	1981ae1e 	bne	r3,r6,80fc <___vfiprintf_internal_r+0xc08>
    7a44:	d8c02517 	ldw	r3,148(sp)
    7a48:	1cf9c83a 	sub	fp,r3,r19
    7a4c:	0701ab0e 	bge	zero,fp,80fc <___vfiprintf_internal_r+0xc08>
    7a50:	05400404 	movi	r21,16
    7a54:	af03a90e 	bge	r21,fp,88fc <___vfiprintf_internal_r+0x1408>
    7a58:	01400074 	movhi	r5,1
    7a5c:	297bb904 	addi	r5,r5,-4380
    7a60:	d9402315 	stw	r5,140(sp)
    7a64:	01c001c4 	movi	r7,7
    7a68:	00000506 	br	7a80 <___vfiprintf_internal_r+0x58c>
    7a6c:	21800084 	addi	r6,r4,2
    7a70:	42000204 	addi	r8,r8,8
    7a74:	1809883a 	mov	r4,r3
    7a78:	e73ffc04 	addi	fp,fp,-16
    7a7c:	af000d0e 	bge	r21,fp,7ab4 <___vfiprintf_internal_r+0x5c0>
    7a80:	10800404 	addi	r2,r2,16
    7a84:	20c00044 	addi	r3,r4,1
    7a88:	44800015 	stw	r18,0(r8)
    7a8c:	45400115 	stw	r21,4(r8)
    7a90:	d8801c15 	stw	r2,112(sp)
    7a94:	d8c01b15 	stw	r3,108(sp)
    7a98:	38fff40e 	bge	r7,r3,7a6c <__alt_data_end+0xfffd6d2c>
    7a9c:	10022b1e 	bne	r2,zero,834c <___vfiprintf_internal_r+0xe58>
    7aa0:	e73ffc04 	addi	fp,fp,-16
    7aa4:	01800044 	movi	r6,1
    7aa8:	0009883a 	mov	r4,zero
    7aac:	d811883a 	mov	r8,sp
    7ab0:	af3ff316 	blt	r21,fp,7a80 <__alt_data_end+0xfffd6d40>
    7ab4:	d8c02317 	ldw	r3,140(sp)
    7ab8:	1705883a 	add	r2,r2,fp
    7abc:	47000115 	stw	fp,4(r8)
    7ac0:	40c00015 	stw	r3,0(r8)
    7ac4:	d8801c15 	stw	r2,112(sp)
    7ac8:	d9801b15 	stw	r6,108(sp)
    7acc:	00c001c4 	movi	r3,7
    7ad0:	19829416 	blt	r3,r6,8524 <___vfiprintf_internal_r+0x1030>
    7ad4:	8521c83a 	sub	r16,r16,r20
    7ad8:	42000204 	addi	r8,r8,8
    7adc:	31400044 	addi	r5,r6,1
    7ae0:	3009883a 	mov	r4,r6
    7ae4:	04018716 	blt	zero,r16,8104 <___vfiprintf_internal_r+0xc10>
    7ae8:	a085883a 	add	r2,r20,r2
    7aec:	45c00015 	stw	r23,0(r8)
    7af0:	45000115 	stw	r20,4(r8)
    7af4:	d8801c15 	stw	r2,112(sp)
    7af8:	d9401b15 	stw	r5,108(sp)
    7afc:	00c001c4 	movi	r3,7
    7b00:	1941c20e 	bge	r3,r5,820c <___vfiprintf_internal_r+0xd18>
    7b04:	1002531e 	bne	r2,zero,8454 <___vfiprintf_internal_r+0xf60>
    7b08:	d8001b15 	stw	zero,108(sp)
    7b0c:	8c40010c 	andi	r17,r17,4
    7b10:	88023226 	beq	r17,zero,83dc <___vfiprintf_internal_r+0xee8>
    7b14:	d9002517 	ldw	r4,148(sp)
    7b18:	24e3c83a 	sub	r17,r4,r19
    7b1c:	04432916 	blt	zero,r17,87c4 <___vfiprintf_internal_r+0x12d0>
    7b20:	d8802517 	ldw	r2,148(sp)
    7b24:	14c0010e 	bge	r2,r19,7b2c <___vfiprintf_internal_r+0x638>
    7b28:	9805883a 	mov	r2,r19
    7b2c:	d8c02417 	ldw	r3,144(sp)
    7b30:	1887883a 	add	r3,r3,r2
    7b34:	d8c02415 	stw	r3,144(sp)
    7b38:	d8001b15 	stw	zero,108(sp)
    7b3c:	d811883a 	mov	r8,sp
    7b40:	003ea006 	br	75c4 <__alt_data_end+0xfffd6884>
    7b44:	8c400814 	ori	r17,r17,32
    7b48:	b0c00007 	ldb	r3,0(r22)
    7b4c:	003ec606 	br	7668 <__alt_data_end+0xfffd6928>
    7b50:	b0c00007 	ldb	r3,0(r22)
    7b54:	00801b04 	movi	r2,108
    7b58:	18832026 	beq	r3,r2,87dc <___vfiprintf_internal_r+0x12e8>
    7b5c:	8c400414 	ori	r17,r17,16
    7b60:	003ec106 	br	7668 <__alt_data_end+0xfffd6928>
    7b64:	9cc03fcc 	andi	r19,r19,255
    7b68:	b811883a 	mov	r8,r23
    7b6c:	9803981e 	bne	r19,zero,89d0 <___vfiprintf_internal_r+0x14dc>
    7b70:	8880080c 	andi	r2,r17,32
    7b74:	1002be26 	beq	r2,zero,8670 <___vfiprintf_internal_r+0x117c>
    7b78:	d9002217 	ldw	r4,136(sp)
    7b7c:	d9402417 	ldw	r5,144(sp)
    7b80:	20800017 	ldw	r2,0(r4)
    7b84:	2807d7fa 	srai	r3,r5,31
    7b88:	21000104 	addi	r4,r4,4
    7b8c:	d9002215 	stw	r4,136(sp)
    7b90:	11400015 	stw	r5,0(r2)
    7b94:	10c00115 	stw	r3,4(r2)
    7b98:	003e8a06 	br	75c4 <__alt_data_end+0xfffd6884>
    7b9c:	9cc03fcc 	andi	r19,r19,255
    7ba0:	b811883a 	mov	r8,r23
    7ba4:	9803871e 	bne	r19,zero,89c4 <___vfiprintf_internal_r+0x14d0>
    7ba8:	8880080c 	andi	r2,r17,32
    7bac:	10009a26 	beq	r2,zero,7e18 <___vfiprintf_internal_r+0x924>
    7bb0:	d9002217 	ldw	r4,136(sp)
    7bb4:	d8001d85 	stb	zero,118(sp)
    7bb8:	20800204 	addi	r2,r4,8
    7bbc:	24c00017 	ldw	r19,0(r4)
    7bc0:	25000117 	ldw	r20,4(r4)
    7bc4:	8002a416 	blt	r16,zero,8658 <___vfiprintf_internal_r+0x1164>
    7bc8:	013fdfc4 	movi	r4,-129
    7bcc:	9d06b03a 	or	r3,r19,r20
    7bd0:	d8802215 	stw	r2,136(sp)
    7bd4:	8922703a 	and	r17,r17,r4
    7bd8:	18009b26 	beq	r3,zero,7e48 <___vfiprintf_internal_r+0x954>
    7bdc:	002b883a 	mov	r21,zero
    7be0:	ddc01a04 	addi	r23,sp,104
    7be4:	9806d0fa 	srli	r3,r19,3
    7be8:	a008977a 	slli	r4,r20,29
    7bec:	a028d0fa 	srli	r20,r20,3
    7bf0:	9cc001cc 	andi	r19,r19,7
    7bf4:	98800c04 	addi	r2,r19,48
    7bf8:	bdffffc4 	addi	r23,r23,-1
    7bfc:	20e6b03a 	or	r19,r4,r3
    7c00:	b8800005 	stb	r2,0(r23)
    7c04:	9d06b03a 	or	r3,r19,r20
    7c08:	183ff61e 	bne	r3,zero,7be4 <__alt_data_end+0xfffd6ea4>
    7c0c:	88c0004c 	andi	r3,r17,1
    7c10:	18021f1e 	bne	r3,zero,8490 <___vfiprintf_internal_r+0xf9c>
    7c14:	d9401e17 	ldw	r5,120(sp)
    7c18:	2de9c83a 	sub	r20,r5,r23
    7c1c:	003f3806 	br	7900 <__alt_data_end+0xfffd6bc0>
    7c20:	9cc03fcc 	andi	r19,r19,255
    7c24:	b811883a 	mov	r8,r23
    7c28:	98034f1e 	bne	r19,zero,8968 <___vfiprintf_internal_r+0x1474>
    7c2c:	00800074 	movhi	r2,1
    7c30:	10bb5804 	addi	r2,r2,-4768
    7c34:	d8802615 	stw	r2,152(sp)
    7c38:	8880080c 	andi	r2,r17,32
    7c3c:	1000ac26 	beq	r2,zero,7ef0 <___vfiprintf_internal_r+0x9fc>
    7c40:	d9002217 	ldw	r4,136(sp)
    7c44:	24c00017 	ldw	r19,0(r4)
    7c48:	25000117 	ldw	r20,4(r4)
    7c4c:	21000204 	addi	r4,r4,8
    7c50:	d9002215 	stw	r4,136(sp)
    7c54:	8880004c 	andi	r2,r17,1
    7c58:	1001e726 	beq	r2,zero,83f8 <___vfiprintf_internal_r+0xf04>
    7c5c:	9d04b03a 	or	r2,r19,r20
    7c60:	10025c1e 	bne	r2,zero,85d4 <___vfiprintf_internal_r+0x10e0>
    7c64:	d8001d85 	stb	zero,118(sp)
    7c68:	80024416 	blt	r16,zero,857c <___vfiprintf_internal_r+0x1088>
    7c6c:	00bfdfc4 	movi	r2,-129
    7c70:	88a2703a 	and	r17,r17,r2
    7c74:	003f1d06 	br	78ec <__alt_data_end+0xfffd6bac>
    7c78:	d8c02217 	ldw	r3,136(sp)
    7c7c:	04c00044 	movi	r19,1
    7c80:	b811883a 	mov	r8,r23
    7c84:	18800017 	ldw	r2,0(r3)
    7c88:	18c00104 	addi	r3,r3,4
    7c8c:	d8001d85 	stb	zero,118(sp)
    7c90:	d8801005 	stb	r2,64(sp)
    7c94:	d8c02215 	stw	r3,136(sp)
    7c98:	9829883a 	mov	r20,r19
    7c9c:	ddc01004 	addi	r23,sp,64
    7ca0:	0021883a 	mov	r16,zero
    7ca4:	003f1e06 	br	7920 <__alt_data_end+0xfffd6be0>
    7ca8:	9cc03fcc 	andi	r19,r19,255
    7cac:	b811883a 	mov	r8,r23
    7cb0:	9803331e 	bne	r19,zero,8980 <___vfiprintf_internal_r+0x148c>
    7cb4:	8880080c 	andi	r2,r17,32
    7cb8:	10004826 	beq	r2,zero,7ddc <___vfiprintf_internal_r+0x8e8>
    7cbc:	d9002217 	ldw	r4,136(sp)
    7cc0:	20800117 	ldw	r2,4(r4)
    7cc4:	24c00017 	ldw	r19,0(r4)
    7cc8:	21000204 	addi	r4,r4,8
    7ccc:	d9002215 	stw	r4,136(sp)
    7cd0:	1029883a 	mov	r20,r2
    7cd4:	10024c16 	blt	r2,zero,8608 <___vfiprintf_internal_r+0x1114>
    7cd8:	dd401d83 	ldbu	r21,118(sp)
    7cdc:	80007116 	blt	r16,zero,7ea4 <___vfiprintf_internal_r+0x9b0>
    7ce0:	00ffdfc4 	movi	r3,-129
    7ce4:	9d04b03a 	or	r2,r19,r20
    7ce8:	88e2703a 	and	r17,r17,r3
    7cec:	1000d126 	beq	r2,zero,8034 <___vfiprintf_internal_r+0xb40>
    7cf0:	a0023526 	beq	r20,zero,85c8 <___vfiprintf_internal_r+0x10d4>
    7cf4:	ddc01a04 	addi	r23,sp,104
    7cf8:	4039883a 	mov	fp,r8
    7cfc:	9809883a 	mov	r4,r19
    7d00:	a00b883a 	mov	r5,r20
    7d04:	01800284 	movi	r6,10
    7d08:	000f883a 	mov	r7,zero
    7d0c:	000a5a80 	call	a5a8 <__umoddi3>
    7d10:	10800c04 	addi	r2,r2,48
    7d14:	bdffffc4 	addi	r23,r23,-1
    7d18:	9809883a 	mov	r4,r19
    7d1c:	a00b883a 	mov	r5,r20
    7d20:	b8800005 	stb	r2,0(r23)
    7d24:	01800284 	movi	r6,10
    7d28:	000f883a 	mov	r7,zero
    7d2c:	0009fac0 	call	9fac <__udivdi3>
    7d30:	1027883a 	mov	r19,r2
    7d34:	10c4b03a 	or	r2,r2,r3
    7d38:	1829883a 	mov	r20,r3
    7d3c:	103fef1e 	bne	r2,zero,7cfc <__alt_data_end+0xfffd6fbc>
    7d40:	d9001e17 	ldw	r4,120(sp)
    7d44:	e011883a 	mov	r8,fp
    7d48:	25e9c83a 	sub	r20,r4,r23
    7d4c:	003eec06 	br	7900 <__alt_data_end+0xfffd6bc0>
    7d50:	d8802307 	ldb	r2,140(sp)
    7d54:	1002361e 	bne	r2,zero,8630 <___vfiprintf_internal_r+0x113c>
    7d58:	00c00804 	movi	r3,32
    7d5c:	d8c02305 	stb	r3,140(sp)
    7d60:	04c00044 	movi	r19,1
    7d64:	b0c00007 	ldb	r3,0(r22)
    7d68:	003e3f06 	br	7668 <__alt_data_end+0xfffd6928>
    7d6c:	8c400054 	ori	r17,r17,1
    7d70:	b0c00007 	ldb	r3,0(r22)
    7d74:	003e3c06 	br	7668 <__alt_data_end+0xfffd6928>
    7d78:	8c402014 	ori	r17,r17,128
    7d7c:	b0c00007 	ldb	r3,0(r22)
    7d80:	003e3906 	br	7668 <__alt_data_end+0xfffd6928>
    7d84:	dc002715 	stw	r16,156(sp)
    7d88:	d8002515 	stw	zero,148(sp)
    7d8c:	1f3ff404 	addi	fp,r3,-48
    7d90:	0009883a 	mov	r4,zero
    7d94:	b021883a 	mov	r16,r22
    7d98:	01400284 	movi	r5,10
    7d9c:	000ab6c0 	call	ab6c <__mulsi3>
    7da0:	80c00007 	ldb	r3,0(r16)
    7da4:	e089883a 	add	r4,fp,r2
    7da8:	b5800044 	addi	r22,r22,1
    7dac:	1f3ff404 	addi	fp,r3,-48
    7db0:	b021883a 	mov	r16,r22
    7db4:	af3ff82e 	bgeu	r21,fp,7d98 <__alt_data_end+0xfffd7058>
    7db8:	d9002515 	stw	r4,148(sp)
    7dbc:	dc002717 	ldw	r16,156(sp)
    7dc0:	003e2a06 	br	766c <__alt_data_end+0xfffd692c>
    7dc4:	9cc03fcc 	andi	r19,r19,255
    7dc8:	b811883a 	mov	r8,r23
    7dcc:	9802e91e 	bne	r19,zero,8974 <___vfiprintf_internal_r+0x1480>
    7dd0:	8c400414 	ori	r17,r17,16
    7dd4:	8880080c 	andi	r2,r17,32
    7dd8:	103fb81e 	bne	r2,zero,7cbc <__alt_data_end+0xfffd6f7c>
    7ddc:	8880040c 	andi	r2,r17,16
    7de0:	10022e26 	beq	r2,zero,869c <___vfiprintf_internal_r+0x11a8>
    7de4:	d9402217 	ldw	r5,136(sp)
    7de8:	2cc00017 	ldw	r19,0(r5)
    7dec:	29400104 	addi	r5,r5,4
    7df0:	d9402215 	stw	r5,136(sp)
    7df4:	9829d7fa 	srai	r20,r19,31
    7df8:	a005883a 	mov	r2,r20
    7dfc:	003fb506 	br	7cd4 <__alt_data_end+0xfffd6f94>
    7e00:	9cc03fcc 	andi	r19,r19,255
    7e04:	b811883a 	mov	r8,r23
    7e08:	9802fa1e 	bne	r19,zero,89f4 <___vfiprintf_internal_r+0x1500>
    7e0c:	8c400414 	ori	r17,r17,16
    7e10:	8880080c 	andi	r2,r17,32
    7e14:	103f661e 	bne	r2,zero,7bb0 <__alt_data_end+0xfffd6e70>
    7e18:	8880040c 	andi	r2,r17,16
    7e1c:	10020626 	beq	r2,zero,8638 <___vfiprintf_internal_r+0x1144>
    7e20:	d9402217 	ldw	r5,136(sp)
    7e24:	d8001d85 	stb	zero,118(sp)
    7e28:	0029883a 	mov	r20,zero
    7e2c:	28800104 	addi	r2,r5,4
    7e30:	2cc00017 	ldw	r19,0(r5)
    7e34:	80020816 	blt	r16,zero,8658 <___vfiprintf_internal_r+0x1164>
    7e38:	00ffdfc4 	movi	r3,-129
    7e3c:	d8802215 	stw	r2,136(sp)
    7e40:	88e2703a 	and	r17,r17,r3
    7e44:	983f651e 	bne	r19,zero,7bdc <__alt_data_end+0xfffd6e9c>
    7e48:	002b883a 	mov	r21,zero
    7e4c:	8002cf26 	beq	r16,zero,898c <___vfiprintf_internal_r+0x1498>
    7e50:	0027883a 	mov	r19,zero
    7e54:	0029883a 	mov	r20,zero
    7e58:	003f6106 	br	7be0 <__alt_data_end+0xfffd6ea0>
    7e5c:	9cc03fcc 	andi	r19,r19,255
    7e60:	b811883a 	mov	r8,r23
    7e64:	9802e01e 	bne	r19,zero,89e8 <___vfiprintf_internal_r+0x14f4>
    7e68:	8c400414 	ori	r17,r17,16
    7e6c:	8880080c 	andi	r2,r17,32
    7e70:	1000641e 	bne	r2,zero,8004 <___vfiprintf_internal_r+0xb10>
    7e74:	8880040c 	andi	r2,r17,16
    7e78:	1001c81e 	bne	r2,zero,859c <___vfiprintf_internal_r+0x10a8>
    7e7c:	8880100c 	andi	r2,r17,64
    7e80:	d8001d85 	stb	zero,118(sp)
    7e84:	1002281e 	bne	r2,zero,8728 <___vfiprintf_internal_r+0x1234>
    7e88:	d9002217 	ldw	r4,136(sp)
    7e8c:	0029883a 	mov	r20,zero
    7e90:	20800104 	addi	r2,r4,4
    7e94:	24c00017 	ldw	r19,0(r4)
    7e98:	8001c60e 	bge	r16,zero,85b4 <___vfiprintf_internal_r+0x10c0>
    7e9c:	d8802215 	stw	r2,136(sp)
    7ea0:	002b883a 	mov	r21,zero
    7ea4:	9d04b03a 	or	r2,r19,r20
    7ea8:	103f911e 	bne	r2,zero,7cf0 <__alt_data_end+0xfffd6fb0>
    7eac:	00800044 	movi	r2,1
    7eb0:	10803fcc 	andi	r2,r2,255
    7eb4:	00c00044 	movi	r3,1
    7eb8:	10c05f26 	beq	r2,r3,8038 <___vfiprintf_internal_r+0xb44>
    7ebc:	00c00084 	movi	r3,2
    7ec0:	10ffe31e 	bne	r2,r3,7e50 <__alt_data_end+0xfffd7110>
    7ec4:	0027883a 	mov	r19,zero
    7ec8:	0029883a 	mov	r20,zero
    7ecc:	00015106 	br	8414 <___vfiprintf_internal_r+0xf20>
    7ed0:	9cc03fcc 	andi	r19,r19,255
    7ed4:	b811883a 	mov	r8,r23
    7ed8:	9802c01e 	bne	r19,zero,89dc <___vfiprintf_internal_r+0x14e8>
    7edc:	01400074 	movhi	r5,1
    7ee0:	297b5304 	addi	r5,r5,-4788
    7ee4:	d9402615 	stw	r5,152(sp)
    7ee8:	8880080c 	andi	r2,r17,32
    7eec:	103f541e 	bne	r2,zero,7c40 <__alt_data_end+0xfffd6f00>
    7ef0:	8880040c 	andi	r2,r17,16
    7ef4:	1001f226 	beq	r2,zero,86c0 <___vfiprintf_internal_r+0x11cc>
    7ef8:	d9402217 	ldw	r5,136(sp)
    7efc:	0029883a 	mov	r20,zero
    7f00:	2cc00017 	ldw	r19,0(r5)
    7f04:	29400104 	addi	r5,r5,4
    7f08:	d9402215 	stw	r5,136(sp)
    7f0c:	003f5106 	br	7c54 <__alt_data_end+0xfffd6f14>
    7f10:	d8c02217 	ldw	r3,136(sp)
    7f14:	b811883a 	mov	r8,r23
    7f18:	d8001d85 	stb	zero,118(sp)
    7f1c:	1dc00017 	ldw	r23,0(r3)
    7f20:	1f000104 	addi	fp,r3,4
    7f24:	b8025926 	beq	r23,zero,888c <___vfiprintf_internal_r+0x1398>
    7f28:	80023316 	blt	r16,zero,87f8 <___vfiprintf_internal_r+0x1304>
    7f2c:	800d883a 	mov	r6,r16
    7f30:	000b883a 	mov	r5,zero
    7f34:	b809883a 	mov	r4,r23
    7f38:	da002a15 	stw	r8,168(sp)
    7f3c:	0005c5c0 	call	5c5c <memchr>
    7f40:	da002a17 	ldw	r8,168(sp)
    7f44:	10026826 	beq	r2,zero,88e8 <___vfiprintf_internal_r+0x13f4>
    7f48:	15e9c83a 	sub	r20,r2,r23
    7f4c:	dd401d83 	ldbu	r21,118(sp)
    7f50:	df002215 	stw	fp,136(sp)
    7f54:	0021883a 	mov	r16,zero
    7f58:	003e6906 	br	7900 <__alt_data_end+0xfffd6bc0>
    7f5c:	9cc03fcc 	andi	r19,r19,255
    7f60:	b811883a 	mov	r8,r23
    7f64:	983fc126 	beq	r19,zero,7e6c <__alt_data_end+0xfffd712c>
    7f68:	d8c02303 	ldbu	r3,140(sp)
    7f6c:	d8c01d85 	stb	r3,118(sp)
    7f70:	003fbe06 	br	7e6c <__alt_data_end+0xfffd712c>
    7f74:	d9002217 	ldw	r4,136(sp)
    7f78:	d9402217 	ldw	r5,136(sp)
    7f7c:	21000017 	ldw	r4,0(r4)
    7f80:	28800104 	addi	r2,r5,4
    7f84:	d9002515 	stw	r4,148(sp)
    7f88:	203e3d16 	blt	r4,zero,7880 <__alt_data_end+0xfffd6b40>
    7f8c:	d8802215 	stw	r2,136(sp)
    7f90:	b0c00007 	ldb	r3,0(r22)
    7f94:	003db406 	br	7668 <__alt_data_end+0xfffd6928>
    7f98:	00c00ac4 	movi	r3,43
    7f9c:	d8c02305 	stb	r3,140(sp)
    7fa0:	04c00044 	movi	r19,1
    7fa4:	b0c00007 	ldb	r3,0(r22)
    7fa8:	003daf06 	br	7668 <__alt_data_end+0xfffd6928>
    7fac:	b0c00007 	ldb	r3,0(r22)
    7fb0:	01000a84 	movi	r4,42
    7fb4:	b4000044 	addi	r16,r22,1
    7fb8:	19025e26 	beq	r3,r4,8934 <___vfiprintf_internal_r+0x1440>
    7fbc:	1f3ff404 	addi	fp,r3,-48
    7fc0:	0009883a 	mov	r4,zero
    7fc4:	af025236 	bltu	r21,fp,8910 <___vfiprintf_internal_r+0x141c>
    7fc8:	01400284 	movi	r5,10
    7fcc:	000ab6c0 	call	ab6c <__mulsi3>
    7fd0:	80c00007 	ldb	r3,0(r16)
    7fd4:	1709883a 	add	r4,r2,fp
    7fd8:	85800044 	addi	r22,r16,1
    7fdc:	1f3ff404 	addi	fp,r3,-48
    7fe0:	b021883a 	mov	r16,r22
    7fe4:	af3ff82e 	bgeu	r21,fp,7fc8 <__alt_data_end+0xfffd7288>
    7fe8:	2021883a 	mov	r16,r4
    7fec:	203d9f0e 	bge	r4,zero,766c <__alt_data_end+0xfffd692c>
    7ff0:	043fffc4 	movi	r16,-1
    7ff4:	003d9d06 	br	766c <__alt_data_end+0xfffd692c>
    7ff8:	8c401014 	ori	r17,r17,64
    7ffc:	b0c00007 	ldb	r3,0(r22)
    8000:	003d9906 	br	7668 <__alt_data_end+0xfffd6928>
    8004:	d9002217 	ldw	r4,136(sp)
    8008:	d8001d85 	stb	zero,118(sp)
    800c:	20c00204 	addi	r3,r4,8
    8010:	24c00017 	ldw	r19,0(r4)
    8014:	25000117 	ldw	r20,4(r4)
    8018:	8001e716 	blt	r16,zero,87b8 <___vfiprintf_internal_r+0x12c4>
    801c:	013fdfc4 	movi	r4,-129
    8020:	9d04b03a 	or	r2,r19,r20
    8024:	d8c02215 	stw	r3,136(sp)
    8028:	8922703a 	and	r17,r17,r4
    802c:	002b883a 	mov	r21,zero
    8030:	103f2f1e 	bne	r2,zero,7cf0 <__alt_data_end+0xfffd6fb0>
    8034:	803e2f26 	beq	r16,zero,78f4 <__alt_data_end+0xfffd6bb4>
    8038:	0027883a 	mov	r19,zero
    803c:	9cc00c04 	addi	r19,r19,48
    8040:	dcc019c5 	stb	r19,103(sp)
    8044:	dd002817 	ldw	r20,160(sp)
    8048:	ddc019c4 	addi	r23,sp,103
    804c:	003e2c06 	br	7900 <__alt_data_end+0xfffd6bc0>
    8050:	9cc03fcc 	andi	r19,r19,255
    8054:	b811883a 	mov	r8,r23
    8058:	9802571e 	bne	r19,zero,89b8 <___vfiprintf_internal_r+0x14c4>
    805c:	18005726 	beq	r3,zero,81bc <___vfiprintf_internal_r+0xcc8>
    8060:	04c00044 	movi	r19,1
    8064:	d8c01005 	stb	r3,64(sp)
    8068:	d8001d85 	stb	zero,118(sp)
    806c:	9829883a 	mov	r20,r19
    8070:	ddc01004 	addi	r23,sp,64
    8074:	003f0a06 	br	7ca0 <__alt_data_end+0xfffd6f60>
    8078:	d9402017 	ldw	r5,128(sp)
    807c:	d9002117 	ldw	r4,132(sp)
    8080:	d9801a04 	addi	r6,sp,104
    8084:	da802a15 	stw	r10,168(sp)
    8088:	00073e00 	call	73e0 <__sprint_r.part.0>
    808c:	da802a17 	ldw	r10,168(sp)
    8090:	1000501e 	bne	r2,zero,81d4 <___vfiprintf_internal_r+0xce0>
    8094:	d9801b17 	ldw	r6,108(sp)
    8098:	d8801c17 	ldw	r2,112(sp)
    809c:	d811883a 	mov	r8,sp
    80a0:	31000044 	addi	r4,r6,1
    80a4:	003e3606 	br	7980 <__alt_data_end+0xfffd6c40>
    80a8:	d9001b17 	ldw	r4,108(sp)
    80ac:	d8801c17 	ldw	r2,112(sp)
    80b0:	21400044 	addi	r5,r4,1
    80b4:	d9801d87 	ldb	r6,118(sp)
    80b8:	303e5226 	beq	r6,zero,7a04 <__alt_data_end+0xfffd6cc4>
    80bc:	01800044 	movi	r6,1
    80c0:	d9001d84 	addi	r4,sp,118
    80c4:	1185883a 	add	r2,r2,r6
    80c8:	41000015 	stw	r4,0(r8)
    80cc:	41800115 	stw	r6,4(r8)
    80d0:	d8801c15 	stw	r2,112(sp)
    80d4:	d9401b15 	stw	r5,108(sp)
    80d8:	010001c4 	movi	r4,7
    80dc:	2140b00e 	bge	r4,r5,83a0 <___vfiprintf_internal_r+0xeac>
    80e0:	1000f61e 	bne	r2,zero,84bc <___vfiprintf_internal_r+0xfc8>
    80e4:	3800b31e 	bne	r7,zero,83b4 <___vfiprintf_internal_r+0xec0>
    80e8:	0009883a 	mov	r4,zero
    80ec:	300b883a 	mov	r5,r6
    80f0:	d811883a 	mov	r8,sp
    80f4:	01802004 	movi	r6,128
    80f8:	19be5226 	beq	r3,r6,7a44 <__alt_data_end+0xfffd6d04>
    80fc:	8521c83a 	sub	r16,r16,r20
    8100:	043e790e 	bge	zero,r16,7ae8 <__alt_data_end+0xfffd6da8>
    8104:	05400404 	movi	r21,16
    8108:	ac01b00e 	bge	r21,r16,87cc <___vfiprintf_internal_r+0x12d8>
    810c:	01400074 	movhi	r5,1
    8110:	297bb904 	addi	r5,r5,-4380
    8114:	d9402315 	stw	r5,140(sp)
    8118:	070001c4 	movi	fp,7
    811c:	00000506 	br	8134 <___vfiprintf_internal_r+0xc40>
    8120:	21400084 	addi	r5,r4,2
    8124:	42000204 	addi	r8,r8,8
    8128:	1809883a 	mov	r4,r3
    812c:	843ffc04 	addi	r16,r16,-16
    8130:	ac000d0e 	bge	r21,r16,8168 <___vfiprintf_internal_r+0xc74>
    8134:	10800404 	addi	r2,r2,16
    8138:	20c00044 	addi	r3,r4,1
    813c:	44800015 	stw	r18,0(r8)
    8140:	45400115 	stw	r21,4(r8)
    8144:	d8801c15 	stw	r2,112(sp)
    8148:	d8c01b15 	stw	r3,108(sp)
    814c:	e0fff40e 	bge	fp,r3,8120 <__alt_data_end+0xfffd73e0>
    8150:	1000101e 	bne	r2,zero,8194 <___vfiprintf_internal_r+0xca0>
    8154:	843ffc04 	addi	r16,r16,-16
    8158:	01400044 	movi	r5,1
    815c:	0009883a 	mov	r4,zero
    8160:	d811883a 	mov	r8,sp
    8164:	ac3ff316 	blt	r21,r16,8134 <__alt_data_end+0xfffd73f4>
    8168:	d8c02317 	ldw	r3,140(sp)
    816c:	1405883a 	add	r2,r2,r16
    8170:	44000115 	stw	r16,4(r8)
    8174:	40c00015 	stw	r3,0(r8)
    8178:	d8801c15 	stw	r2,112(sp)
    817c:	d9401b15 	stw	r5,108(sp)
    8180:	00c001c4 	movi	r3,7
    8184:	19401916 	blt	r3,r5,81ec <___vfiprintf_internal_r+0xcf8>
    8188:	42000204 	addi	r8,r8,8
    818c:	29400044 	addi	r5,r5,1
    8190:	003e5506 	br	7ae8 <__alt_data_end+0xfffd6da8>
    8194:	d9402017 	ldw	r5,128(sp)
    8198:	d9002117 	ldw	r4,132(sp)
    819c:	d9801a04 	addi	r6,sp,104
    81a0:	00073e00 	call	73e0 <__sprint_r.part.0>
    81a4:	10000b1e 	bne	r2,zero,81d4 <___vfiprintf_internal_r+0xce0>
    81a8:	d9001b17 	ldw	r4,108(sp)
    81ac:	d8801c17 	ldw	r2,112(sp)
    81b0:	d811883a 	mov	r8,sp
    81b4:	21400044 	addi	r5,r4,1
    81b8:	003fdc06 	br	812c <__alt_data_end+0xfffd73ec>
    81bc:	d8801c17 	ldw	r2,112(sp)
    81c0:	10000426 	beq	r2,zero,81d4 <___vfiprintf_internal_r+0xce0>
    81c4:	d9402017 	ldw	r5,128(sp)
    81c8:	d9002117 	ldw	r4,132(sp)
    81cc:	d9801a04 	addi	r6,sp,104
    81d0:	00073e00 	call	73e0 <__sprint_r.part.0>
    81d4:	d9402017 	ldw	r5,128(sp)
    81d8:	2880030b 	ldhu	r2,12(r5)
    81dc:	1080100c 	andi	r2,r2,64
    81e0:	10014d1e 	bne	r2,zero,8718 <___vfiprintf_internal_r+0x1224>
    81e4:	d8802417 	ldw	r2,144(sp)
    81e8:	003d9706 	br	7848 <__alt_data_end+0xfffd6b08>
    81ec:	1000d21e 	bne	r2,zero,8538 <___vfiprintf_internal_r+0x1044>
    81f0:	00c00044 	movi	r3,1
    81f4:	a005883a 	mov	r2,r20
    81f8:	ddc00015 	stw	r23,0(sp)
    81fc:	dd000115 	stw	r20,4(sp)
    8200:	dd001c15 	stw	r20,112(sp)
    8204:	d8c01b15 	stw	r3,108(sp)
    8208:	d811883a 	mov	r8,sp
    820c:	42000204 	addi	r8,r8,8
    8210:	8c40010c 	andi	r17,r17,4
    8214:	88004026 	beq	r17,zero,8318 <___vfiprintf_internal_r+0xe24>
    8218:	d9002517 	ldw	r4,148(sp)
    821c:	24e3c83a 	sub	r17,r4,r19
    8220:	04403d0e 	bge	zero,r17,8318 <___vfiprintf_internal_r+0xe24>
    8224:	04000404 	movi	r16,16
    8228:	8441a90e 	bge	r16,r17,88d0 <___vfiprintf_internal_r+0x13dc>
    822c:	00c00074 	movhi	r3,1
    8230:	18fbbd04 	addi	r3,r3,-4364
    8234:	d9001b17 	ldw	r4,108(sp)
    8238:	d8c02315 	stw	r3,140(sp)
    823c:	050001c4 	movi	r20,7
    8240:	dd402117 	ldw	r21,132(sp)
    8244:	ddc02017 	ldw	r23,128(sp)
    8248:	00000506 	br	8260 <___vfiprintf_internal_r+0xd6c>
    824c:	21400084 	addi	r5,r4,2
    8250:	42000204 	addi	r8,r8,8
    8254:	1809883a 	mov	r4,r3
    8258:	8c7ffc04 	addi	r17,r17,-16
    825c:	84400f0e 	bge	r16,r17,829c <___vfiprintf_internal_r+0xda8>
    8260:	01400074 	movhi	r5,1
    8264:	10800404 	addi	r2,r2,16
    8268:	20c00044 	addi	r3,r4,1
    826c:	297bbd04 	addi	r5,r5,-4364
    8270:	41400015 	stw	r5,0(r8)
    8274:	44000115 	stw	r16,4(r8)
    8278:	d8801c15 	stw	r2,112(sp)
    827c:	d8c01b15 	stw	r3,108(sp)
    8280:	a0fff20e 	bge	r20,r3,824c <__alt_data_end+0xfffd750c>
    8284:	1000141e 	bne	r2,zero,82d8 <___vfiprintf_internal_r+0xde4>
    8288:	8c7ffc04 	addi	r17,r17,-16
    828c:	01400044 	movi	r5,1
    8290:	0009883a 	mov	r4,zero
    8294:	d811883a 	mov	r8,sp
    8298:	847ff116 	blt	r16,r17,8260 <__alt_data_end+0xfffd7520>
    829c:	d8c02317 	ldw	r3,140(sp)
    82a0:	1445883a 	add	r2,r2,r17
    82a4:	44400115 	stw	r17,4(r8)
    82a8:	40c00015 	stw	r3,0(r8)
    82ac:	d8801c15 	stw	r2,112(sp)
    82b0:	d9401b15 	stw	r5,108(sp)
    82b4:	00c001c4 	movi	r3,7
    82b8:	1940170e 	bge	r3,r5,8318 <___vfiprintf_internal_r+0xe24>
    82bc:	1000101e 	bne	r2,zero,8300 <___vfiprintf_internal_r+0xe0c>
    82c0:	d8802517 	ldw	r2,148(sp)
    82c4:	14c11616 	blt	r2,r19,8720 <___vfiprintf_internal_r+0x122c>
    82c8:	d9002417 	ldw	r4,144(sp)
    82cc:	2089883a 	add	r4,r4,r2
    82d0:	d9002415 	stw	r4,144(sp)
    82d4:	003e1806 	br	7b38 <__alt_data_end+0xfffd6df8>
    82d8:	d9801a04 	addi	r6,sp,104
    82dc:	b80b883a 	mov	r5,r23
    82e0:	a809883a 	mov	r4,r21
    82e4:	00073e00 	call	73e0 <__sprint_r.part.0>
    82e8:	103fba1e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    82ec:	d9001b17 	ldw	r4,108(sp)
    82f0:	d8801c17 	ldw	r2,112(sp)
    82f4:	d811883a 	mov	r8,sp
    82f8:	21400044 	addi	r5,r4,1
    82fc:	003fd606 	br	8258 <__alt_data_end+0xfffd7518>
    8300:	d9402017 	ldw	r5,128(sp)
    8304:	d9002117 	ldw	r4,132(sp)
    8308:	d9801a04 	addi	r6,sp,104
    830c:	00073e00 	call	73e0 <__sprint_r.part.0>
    8310:	103fb01e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8314:	d8801c17 	ldw	r2,112(sp)
    8318:	d8c02517 	ldw	r3,148(sp)
    831c:	1cc0010e 	bge	r3,r19,8324 <___vfiprintf_internal_r+0xe30>
    8320:	9807883a 	mov	r3,r19
    8324:	d9002417 	ldw	r4,144(sp)
    8328:	20c9883a 	add	r4,r4,r3
    832c:	d9002415 	stw	r4,144(sp)
    8330:	103e0126 	beq	r2,zero,7b38 <__alt_data_end+0xfffd6df8>
    8334:	d9402017 	ldw	r5,128(sp)
    8338:	d9002117 	ldw	r4,132(sp)
    833c:	d9801a04 	addi	r6,sp,104
    8340:	00073e00 	call	73e0 <__sprint_r.part.0>
    8344:	103dfc26 	beq	r2,zero,7b38 <__alt_data_end+0xfffd6df8>
    8348:	003fa206 	br	81d4 <__alt_data_end+0xfffd7494>
    834c:	d9402017 	ldw	r5,128(sp)
    8350:	d9002117 	ldw	r4,132(sp)
    8354:	d9801a04 	addi	r6,sp,104
    8358:	d9c02b15 	stw	r7,172(sp)
    835c:	00073e00 	call	73e0 <__sprint_r.part.0>
    8360:	d9c02b17 	ldw	r7,172(sp)
    8364:	103f9b1e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8368:	d9001b17 	ldw	r4,108(sp)
    836c:	d8801c17 	ldw	r2,112(sp)
    8370:	d811883a 	mov	r8,sp
    8374:	21800044 	addi	r6,r4,1
    8378:	003dbf06 	br	7a78 <__alt_data_end+0xfffd6d38>
    837c:	1000d81e 	bne	r2,zero,86e0 <___vfiprintf_internal_r+0x11ec>
    8380:	d9001d87 	ldb	r4,118(sp)
    8384:	20000a26 	beq	r4,zero,83b0 <___vfiprintf_internal_r+0xebc>
    8388:	00800044 	movi	r2,1
    838c:	d9001d84 	addi	r4,sp,118
    8390:	100b883a 	mov	r5,r2
    8394:	d9000015 	stw	r4,0(sp)
    8398:	d8800115 	stw	r2,4(sp)
    839c:	d811883a 	mov	r8,sp
    83a0:	2809883a 	mov	r4,r5
    83a4:	42000204 	addi	r8,r8,8
    83a8:	29400044 	addi	r5,r5,1
    83ac:	003d9506 	br	7a04 <__alt_data_end+0xfffd6cc4>
    83b0:	3800fd26 	beq	r7,zero,87a8 <___vfiprintf_internal_r+0x12b4>
    83b4:	00800084 	movi	r2,2
    83b8:	d9001d04 	addi	r4,sp,116
    83bc:	d9000015 	stw	r4,0(sp)
    83c0:	d8800115 	stw	r2,4(sp)
    83c4:	01400044 	movi	r5,1
    83c8:	d811883a 	mov	r8,sp
    83cc:	2809883a 	mov	r4,r5
    83d0:	42000204 	addi	r8,r8,8
    83d4:	29400044 	addi	r5,r5,1
    83d8:	003f4606 	br	80f4 <__alt_data_end+0xfffd73b4>
    83dc:	d8802517 	ldw	r2,148(sp)
    83e0:	14c0010e 	bge	r2,r19,83e8 <___vfiprintf_internal_r+0xef4>
    83e4:	9805883a 	mov	r2,r19
    83e8:	d9402417 	ldw	r5,144(sp)
    83ec:	288b883a 	add	r5,r5,r2
    83f0:	d9402415 	stw	r5,144(sp)
    83f4:	003dd006 	br	7b38 <__alt_data_end+0xfffd6df8>
    83f8:	d8001d85 	stb	zero,118(sp)
    83fc:	80005d16 	blt	r16,zero,8574 <___vfiprintf_internal_r+0x1080>
    8400:	00ffdfc4 	movi	r3,-129
    8404:	9d04b03a 	or	r2,r19,r20
    8408:	88e2703a 	and	r17,r17,r3
    840c:	103d3726 	beq	r2,zero,78ec <__alt_data_end+0xfffd6bac>
    8410:	002b883a 	mov	r21,zero
    8414:	d9002617 	ldw	r4,152(sp)
    8418:	ddc01a04 	addi	r23,sp,104
    841c:	988003cc 	andi	r2,r19,15
    8420:	a006973a 	slli	r3,r20,28
    8424:	2085883a 	add	r2,r4,r2
    8428:	9826d13a 	srli	r19,r19,4
    842c:	10800003 	ldbu	r2,0(r2)
    8430:	a028d13a 	srli	r20,r20,4
    8434:	bdffffc4 	addi	r23,r23,-1
    8438:	1ce6b03a 	or	r19,r3,r19
    843c:	b8800005 	stb	r2,0(r23)
    8440:	9d04b03a 	or	r2,r19,r20
    8444:	103ff51e 	bne	r2,zero,841c <__alt_data_end+0xfffd76dc>
    8448:	d8801e17 	ldw	r2,120(sp)
    844c:	15e9c83a 	sub	r20,r2,r23
    8450:	003d2b06 	br	7900 <__alt_data_end+0xfffd6bc0>
    8454:	d9402017 	ldw	r5,128(sp)
    8458:	d9002117 	ldw	r4,132(sp)
    845c:	d9801a04 	addi	r6,sp,104
    8460:	00073e00 	call	73e0 <__sprint_r.part.0>
    8464:	103f5b1e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8468:	d8801c17 	ldw	r2,112(sp)
    846c:	d811883a 	mov	r8,sp
    8470:	003f6706 	br	8210 <__alt_data_end+0xfffd74d0>
    8474:	d9402017 	ldw	r5,128(sp)
    8478:	d9002117 	ldw	r4,132(sp)
    847c:	d9801a04 	addi	r6,sp,104
    8480:	00073e00 	call	73e0 <__sprint_r.part.0>
    8484:	103f531e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8488:	d811883a 	mov	r8,sp
    848c:	003cd906 	br	77f4 <__alt_data_end+0xfffd6ab4>
    8490:	10803fcc 	andi	r2,r2,255
    8494:	1080201c 	xori	r2,r2,128
    8498:	10bfe004 	addi	r2,r2,-128
    849c:	00c00c04 	movi	r3,48
    84a0:	10ffe926 	beq	r2,r3,8448 <__alt_data_end+0xfffd7708>
    84a4:	b8ffffc5 	stb	r3,-1(r23)
    84a8:	d8c01e17 	ldw	r3,120(sp)
    84ac:	b8bfffc4 	addi	r2,r23,-1
    84b0:	102f883a 	mov	r23,r2
    84b4:	18a9c83a 	sub	r20,r3,r2
    84b8:	003d1106 	br	7900 <__alt_data_end+0xfffd6bc0>
    84bc:	d9402017 	ldw	r5,128(sp)
    84c0:	d9002117 	ldw	r4,132(sp)
    84c4:	d9801a04 	addi	r6,sp,104
    84c8:	d8c02a15 	stw	r3,168(sp)
    84cc:	d9c02b15 	stw	r7,172(sp)
    84d0:	00073e00 	call	73e0 <__sprint_r.part.0>
    84d4:	d8c02a17 	ldw	r3,168(sp)
    84d8:	d9c02b17 	ldw	r7,172(sp)
    84dc:	103f3d1e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    84e0:	d9001b17 	ldw	r4,108(sp)
    84e4:	d8801c17 	ldw	r2,112(sp)
    84e8:	d811883a 	mov	r8,sp
    84ec:	21400044 	addi	r5,r4,1
    84f0:	003d4406 	br	7a04 <__alt_data_end+0xfffd6cc4>
    84f4:	d9402017 	ldw	r5,128(sp)
    84f8:	d9002117 	ldw	r4,132(sp)
    84fc:	d9801a04 	addi	r6,sp,104
    8500:	d8c02a15 	stw	r3,168(sp)
    8504:	00073e00 	call	73e0 <__sprint_r.part.0>
    8508:	d8c02a17 	ldw	r3,168(sp)
    850c:	103f311e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8510:	d9001b17 	ldw	r4,108(sp)
    8514:	d8801c17 	ldw	r2,112(sp)
    8518:	d811883a 	mov	r8,sp
    851c:	21400044 	addi	r5,r4,1
    8520:	003ef406 	br	80f4 <__alt_data_end+0xfffd73b4>
    8524:	1000bd1e 	bne	r2,zero,881c <___vfiprintf_internal_r+0x1328>
    8528:	01400044 	movi	r5,1
    852c:	0009883a 	mov	r4,zero
    8530:	d811883a 	mov	r8,sp
    8534:	003ef106 	br	80fc <__alt_data_end+0xfffd73bc>
    8538:	d9402017 	ldw	r5,128(sp)
    853c:	d9002117 	ldw	r4,132(sp)
    8540:	d9801a04 	addi	r6,sp,104
    8544:	00073e00 	call	73e0 <__sprint_r.part.0>
    8548:	103f221e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    854c:	d9401b17 	ldw	r5,108(sp)
    8550:	d8801c17 	ldw	r2,112(sp)
    8554:	d811883a 	mov	r8,sp
    8558:	29400044 	addi	r5,r5,1
    855c:	003d6206 	br	7ae8 <__alt_data_end+0xfffd6da8>
    8560:	01400074 	movhi	r5,1
    8564:	297b5804 	addi	r5,r5,-4768
    8568:	d9402615 	stw	r5,152(sp)
    856c:	d8c02215 	stw	r3,136(sp)
    8570:	1023883a 	mov	r17,r2
    8574:	9d04b03a 	or	r2,r19,r20
    8578:	103fa51e 	bne	r2,zero,8410 <__alt_data_end+0xfffd76d0>
    857c:	002b883a 	mov	r21,zero
    8580:	00800084 	movi	r2,2
    8584:	003e4a06 	br	7eb0 <__alt_data_end+0xfffd7170>
    8588:	01400074 	movhi	r5,1
    858c:	297b5804 	addi	r5,r5,-4768
    8590:	002b883a 	mov	r21,zero
    8594:	d9402615 	stw	r5,152(sp)
    8598:	003f9e06 	br	8414 <__alt_data_end+0xfffd76d4>
    859c:	d9402217 	ldw	r5,136(sp)
    85a0:	d8001d85 	stb	zero,118(sp)
    85a4:	0029883a 	mov	r20,zero
    85a8:	28800104 	addi	r2,r5,4
    85ac:	2cc00017 	ldw	r19,0(r5)
    85b0:	803e3a16 	blt	r16,zero,7e9c <__alt_data_end+0xfffd715c>
    85b4:	00ffdfc4 	movi	r3,-129
    85b8:	d8802215 	stw	r2,136(sp)
    85bc:	88e2703a 	and	r17,r17,r3
    85c0:	002b883a 	mov	r21,zero
    85c4:	983e9b26 	beq	r19,zero,8034 <__alt_data_end+0xfffd72f4>
    85c8:	00800244 	movi	r2,9
    85cc:	14fdc936 	bltu	r2,r19,7cf4 <__alt_data_end+0xfffd6fb4>
    85d0:	003e9a06 	br	803c <__alt_data_end+0xfffd72fc>
    85d4:	00800c04 	movi	r2,48
    85d8:	d8c01d45 	stb	r3,117(sp)
    85dc:	d8801d05 	stb	r2,116(sp)
    85e0:	d8001d85 	stb	zero,118(sp)
    85e4:	88c00094 	ori	r3,r17,2
    85e8:	80009c16 	blt	r16,zero,885c <___vfiprintf_internal_r+0x1368>
    85ec:	00bfdfc4 	movi	r2,-129
    85f0:	88a2703a 	and	r17,r17,r2
    85f4:	8c400094 	ori	r17,r17,2
    85f8:	002b883a 	mov	r21,zero
    85fc:	003f8506 	br	8414 <__alt_data_end+0xfffd76d4>
    8600:	b029883a 	mov	r20,r22
    8604:	003c0b06 	br	7634 <__alt_data_end+0xfffd68f4>
    8608:	04e7c83a 	sub	r19,zero,r19
    860c:	05400b44 	movi	r21,45
    8610:	9804c03a 	cmpne	r2,r19,zero
    8614:	0529c83a 	sub	r20,zero,r20
    8618:	dd401d85 	stb	r21,118(sp)
    861c:	a0a9c83a 	sub	r20,r20,r2
    8620:	80009716 	blt	r16,zero,8880 <___vfiprintf_internal_r+0x138c>
    8624:	00bfdfc4 	movi	r2,-129
    8628:	88a2703a 	and	r17,r17,r2
    862c:	003db006 	br	7cf0 <__alt_data_end+0xfffd6fb0>
    8630:	b0c00007 	ldb	r3,0(r22)
    8634:	003c0c06 	br	7668 <__alt_data_end+0xfffd6928>
    8638:	8880100c 	andi	r2,r17,64
    863c:	d8001d85 	stb	zero,118(sp)
    8640:	1000461e 	bne	r2,zero,875c <___vfiprintf_internal_r+0x1268>
    8644:	d9002217 	ldw	r4,136(sp)
    8648:	0029883a 	mov	r20,zero
    864c:	20800104 	addi	r2,r4,4
    8650:	24c00017 	ldw	r19,0(r4)
    8654:	803df80e 	bge	r16,zero,7e38 <__alt_data_end+0xfffd70f8>
    8658:	9d06b03a 	or	r3,r19,r20
    865c:	d8802215 	stw	r2,136(sp)
    8660:	183d5e1e 	bne	r3,zero,7bdc <__alt_data_end+0xfffd6e9c>
    8664:	002b883a 	mov	r21,zero
    8668:	0005883a 	mov	r2,zero
    866c:	003e1006 	br	7eb0 <__alt_data_end+0xfffd7170>
    8670:	8880040c 	andi	r2,r17,16
    8674:	1000321e 	bne	r2,zero,8740 <___vfiprintf_internal_r+0x124c>
    8678:	8c40100c 	andi	r17,r17,64
    867c:	88008d26 	beq	r17,zero,88b4 <___vfiprintf_internal_r+0x13c0>
    8680:	d9402217 	ldw	r5,136(sp)
    8684:	d8c02417 	ldw	r3,144(sp)
    8688:	28800017 	ldw	r2,0(r5)
    868c:	29400104 	addi	r5,r5,4
    8690:	d9402215 	stw	r5,136(sp)
    8694:	10c0000d 	sth	r3,0(r2)
    8698:	003bca06 	br	75c4 <__alt_data_end+0xfffd6884>
    869c:	8880100c 	andi	r2,r17,64
    86a0:	10003a26 	beq	r2,zero,878c <___vfiprintf_internal_r+0x1298>
    86a4:	d8802217 	ldw	r2,136(sp)
    86a8:	14c0000f 	ldh	r19,0(r2)
    86ac:	10800104 	addi	r2,r2,4
    86b0:	d8802215 	stw	r2,136(sp)
    86b4:	9829d7fa 	srai	r20,r19,31
    86b8:	a005883a 	mov	r2,r20
    86bc:	003d8506 	br	7cd4 <__alt_data_end+0xfffd6f94>
    86c0:	8880100c 	andi	r2,r17,64
    86c4:	10002b26 	beq	r2,zero,8774 <___vfiprintf_internal_r+0x1280>
    86c8:	d8802217 	ldw	r2,136(sp)
    86cc:	0029883a 	mov	r20,zero
    86d0:	14c0000b 	ldhu	r19,0(r2)
    86d4:	10800104 	addi	r2,r2,4
    86d8:	d8802215 	stw	r2,136(sp)
    86dc:	003d5d06 	br	7c54 <__alt_data_end+0xfffd6f14>
    86e0:	d9402017 	ldw	r5,128(sp)
    86e4:	d9002117 	ldw	r4,132(sp)
    86e8:	d9801a04 	addi	r6,sp,104
    86ec:	d8c02a15 	stw	r3,168(sp)
    86f0:	d9c02b15 	stw	r7,172(sp)
    86f4:	00073e00 	call	73e0 <__sprint_r.part.0>
    86f8:	d8c02a17 	ldw	r3,168(sp)
    86fc:	d9c02b17 	ldw	r7,172(sp)
    8700:	103eb41e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8704:	d9001b17 	ldw	r4,108(sp)
    8708:	d8801c17 	ldw	r2,112(sp)
    870c:	d811883a 	mov	r8,sp
    8710:	21400044 	addi	r5,r4,1
    8714:	003e6706 	br	80b4 <__alt_data_end+0xfffd7374>
    8718:	00bfffc4 	movi	r2,-1
    871c:	003c4a06 	br	7848 <__alt_data_end+0xfffd6b08>
    8720:	9805883a 	mov	r2,r19
    8724:	003ee806 	br	82c8 <__alt_data_end+0xfffd7588>
    8728:	d8c02217 	ldw	r3,136(sp)
    872c:	0029883a 	mov	r20,zero
    8730:	18800104 	addi	r2,r3,4
    8734:	1cc0000b 	ldhu	r19,0(r3)
    8738:	803f9e0e 	bge	r16,zero,85b4 <__alt_data_end+0xfffd7874>
    873c:	003dd706 	br	7e9c <__alt_data_end+0xfffd715c>
    8740:	d8c02217 	ldw	r3,136(sp)
    8744:	d9002417 	ldw	r4,144(sp)
    8748:	18800017 	ldw	r2,0(r3)
    874c:	18c00104 	addi	r3,r3,4
    8750:	d8c02215 	stw	r3,136(sp)
    8754:	11000015 	stw	r4,0(r2)
    8758:	003b9a06 	br	75c4 <__alt_data_end+0xfffd6884>
    875c:	d8c02217 	ldw	r3,136(sp)
    8760:	0029883a 	mov	r20,zero
    8764:	18800104 	addi	r2,r3,4
    8768:	1cc0000b 	ldhu	r19,0(r3)
    876c:	803db20e 	bge	r16,zero,7e38 <__alt_data_end+0xfffd70f8>
    8770:	003fb906 	br	8658 <__alt_data_end+0xfffd7918>
    8774:	d9002217 	ldw	r4,136(sp)
    8778:	0029883a 	mov	r20,zero
    877c:	24c00017 	ldw	r19,0(r4)
    8780:	21000104 	addi	r4,r4,4
    8784:	d9002215 	stw	r4,136(sp)
    8788:	003d3206 	br	7c54 <__alt_data_end+0xfffd6f14>
    878c:	d8c02217 	ldw	r3,136(sp)
    8790:	1cc00017 	ldw	r19,0(r3)
    8794:	18c00104 	addi	r3,r3,4
    8798:	d8c02215 	stw	r3,136(sp)
    879c:	9829d7fa 	srai	r20,r19,31
    87a0:	a005883a 	mov	r2,r20
    87a4:	003d4b06 	br	7cd4 <__alt_data_end+0xfffd6f94>
    87a8:	0009883a 	mov	r4,zero
    87ac:	01400044 	movi	r5,1
    87b0:	d811883a 	mov	r8,sp
    87b4:	003e4f06 	br	80f4 <__alt_data_end+0xfffd73b4>
    87b8:	d8c02215 	stw	r3,136(sp)
    87bc:	002b883a 	mov	r21,zero
    87c0:	003db806 	br	7ea4 <__alt_data_end+0xfffd7164>
    87c4:	d811883a 	mov	r8,sp
    87c8:	003e9606 	br	8224 <__alt_data_end+0xfffd74e4>
    87cc:	01000074 	movhi	r4,1
    87d0:	213bb904 	addi	r4,r4,-4380
    87d4:	d9002315 	stw	r4,140(sp)
    87d8:	003e6306 	br	8168 <__alt_data_end+0xfffd7428>
    87dc:	b0c00043 	ldbu	r3,1(r22)
    87e0:	8c400814 	ori	r17,r17,32
    87e4:	b5800044 	addi	r22,r22,1
    87e8:	18c03fcc 	andi	r3,r3,255
    87ec:	18c0201c 	xori	r3,r3,128
    87f0:	18ffe004 	addi	r3,r3,-128
    87f4:	003b9c06 	br	7668 <__alt_data_end+0xfffd6928>
    87f8:	b809883a 	mov	r4,r23
    87fc:	da002a15 	stw	r8,168(sp)
    8800:	00073480 	call	7348 <strlen>
    8804:	1029883a 	mov	r20,r2
    8808:	dd401d83 	ldbu	r21,118(sp)
    880c:	df002215 	stw	fp,136(sp)
    8810:	0021883a 	mov	r16,zero
    8814:	da002a17 	ldw	r8,168(sp)
    8818:	003c3906 	br	7900 <__alt_data_end+0xfffd6bc0>
    881c:	d9402017 	ldw	r5,128(sp)
    8820:	d9002117 	ldw	r4,132(sp)
    8824:	d9801a04 	addi	r6,sp,104
    8828:	00073e00 	call	73e0 <__sprint_r.part.0>
    882c:	103e691e 	bne	r2,zero,81d4 <__alt_data_end+0xfffd7494>
    8830:	d9001b17 	ldw	r4,108(sp)
    8834:	d8801c17 	ldw	r2,112(sp)
    8838:	d811883a 	mov	r8,sp
    883c:	21400044 	addi	r5,r4,1
    8840:	003e2e06 	br	80fc <__alt_data_end+0xfffd73bc>
    8844:	01000074 	movhi	r4,1
    8848:	213bbd04 	addi	r4,r4,-4364
    884c:	d9002315 	stw	r4,140(sp)
    8850:	d9001b17 	ldw	r4,108(sp)
    8854:	21000044 	addi	r4,r4,1
    8858:	003c5e06 	br	79d4 <__alt_data_end+0xfffd6c94>
    885c:	002b883a 	mov	r21,zero
    8860:	00800084 	movi	r2,2
    8864:	10803fcc 	andi	r2,r2,255
    8868:	01000044 	movi	r4,1
    886c:	11002b26 	beq	r2,r4,891c <___vfiprintf_internal_r+0x1428>
    8870:	01000084 	movi	r4,2
    8874:	11002b1e 	bne	r2,r4,8924 <___vfiprintf_internal_r+0x1430>
    8878:	1823883a 	mov	r17,r3
    887c:	003ee506 	br	8414 <__alt_data_end+0xfffd76d4>
    8880:	8807883a 	mov	r3,r17
    8884:	00800044 	movi	r2,1
    8888:	003ff606 	br	8864 <__alt_data_end+0xfffd7b24>
    888c:	00800184 	movi	r2,6
    8890:	1400012e 	bgeu	r2,r16,8898 <___vfiprintf_internal_r+0x13a4>
    8894:	1021883a 	mov	r16,r2
    8898:	8029883a 	mov	r20,r16
    889c:	8027883a 	mov	r19,r16
    88a0:	80002216 	blt	r16,zero,892c <___vfiprintf_internal_r+0x1438>
    88a4:	05c00074 	movhi	r23,1
    88a8:	df002215 	stw	fp,136(sp)
    88ac:	bdfb5d04 	addi	r23,r23,-4748
    88b0:	003cfb06 	br	7ca0 <__alt_data_end+0xfffd6f60>
    88b4:	d9002217 	ldw	r4,136(sp)
    88b8:	d9402417 	ldw	r5,144(sp)
    88bc:	20800017 	ldw	r2,0(r4)
    88c0:	21000104 	addi	r4,r4,4
    88c4:	d9002215 	stw	r4,136(sp)
    88c8:	11400015 	stw	r5,0(r2)
    88cc:	003b3d06 	br	75c4 <__alt_data_end+0xfffd6884>
    88d0:	01400074 	movhi	r5,1
    88d4:	297bbd04 	addi	r5,r5,-4364
    88d8:	d9402315 	stw	r5,140(sp)
    88dc:	d9401b17 	ldw	r5,108(sp)
    88e0:	29400044 	addi	r5,r5,1
    88e4:	003e6d06 	br	829c <__alt_data_end+0xfffd755c>
    88e8:	8029883a 	mov	r20,r16
    88ec:	dd401d83 	ldbu	r21,118(sp)
    88f0:	df002215 	stw	fp,136(sp)
    88f4:	0021883a 	mov	r16,zero
    88f8:	003c0106 	br	7900 <__alt_data_end+0xfffd6bc0>
    88fc:	00c00074 	movhi	r3,1
    8900:	18fbb904 	addi	r3,r3,-4380
    8904:	d8c02315 	stw	r3,140(sp)
    8908:	280d883a 	mov	r6,r5
    890c:	003c6906 	br	7ab4 <__alt_data_end+0xfffd6d74>
    8910:	802d883a 	mov	r22,r16
    8914:	0021883a 	mov	r16,zero
    8918:	003b5406 	br	766c <__alt_data_end+0xfffd692c>
    891c:	1823883a 	mov	r17,r3
    8920:	003cf306 	br	7cf0 <__alt_data_end+0xfffd6fb0>
    8924:	1823883a 	mov	r17,r3
    8928:	003cad06 	br	7be0 <__alt_data_end+0xfffd6ea0>
    892c:	0027883a 	mov	r19,zero
    8930:	003fdc06 	br	88a4 <__alt_data_end+0xfffd7b64>
    8934:	d9402217 	ldw	r5,136(sp)
    8938:	8005883a 	mov	r2,r16
    893c:	b0c00043 	ldbu	r3,1(r22)
    8940:	2c000017 	ldw	r16,0(r5)
    8944:	29000104 	addi	r4,r5,4
    8948:	d9002215 	stw	r4,136(sp)
    894c:	102d883a 	mov	r22,r2
    8950:	803fa50e 	bge	r16,zero,87e8 <__alt_data_end+0xfffd7aa8>
    8954:	18c03fcc 	andi	r3,r3,255
    8958:	18c0201c 	xori	r3,r3,128
    895c:	043fffc4 	movi	r16,-1
    8960:	18ffe004 	addi	r3,r3,-128
    8964:	003b4006 	br	7668 <__alt_data_end+0xfffd6928>
    8968:	d9402303 	ldbu	r5,140(sp)
    896c:	d9401d85 	stb	r5,118(sp)
    8970:	003cae06 	br	7c2c <__alt_data_end+0xfffd6eec>
    8974:	d8c02303 	ldbu	r3,140(sp)
    8978:	d8c01d85 	stb	r3,118(sp)
    897c:	003d1406 	br	7dd0 <__alt_data_end+0xfffd7090>
    8980:	d8c02303 	ldbu	r3,140(sp)
    8984:	d8c01d85 	stb	r3,118(sp)
    8988:	003cca06 	br	7cb4 <__alt_data_end+0xfffd6f74>
    898c:	8880004c 	andi	r2,r17,1
    8990:	002b883a 	mov	r21,zero
    8994:	10000526 	beq	r2,zero,89ac <___vfiprintf_internal_r+0x14b8>
    8998:	00800c04 	movi	r2,48
    899c:	d88019c5 	stb	r2,103(sp)
    89a0:	dd002817 	ldw	r20,160(sp)
    89a4:	ddc019c4 	addi	r23,sp,103
    89a8:	003bd506 	br	7900 <__alt_data_end+0xfffd6bc0>
    89ac:	0029883a 	mov	r20,zero
    89b0:	ddc01a04 	addi	r23,sp,104
    89b4:	003bd206 	br	7900 <__alt_data_end+0xfffd6bc0>
    89b8:	d9002303 	ldbu	r4,140(sp)
    89bc:	d9001d85 	stb	r4,118(sp)
    89c0:	003da606 	br	805c <__alt_data_end+0xfffd731c>
    89c4:	d8c02303 	ldbu	r3,140(sp)
    89c8:	d8c01d85 	stb	r3,118(sp)
    89cc:	003c7606 	br	7ba8 <__alt_data_end+0xfffd6e68>
    89d0:	d8c02303 	ldbu	r3,140(sp)
    89d4:	d8c01d85 	stb	r3,118(sp)
    89d8:	003c6506 	br	7b70 <__alt_data_end+0xfffd6e30>
    89dc:	d9002303 	ldbu	r4,140(sp)
    89e0:	d9001d85 	stb	r4,118(sp)
    89e4:	003d3d06 	br	7edc <__alt_data_end+0xfffd719c>
    89e8:	d8c02303 	ldbu	r3,140(sp)
    89ec:	d8c01d85 	stb	r3,118(sp)
    89f0:	003d1d06 	br	7e68 <__alt_data_end+0xfffd7128>
    89f4:	d8c02303 	ldbu	r3,140(sp)
    89f8:	d8c01d85 	stb	r3,118(sp)
    89fc:	003d0306 	br	7e0c <__alt_data_end+0xfffd70cc>

00008a00 <__vfiprintf_internal>:
    8a00:	00800074 	movhi	r2,1
    8a04:	1082c704 	addi	r2,r2,2844
    8a08:	300f883a 	mov	r7,r6
    8a0c:	280d883a 	mov	r6,r5
    8a10:	200b883a 	mov	r5,r4
    8a14:	11000017 	ldw	r4,0(r2)
    8a18:	00074f41 	jmpi	74f4 <___vfiprintf_internal_r>

00008a1c <__sbprintf>:
    8a1c:	2880030b 	ldhu	r2,12(r5)
    8a20:	2ac01917 	ldw	r11,100(r5)
    8a24:	2a80038b 	ldhu	r10,14(r5)
    8a28:	2a400717 	ldw	r9,28(r5)
    8a2c:	2a000917 	ldw	r8,36(r5)
    8a30:	defee204 	addi	sp,sp,-1144
    8a34:	00c10004 	movi	r3,1024
    8a38:	dc011a15 	stw	r16,1128(sp)
    8a3c:	10bfff4c 	andi	r2,r2,65533
    8a40:	2821883a 	mov	r16,r5
    8a44:	d8cb883a 	add	r5,sp,r3
    8a48:	dc811c15 	stw	r18,1136(sp)
    8a4c:	dc411b15 	stw	r17,1132(sp)
    8a50:	dfc11d15 	stw	ra,1140(sp)
    8a54:	2025883a 	mov	r18,r4
    8a58:	d881030d 	sth	r2,1036(sp)
    8a5c:	dac11915 	stw	r11,1124(sp)
    8a60:	da81038d 	sth	r10,1038(sp)
    8a64:	da410715 	stw	r9,1052(sp)
    8a68:	da010915 	stw	r8,1060(sp)
    8a6c:	dec10015 	stw	sp,1024(sp)
    8a70:	dec10415 	stw	sp,1040(sp)
    8a74:	d8c10215 	stw	r3,1032(sp)
    8a78:	d8c10515 	stw	r3,1044(sp)
    8a7c:	d8010615 	stw	zero,1048(sp)
    8a80:	00074f40 	call	74f4 <___vfiprintf_internal_r>
    8a84:	1023883a 	mov	r17,r2
    8a88:	10000416 	blt	r2,zero,8a9c <__sbprintf+0x80>
    8a8c:	d9410004 	addi	r5,sp,1024
    8a90:	9009883a 	mov	r4,r18
    8a94:	00047c00 	call	47c0 <_fflush_r>
    8a98:	10000d1e 	bne	r2,zero,8ad0 <__sbprintf+0xb4>
    8a9c:	d881030b 	ldhu	r2,1036(sp)
    8aa0:	1080100c 	andi	r2,r2,64
    8aa4:	10000326 	beq	r2,zero,8ab4 <__sbprintf+0x98>
    8aa8:	8080030b 	ldhu	r2,12(r16)
    8aac:	10801014 	ori	r2,r2,64
    8ab0:	8080030d 	sth	r2,12(r16)
    8ab4:	8805883a 	mov	r2,r17
    8ab8:	dfc11d17 	ldw	ra,1140(sp)
    8abc:	dc811c17 	ldw	r18,1136(sp)
    8ac0:	dc411b17 	ldw	r17,1132(sp)
    8ac4:	dc011a17 	ldw	r16,1128(sp)
    8ac8:	dec11e04 	addi	sp,sp,1144
    8acc:	f800283a 	ret
    8ad0:	047fffc4 	movi	r17,-1
    8ad4:	003ff106 	br	8a9c <__alt_data_end+0xfffd7d5c>

00008ad8 <_write_r>:
    8ad8:	defffd04 	addi	sp,sp,-12
    8adc:	2805883a 	mov	r2,r5
    8ae0:	dc000015 	stw	r16,0(sp)
    8ae4:	04000074 	movhi	r16,1
    8ae8:	dc400115 	stw	r17,4(sp)
    8aec:	300b883a 	mov	r5,r6
    8af0:	8409b704 	addi	r16,r16,9948
    8af4:	2023883a 	mov	r17,r4
    8af8:	380d883a 	mov	r6,r7
    8afc:	1009883a 	mov	r4,r2
    8b00:	dfc00215 	stw	ra,8(sp)
    8b04:	80000015 	stw	zero,0(r16)
    8b08:	000dd200 	call	dd20 <write>
    8b0c:	00ffffc4 	movi	r3,-1
    8b10:	10c00526 	beq	r2,r3,8b28 <_write_r+0x50>
    8b14:	dfc00217 	ldw	ra,8(sp)
    8b18:	dc400117 	ldw	r17,4(sp)
    8b1c:	dc000017 	ldw	r16,0(sp)
    8b20:	dec00304 	addi	sp,sp,12
    8b24:	f800283a 	ret
    8b28:	80c00017 	ldw	r3,0(r16)
    8b2c:	183ff926 	beq	r3,zero,8b14 <__alt_data_end+0xfffd7dd4>
    8b30:	88c00015 	stw	r3,0(r17)
    8b34:	003ff706 	br	8b14 <__alt_data_end+0xfffd7dd4>

00008b38 <_close_r>:
    8b38:	defffd04 	addi	sp,sp,-12
    8b3c:	dc000015 	stw	r16,0(sp)
    8b40:	04000074 	movhi	r16,1
    8b44:	dc400115 	stw	r17,4(sp)
    8b48:	8409b704 	addi	r16,r16,9948
    8b4c:	2023883a 	mov	r17,r4
    8b50:	2809883a 	mov	r4,r5
    8b54:	dfc00215 	stw	ra,8(sp)
    8b58:	80000015 	stw	zero,0(r16)
    8b5c:	000d4b80 	call	d4b8 <close>
    8b60:	00ffffc4 	movi	r3,-1
    8b64:	10c00526 	beq	r2,r3,8b7c <_close_r+0x44>
    8b68:	dfc00217 	ldw	ra,8(sp)
    8b6c:	dc400117 	ldw	r17,4(sp)
    8b70:	dc000017 	ldw	r16,0(sp)
    8b74:	dec00304 	addi	sp,sp,12
    8b78:	f800283a 	ret
    8b7c:	80c00017 	ldw	r3,0(r16)
    8b80:	183ff926 	beq	r3,zero,8b68 <__alt_data_end+0xfffd7e28>
    8b84:	88c00015 	stw	r3,0(r17)
    8b88:	003ff706 	br	8b68 <__alt_data_end+0xfffd7e28>

00008b8c <_calloc_r>:
    8b8c:	defffe04 	addi	sp,sp,-8
    8b90:	2805883a 	mov	r2,r5
    8b94:	dc000015 	stw	r16,0(sp)
    8b98:	300b883a 	mov	r5,r6
    8b9c:	2021883a 	mov	r16,r4
    8ba0:	1009883a 	mov	r4,r2
    8ba4:	dfc00115 	stw	ra,4(sp)
    8ba8:	000ab6c0 	call	ab6c <__mulsi3>
    8bac:	100b883a 	mov	r5,r2
    8bb0:	8009883a 	mov	r4,r16
    8bb4:	00054500 	call	5450 <_malloc_r>
    8bb8:	10002926 	beq	r2,zero,8c60 <_calloc_r+0xd4>
    8bbc:	11bfff17 	ldw	r6,-4(r2)
    8bc0:	1021883a 	mov	r16,r2
    8bc4:	00bfff04 	movi	r2,-4
    8bc8:	308c703a 	and	r6,r6,r2
    8bcc:	00c00904 	movi	r3,36
    8bd0:	308d883a 	add	r6,r6,r2
    8bd4:	19801636 	bltu	r3,r6,8c30 <_calloc_r+0xa4>
    8bd8:	008004c4 	movi	r2,19
    8bdc:	11800b2e 	bgeu	r2,r6,8c0c <_calloc_r+0x80>
    8be0:	80000015 	stw	zero,0(r16)
    8be4:	80000115 	stw	zero,4(r16)
    8be8:	008006c4 	movi	r2,27
    8bec:	11801a2e 	bgeu	r2,r6,8c58 <_calloc_r+0xcc>
    8bf0:	80000215 	stw	zero,8(r16)
    8bf4:	80000315 	stw	zero,12(r16)
    8bf8:	30c0151e 	bne	r6,r3,8c50 <_calloc_r+0xc4>
    8bfc:	80000415 	stw	zero,16(r16)
    8c00:	80800604 	addi	r2,r16,24
    8c04:	80000515 	stw	zero,20(r16)
    8c08:	00000106 	br	8c10 <_calloc_r+0x84>
    8c0c:	8005883a 	mov	r2,r16
    8c10:	10000015 	stw	zero,0(r2)
    8c14:	10000115 	stw	zero,4(r2)
    8c18:	10000215 	stw	zero,8(r2)
    8c1c:	8005883a 	mov	r2,r16
    8c20:	dfc00117 	ldw	ra,4(sp)
    8c24:	dc000017 	ldw	r16,0(sp)
    8c28:	dec00204 	addi	sp,sp,8
    8c2c:	f800283a 	ret
    8c30:	000b883a 	mov	r5,zero
    8c34:	8009883a 	mov	r4,r16
    8c38:	0005e880 	call	5e88 <memset>
    8c3c:	8005883a 	mov	r2,r16
    8c40:	dfc00117 	ldw	ra,4(sp)
    8c44:	dc000017 	ldw	r16,0(sp)
    8c48:	dec00204 	addi	sp,sp,8
    8c4c:	f800283a 	ret
    8c50:	80800404 	addi	r2,r16,16
    8c54:	003fee06 	br	8c10 <__alt_data_end+0xfffd7ed0>
    8c58:	80800204 	addi	r2,r16,8
    8c5c:	003fec06 	br	8c10 <__alt_data_end+0xfffd7ed0>
    8c60:	0005883a 	mov	r2,zero
    8c64:	003fee06 	br	8c20 <__alt_data_end+0xfffd7ee0>

00008c68 <_fclose_r>:
    8c68:	28003926 	beq	r5,zero,8d50 <_fclose_r+0xe8>
    8c6c:	defffc04 	addi	sp,sp,-16
    8c70:	dc400115 	stw	r17,4(sp)
    8c74:	dc000015 	stw	r16,0(sp)
    8c78:	dfc00315 	stw	ra,12(sp)
    8c7c:	dc800215 	stw	r18,8(sp)
    8c80:	2023883a 	mov	r17,r4
    8c84:	2821883a 	mov	r16,r5
    8c88:	20000226 	beq	r4,zero,8c94 <_fclose_r+0x2c>
    8c8c:	20800e17 	ldw	r2,56(r4)
    8c90:	10002726 	beq	r2,zero,8d30 <_fclose_r+0xc8>
    8c94:	8080030f 	ldh	r2,12(r16)
    8c98:	1000071e 	bne	r2,zero,8cb8 <_fclose_r+0x50>
    8c9c:	0005883a 	mov	r2,zero
    8ca0:	dfc00317 	ldw	ra,12(sp)
    8ca4:	dc800217 	ldw	r18,8(sp)
    8ca8:	dc400117 	ldw	r17,4(sp)
    8cac:	dc000017 	ldw	r16,0(sp)
    8cb0:	dec00404 	addi	sp,sp,16
    8cb4:	f800283a 	ret
    8cb8:	800b883a 	mov	r5,r16
    8cbc:	8809883a 	mov	r4,r17
    8cc0:	00045a40 	call	45a4 <__sflush_r>
    8cc4:	1025883a 	mov	r18,r2
    8cc8:	80800b17 	ldw	r2,44(r16)
    8ccc:	10000426 	beq	r2,zero,8ce0 <_fclose_r+0x78>
    8cd0:	81400717 	ldw	r5,28(r16)
    8cd4:	8809883a 	mov	r4,r17
    8cd8:	103ee83a 	callr	r2
    8cdc:	10001616 	blt	r2,zero,8d38 <_fclose_r+0xd0>
    8ce0:	8080030b 	ldhu	r2,12(r16)
    8ce4:	1080200c 	andi	r2,r2,128
    8ce8:	1000151e 	bne	r2,zero,8d40 <_fclose_r+0xd8>
    8cec:	81400c17 	ldw	r5,48(r16)
    8cf0:	28000526 	beq	r5,zero,8d08 <_fclose_r+0xa0>
    8cf4:	80801004 	addi	r2,r16,64
    8cf8:	28800226 	beq	r5,r2,8d04 <_fclose_r+0x9c>
    8cfc:	8809883a 	mov	r4,r17
    8d00:	0004d200 	call	4d20 <_free_r>
    8d04:	80000c15 	stw	zero,48(r16)
    8d08:	81401117 	ldw	r5,68(r16)
    8d0c:	28000326 	beq	r5,zero,8d1c <_fclose_r+0xb4>
    8d10:	8809883a 	mov	r4,r17
    8d14:	0004d200 	call	4d20 <_free_r>
    8d18:	80001115 	stw	zero,68(r16)
    8d1c:	0004bbc0 	call	4bbc <__sfp_lock_acquire>
    8d20:	8000030d 	sth	zero,12(r16)
    8d24:	0004bc00 	call	4bc0 <__sfp_lock_release>
    8d28:	9005883a 	mov	r2,r18
    8d2c:	003fdc06 	br	8ca0 <__alt_data_end+0xfffd7f60>
    8d30:	0004bac0 	call	4bac <__sinit>
    8d34:	003fd706 	br	8c94 <__alt_data_end+0xfffd7f54>
    8d38:	04bfffc4 	movi	r18,-1
    8d3c:	003fe806 	br	8ce0 <__alt_data_end+0xfffd7fa0>
    8d40:	81400417 	ldw	r5,16(r16)
    8d44:	8809883a 	mov	r4,r17
    8d48:	0004d200 	call	4d20 <_free_r>
    8d4c:	003fe706 	br	8cec <__alt_data_end+0xfffd7fac>
    8d50:	0005883a 	mov	r2,zero
    8d54:	f800283a 	ret

00008d58 <fclose>:
    8d58:	00800074 	movhi	r2,1
    8d5c:	1082c704 	addi	r2,r2,2844
    8d60:	200b883a 	mov	r5,r4
    8d64:	11000017 	ldw	r4,0(r2)
    8d68:	0008c681 	jmpi	8c68 <_fclose_r>

00008d6c <__fputwc>:
    8d6c:	defff804 	addi	sp,sp,-32
    8d70:	dcc00415 	stw	r19,16(sp)
    8d74:	dc800315 	stw	r18,12(sp)
    8d78:	dc000115 	stw	r16,4(sp)
    8d7c:	dfc00715 	stw	ra,28(sp)
    8d80:	dd400615 	stw	r21,24(sp)
    8d84:	dd000515 	stw	r20,20(sp)
    8d88:	dc400215 	stw	r17,8(sp)
    8d8c:	2027883a 	mov	r19,r4
    8d90:	2825883a 	mov	r18,r5
    8d94:	3021883a 	mov	r16,r6
    8d98:	00052400 	call	5240 <__locale_mb_cur_max>
    8d9c:	00c00044 	movi	r3,1
    8da0:	10c03e26 	beq	r2,r3,8e9c <__fputwc+0x130>
    8da4:	81c01704 	addi	r7,r16,92
    8da8:	900d883a 	mov	r6,r18
    8dac:	d80b883a 	mov	r5,sp
    8db0:	9809883a 	mov	r4,r19
    8db4:	0009dc40 	call	9dc4 <_wcrtomb_r>
    8db8:	1029883a 	mov	r20,r2
    8dbc:	00bfffc4 	movi	r2,-1
    8dc0:	a0802026 	beq	r20,r2,8e44 <__fputwc+0xd8>
    8dc4:	d9400003 	ldbu	r5,0(sp)
    8dc8:	a0001c26 	beq	r20,zero,8e3c <__fputwc+0xd0>
    8dcc:	0023883a 	mov	r17,zero
    8dd0:	05400284 	movi	r21,10
    8dd4:	00000906 	br	8dfc <__fputwc+0x90>
    8dd8:	80800017 	ldw	r2,0(r16)
    8ddc:	11400005 	stb	r5,0(r2)
    8de0:	80c00017 	ldw	r3,0(r16)
    8de4:	18c00044 	addi	r3,r3,1
    8de8:	80c00015 	stw	r3,0(r16)
    8dec:	8c400044 	addi	r17,r17,1
    8df0:	dc45883a 	add	r2,sp,r17
    8df4:	8d00112e 	bgeu	r17,r20,8e3c <__fputwc+0xd0>
    8df8:	11400003 	ldbu	r5,0(r2)
    8dfc:	80c00217 	ldw	r3,8(r16)
    8e00:	18ffffc4 	addi	r3,r3,-1
    8e04:	80c00215 	stw	r3,8(r16)
    8e08:	183ff30e 	bge	r3,zero,8dd8 <__alt_data_end+0xfffd8098>
    8e0c:	80800617 	ldw	r2,24(r16)
    8e10:	18801916 	blt	r3,r2,8e78 <__fputwc+0x10c>
    8e14:	80800017 	ldw	r2,0(r16)
    8e18:	11400005 	stb	r5,0(r2)
    8e1c:	80800017 	ldw	r2,0(r16)
    8e20:	10c00003 	ldbu	r3,0(r2)
    8e24:	10800044 	addi	r2,r2,1
    8e28:	1d402326 	beq	r3,r21,8eb8 <__fputwc+0x14c>
    8e2c:	80800015 	stw	r2,0(r16)
    8e30:	8c400044 	addi	r17,r17,1
    8e34:	dc45883a 	add	r2,sp,r17
    8e38:	8d3fef36 	bltu	r17,r20,8df8 <__alt_data_end+0xfffd80b8>
    8e3c:	9005883a 	mov	r2,r18
    8e40:	00000406 	br	8e54 <__fputwc+0xe8>
    8e44:	80c0030b 	ldhu	r3,12(r16)
    8e48:	a005883a 	mov	r2,r20
    8e4c:	18c01014 	ori	r3,r3,64
    8e50:	80c0030d 	sth	r3,12(r16)
    8e54:	dfc00717 	ldw	ra,28(sp)
    8e58:	dd400617 	ldw	r21,24(sp)
    8e5c:	dd000517 	ldw	r20,20(sp)
    8e60:	dcc00417 	ldw	r19,16(sp)
    8e64:	dc800317 	ldw	r18,12(sp)
    8e68:	dc400217 	ldw	r17,8(sp)
    8e6c:	dc000117 	ldw	r16,4(sp)
    8e70:	dec00804 	addi	sp,sp,32
    8e74:	f800283a 	ret
    8e78:	800d883a 	mov	r6,r16
    8e7c:	29403fcc 	andi	r5,r5,255
    8e80:	9809883a 	mov	r4,r19
    8e84:	0009c6c0 	call	9c6c <__swbuf_r>
    8e88:	10bfffe0 	cmpeqi	r2,r2,-1
    8e8c:	10803fcc 	andi	r2,r2,255
    8e90:	103fd626 	beq	r2,zero,8dec <__alt_data_end+0xfffd80ac>
    8e94:	00bfffc4 	movi	r2,-1
    8e98:	003fee06 	br	8e54 <__alt_data_end+0xfffd8114>
    8e9c:	90ffffc4 	addi	r3,r18,-1
    8ea0:	01003f84 	movi	r4,254
    8ea4:	20ffbf36 	bltu	r4,r3,8da4 <__alt_data_end+0xfffd8064>
    8ea8:	900b883a 	mov	r5,r18
    8eac:	dc800005 	stb	r18,0(sp)
    8eb0:	1029883a 	mov	r20,r2
    8eb4:	003fc506 	br	8dcc <__alt_data_end+0xfffd808c>
    8eb8:	800d883a 	mov	r6,r16
    8ebc:	a80b883a 	mov	r5,r21
    8ec0:	9809883a 	mov	r4,r19
    8ec4:	0009c6c0 	call	9c6c <__swbuf_r>
    8ec8:	10bfffe0 	cmpeqi	r2,r2,-1
    8ecc:	003fef06 	br	8e8c <__alt_data_end+0xfffd814c>

00008ed0 <_fputwc_r>:
    8ed0:	3080030b 	ldhu	r2,12(r6)
    8ed4:	10c8000c 	andi	r3,r2,8192
    8ed8:	1800051e 	bne	r3,zero,8ef0 <_fputwc_r+0x20>
    8edc:	30c01917 	ldw	r3,100(r6)
    8ee0:	10880014 	ori	r2,r2,8192
    8ee4:	3080030d 	sth	r2,12(r6)
    8ee8:	18880014 	ori	r2,r3,8192
    8eec:	30801915 	stw	r2,100(r6)
    8ef0:	0008d6c1 	jmpi	8d6c <__fputwc>

00008ef4 <fputwc>:
    8ef4:	00800074 	movhi	r2,1
    8ef8:	defffc04 	addi	sp,sp,-16
    8efc:	1082c704 	addi	r2,r2,2844
    8f00:	dc000115 	stw	r16,4(sp)
    8f04:	14000017 	ldw	r16,0(r2)
    8f08:	dc400215 	stw	r17,8(sp)
    8f0c:	dfc00315 	stw	ra,12(sp)
    8f10:	2023883a 	mov	r17,r4
    8f14:	80000226 	beq	r16,zero,8f20 <fputwc+0x2c>
    8f18:	80800e17 	ldw	r2,56(r16)
    8f1c:	10001026 	beq	r2,zero,8f60 <fputwc+0x6c>
    8f20:	2880030b 	ldhu	r2,12(r5)
    8f24:	10c8000c 	andi	r3,r2,8192
    8f28:	1800051e 	bne	r3,zero,8f40 <fputwc+0x4c>
    8f2c:	28c01917 	ldw	r3,100(r5)
    8f30:	10880014 	ori	r2,r2,8192
    8f34:	2880030d 	sth	r2,12(r5)
    8f38:	18880014 	ori	r2,r3,8192
    8f3c:	28801915 	stw	r2,100(r5)
    8f40:	280d883a 	mov	r6,r5
    8f44:	8009883a 	mov	r4,r16
    8f48:	880b883a 	mov	r5,r17
    8f4c:	dfc00317 	ldw	ra,12(sp)
    8f50:	dc400217 	ldw	r17,8(sp)
    8f54:	dc000117 	ldw	r16,4(sp)
    8f58:	dec00404 	addi	sp,sp,16
    8f5c:	0008d6c1 	jmpi	8d6c <__fputwc>
    8f60:	8009883a 	mov	r4,r16
    8f64:	d9400015 	stw	r5,0(sp)
    8f68:	0004bac0 	call	4bac <__sinit>
    8f6c:	d9400017 	ldw	r5,0(sp)
    8f70:	003feb06 	br	8f20 <__alt_data_end+0xfffd81e0>

00008f74 <_fstat_r>:
    8f74:	defffd04 	addi	sp,sp,-12
    8f78:	2805883a 	mov	r2,r5
    8f7c:	dc000015 	stw	r16,0(sp)
    8f80:	04000074 	movhi	r16,1
    8f84:	dc400115 	stw	r17,4(sp)
    8f88:	8409b704 	addi	r16,r16,9948
    8f8c:	2023883a 	mov	r17,r4
    8f90:	300b883a 	mov	r5,r6
    8f94:	1009883a 	mov	r4,r2
    8f98:	dfc00215 	stw	ra,8(sp)
    8f9c:	80000015 	stw	zero,0(r16)
    8fa0:	000d5980 	call	d598 <fstat>
    8fa4:	00ffffc4 	movi	r3,-1
    8fa8:	10c00526 	beq	r2,r3,8fc0 <_fstat_r+0x4c>
    8fac:	dfc00217 	ldw	ra,8(sp)
    8fb0:	dc400117 	ldw	r17,4(sp)
    8fb4:	dc000017 	ldw	r16,0(sp)
    8fb8:	dec00304 	addi	sp,sp,12
    8fbc:	f800283a 	ret
    8fc0:	80c00017 	ldw	r3,0(r16)
    8fc4:	183ff926 	beq	r3,zero,8fac <__alt_data_end+0xfffd826c>
    8fc8:	88c00015 	stw	r3,0(r17)
    8fcc:	003ff706 	br	8fac <__alt_data_end+0xfffd826c>

00008fd0 <__sfvwrite_r>:
    8fd0:	30800217 	ldw	r2,8(r6)
    8fd4:	10006726 	beq	r2,zero,9174 <__sfvwrite_r+0x1a4>
    8fd8:	28c0030b 	ldhu	r3,12(r5)
    8fdc:	defff404 	addi	sp,sp,-48
    8fe0:	dd400715 	stw	r21,28(sp)
    8fe4:	dd000615 	stw	r20,24(sp)
    8fe8:	dc000215 	stw	r16,8(sp)
    8fec:	dfc00b15 	stw	ra,44(sp)
    8ff0:	df000a15 	stw	fp,40(sp)
    8ff4:	ddc00915 	stw	r23,36(sp)
    8ff8:	dd800815 	stw	r22,32(sp)
    8ffc:	dcc00515 	stw	r19,20(sp)
    9000:	dc800415 	stw	r18,16(sp)
    9004:	dc400315 	stw	r17,12(sp)
    9008:	1880020c 	andi	r2,r3,8
    900c:	2821883a 	mov	r16,r5
    9010:	202b883a 	mov	r21,r4
    9014:	3029883a 	mov	r20,r6
    9018:	10002726 	beq	r2,zero,90b8 <__sfvwrite_r+0xe8>
    901c:	28800417 	ldw	r2,16(r5)
    9020:	10002526 	beq	r2,zero,90b8 <__sfvwrite_r+0xe8>
    9024:	1880008c 	andi	r2,r3,2
    9028:	a4400017 	ldw	r17,0(r20)
    902c:	10002a26 	beq	r2,zero,90d8 <__sfvwrite_r+0x108>
    9030:	05a00034 	movhi	r22,32768
    9034:	0027883a 	mov	r19,zero
    9038:	0025883a 	mov	r18,zero
    903c:	b5bf0004 	addi	r22,r22,-1024
    9040:	980d883a 	mov	r6,r19
    9044:	a809883a 	mov	r4,r21
    9048:	90004626 	beq	r18,zero,9164 <__sfvwrite_r+0x194>
    904c:	900f883a 	mov	r7,r18
    9050:	b480022e 	bgeu	r22,r18,905c <__sfvwrite_r+0x8c>
    9054:	01e00034 	movhi	r7,32768
    9058:	39ff0004 	addi	r7,r7,-1024
    905c:	80800917 	ldw	r2,36(r16)
    9060:	81400717 	ldw	r5,28(r16)
    9064:	103ee83a 	callr	r2
    9068:	00805a0e 	bge	zero,r2,91d4 <__sfvwrite_r+0x204>
    906c:	a0c00217 	ldw	r3,8(r20)
    9070:	98a7883a 	add	r19,r19,r2
    9074:	90a5c83a 	sub	r18,r18,r2
    9078:	1885c83a 	sub	r2,r3,r2
    907c:	a0800215 	stw	r2,8(r20)
    9080:	103fef1e 	bne	r2,zero,9040 <__alt_data_end+0xfffd8300>
    9084:	0005883a 	mov	r2,zero
    9088:	dfc00b17 	ldw	ra,44(sp)
    908c:	df000a17 	ldw	fp,40(sp)
    9090:	ddc00917 	ldw	r23,36(sp)
    9094:	dd800817 	ldw	r22,32(sp)
    9098:	dd400717 	ldw	r21,28(sp)
    909c:	dd000617 	ldw	r20,24(sp)
    90a0:	dcc00517 	ldw	r19,20(sp)
    90a4:	dc800417 	ldw	r18,16(sp)
    90a8:	dc400317 	ldw	r17,12(sp)
    90ac:	dc000217 	ldw	r16,8(sp)
    90b0:	dec00c04 	addi	sp,sp,48
    90b4:	f800283a 	ret
    90b8:	800b883a 	mov	r5,r16
    90bc:	a809883a 	mov	r4,r21
    90c0:	0002ba00 	call	2ba0 <__swsetup_r>
    90c4:	1000ee1e 	bne	r2,zero,9480 <__sfvwrite_r+0x4b0>
    90c8:	80c0030b 	ldhu	r3,12(r16)
    90cc:	a4400017 	ldw	r17,0(r20)
    90d0:	1880008c 	andi	r2,r3,2
    90d4:	103fd61e 	bne	r2,zero,9030 <__alt_data_end+0xfffd82f0>
    90d8:	1880004c 	andi	r2,r3,1
    90dc:	1000421e 	bne	r2,zero,91e8 <__sfvwrite_r+0x218>
    90e0:	0039883a 	mov	fp,zero
    90e4:	0025883a 	mov	r18,zero
    90e8:	90001a26 	beq	r18,zero,9154 <__sfvwrite_r+0x184>
    90ec:	1880800c 	andi	r2,r3,512
    90f0:	84c00217 	ldw	r19,8(r16)
    90f4:	10002126 	beq	r2,zero,917c <__sfvwrite_r+0x1ac>
    90f8:	982f883a 	mov	r23,r19
    90fc:	94c09636 	bltu	r18,r19,9358 <__sfvwrite_r+0x388>
    9100:	1881200c 	andi	r2,r3,1152
    9104:	1000a11e 	bne	r2,zero,938c <__sfvwrite_r+0x3bc>
    9108:	81000017 	ldw	r4,0(r16)
    910c:	b80d883a 	mov	r6,r23
    9110:	e00b883a 	mov	r5,fp
    9114:	000954c0 	call	954c <memmove>
    9118:	80c00217 	ldw	r3,8(r16)
    911c:	81000017 	ldw	r4,0(r16)
    9120:	9005883a 	mov	r2,r18
    9124:	1ce7c83a 	sub	r19,r3,r19
    9128:	25cf883a 	add	r7,r4,r23
    912c:	84c00215 	stw	r19,8(r16)
    9130:	81c00015 	stw	r7,0(r16)
    9134:	a0c00217 	ldw	r3,8(r20)
    9138:	e0b9883a 	add	fp,fp,r2
    913c:	90a5c83a 	sub	r18,r18,r2
    9140:	18a7c83a 	sub	r19,r3,r2
    9144:	a4c00215 	stw	r19,8(r20)
    9148:	983fce26 	beq	r19,zero,9084 <__alt_data_end+0xfffd8344>
    914c:	80c0030b 	ldhu	r3,12(r16)
    9150:	903fe61e 	bne	r18,zero,90ec <__alt_data_end+0xfffd83ac>
    9154:	8f000017 	ldw	fp,0(r17)
    9158:	8c800117 	ldw	r18,4(r17)
    915c:	8c400204 	addi	r17,r17,8
    9160:	003fe106 	br	90e8 <__alt_data_end+0xfffd83a8>
    9164:	8cc00017 	ldw	r19,0(r17)
    9168:	8c800117 	ldw	r18,4(r17)
    916c:	8c400204 	addi	r17,r17,8
    9170:	003fb306 	br	9040 <__alt_data_end+0xfffd8300>
    9174:	0005883a 	mov	r2,zero
    9178:	f800283a 	ret
    917c:	81000017 	ldw	r4,0(r16)
    9180:	80800417 	ldw	r2,16(r16)
    9184:	11005a36 	bltu	r2,r4,92f0 <__sfvwrite_r+0x320>
    9188:	85c00517 	ldw	r23,20(r16)
    918c:	95c05836 	bltu	r18,r23,92f0 <__sfvwrite_r+0x320>
    9190:	00a00034 	movhi	r2,32768
    9194:	10bfffc4 	addi	r2,r2,-1
    9198:	9009883a 	mov	r4,r18
    919c:	1480012e 	bgeu	r2,r18,91a4 <__sfvwrite_r+0x1d4>
    91a0:	1009883a 	mov	r4,r2
    91a4:	b80b883a 	mov	r5,r23
    91a8:	00005cc0 	call	5cc <__divsi3>
    91ac:	b80b883a 	mov	r5,r23
    91b0:	1009883a 	mov	r4,r2
    91b4:	000ab6c0 	call	ab6c <__mulsi3>
    91b8:	81400717 	ldw	r5,28(r16)
    91bc:	80c00917 	ldw	r3,36(r16)
    91c0:	100f883a 	mov	r7,r2
    91c4:	e00d883a 	mov	r6,fp
    91c8:	a809883a 	mov	r4,r21
    91cc:	183ee83a 	callr	r3
    91d0:	00bfd816 	blt	zero,r2,9134 <__alt_data_end+0xfffd83f4>
    91d4:	8080030b 	ldhu	r2,12(r16)
    91d8:	10801014 	ori	r2,r2,64
    91dc:	8080030d 	sth	r2,12(r16)
    91e0:	00bfffc4 	movi	r2,-1
    91e4:	003fa806 	br	9088 <__alt_data_end+0xfffd8348>
    91e8:	0027883a 	mov	r19,zero
    91ec:	0011883a 	mov	r8,zero
    91f0:	0039883a 	mov	fp,zero
    91f4:	0025883a 	mov	r18,zero
    91f8:	90001f26 	beq	r18,zero,9278 <__sfvwrite_r+0x2a8>
    91fc:	40005a26 	beq	r8,zero,9368 <__sfvwrite_r+0x398>
    9200:	982d883a 	mov	r22,r19
    9204:	94c0012e 	bgeu	r18,r19,920c <__sfvwrite_r+0x23c>
    9208:	902d883a 	mov	r22,r18
    920c:	81000017 	ldw	r4,0(r16)
    9210:	80800417 	ldw	r2,16(r16)
    9214:	b02f883a 	mov	r23,r22
    9218:	81c00517 	ldw	r7,20(r16)
    921c:	1100032e 	bgeu	r2,r4,922c <__sfvwrite_r+0x25c>
    9220:	80c00217 	ldw	r3,8(r16)
    9224:	38c7883a 	add	r3,r7,r3
    9228:	1d801816 	blt	r3,r22,928c <__sfvwrite_r+0x2bc>
    922c:	b1c03e16 	blt	r22,r7,9328 <__sfvwrite_r+0x358>
    9230:	80800917 	ldw	r2,36(r16)
    9234:	81400717 	ldw	r5,28(r16)
    9238:	e00d883a 	mov	r6,fp
    923c:	da000115 	stw	r8,4(sp)
    9240:	a809883a 	mov	r4,r21
    9244:	103ee83a 	callr	r2
    9248:	102f883a 	mov	r23,r2
    924c:	da000117 	ldw	r8,4(sp)
    9250:	00bfe00e 	bge	zero,r2,91d4 <__alt_data_end+0xfffd8494>
    9254:	9de7c83a 	sub	r19,r19,r23
    9258:	98001f26 	beq	r19,zero,92d8 <__sfvwrite_r+0x308>
    925c:	a0800217 	ldw	r2,8(r20)
    9260:	e5f9883a 	add	fp,fp,r23
    9264:	95e5c83a 	sub	r18,r18,r23
    9268:	15efc83a 	sub	r23,r2,r23
    926c:	a5c00215 	stw	r23,8(r20)
    9270:	b83f8426 	beq	r23,zero,9084 <__alt_data_end+0xfffd8344>
    9274:	903fe11e 	bne	r18,zero,91fc <__alt_data_end+0xfffd84bc>
    9278:	8f000017 	ldw	fp,0(r17)
    927c:	8c800117 	ldw	r18,4(r17)
    9280:	0011883a 	mov	r8,zero
    9284:	8c400204 	addi	r17,r17,8
    9288:	003fdb06 	br	91f8 <__alt_data_end+0xfffd84b8>
    928c:	180d883a 	mov	r6,r3
    9290:	e00b883a 	mov	r5,fp
    9294:	da000115 	stw	r8,4(sp)
    9298:	d8c00015 	stw	r3,0(sp)
    929c:	000954c0 	call	954c <memmove>
    92a0:	d8c00017 	ldw	r3,0(sp)
    92a4:	80800017 	ldw	r2,0(r16)
    92a8:	800b883a 	mov	r5,r16
    92ac:	a809883a 	mov	r4,r21
    92b0:	10c5883a 	add	r2,r2,r3
    92b4:	80800015 	stw	r2,0(r16)
    92b8:	d8c00015 	stw	r3,0(sp)
    92bc:	00047c00 	call	47c0 <_fflush_r>
    92c0:	d8c00017 	ldw	r3,0(sp)
    92c4:	da000117 	ldw	r8,4(sp)
    92c8:	103fc21e 	bne	r2,zero,91d4 <__alt_data_end+0xfffd8494>
    92cc:	182f883a 	mov	r23,r3
    92d0:	9de7c83a 	sub	r19,r19,r23
    92d4:	983fe11e 	bne	r19,zero,925c <__alt_data_end+0xfffd851c>
    92d8:	800b883a 	mov	r5,r16
    92dc:	a809883a 	mov	r4,r21
    92e0:	00047c00 	call	47c0 <_fflush_r>
    92e4:	103fbb1e 	bne	r2,zero,91d4 <__alt_data_end+0xfffd8494>
    92e8:	0011883a 	mov	r8,zero
    92ec:	003fdb06 	br	925c <__alt_data_end+0xfffd851c>
    92f0:	94c0012e 	bgeu	r18,r19,92f8 <__sfvwrite_r+0x328>
    92f4:	9027883a 	mov	r19,r18
    92f8:	980d883a 	mov	r6,r19
    92fc:	e00b883a 	mov	r5,fp
    9300:	000954c0 	call	954c <memmove>
    9304:	80800217 	ldw	r2,8(r16)
    9308:	80c00017 	ldw	r3,0(r16)
    930c:	14c5c83a 	sub	r2,r2,r19
    9310:	1cc7883a 	add	r3,r3,r19
    9314:	80800215 	stw	r2,8(r16)
    9318:	80c00015 	stw	r3,0(r16)
    931c:	10004326 	beq	r2,zero,942c <__sfvwrite_r+0x45c>
    9320:	9805883a 	mov	r2,r19
    9324:	003f8306 	br	9134 <__alt_data_end+0xfffd83f4>
    9328:	b00d883a 	mov	r6,r22
    932c:	e00b883a 	mov	r5,fp
    9330:	da000115 	stw	r8,4(sp)
    9334:	000954c0 	call	954c <memmove>
    9338:	80800217 	ldw	r2,8(r16)
    933c:	80c00017 	ldw	r3,0(r16)
    9340:	da000117 	ldw	r8,4(sp)
    9344:	1585c83a 	sub	r2,r2,r22
    9348:	1dad883a 	add	r22,r3,r22
    934c:	80800215 	stw	r2,8(r16)
    9350:	85800015 	stw	r22,0(r16)
    9354:	003fbf06 	br	9254 <__alt_data_end+0xfffd8514>
    9358:	81000017 	ldw	r4,0(r16)
    935c:	9027883a 	mov	r19,r18
    9360:	902f883a 	mov	r23,r18
    9364:	003f6906 	br	910c <__alt_data_end+0xfffd83cc>
    9368:	900d883a 	mov	r6,r18
    936c:	01400284 	movi	r5,10
    9370:	e009883a 	mov	r4,fp
    9374:	0005c5c0 	call	5c5c <memchr>
    9378:	10003e26 	beq	r2,zero,9474 <__sfvwrite_r+0x4a4>
    937c:	10800044 	addi	r2,r2,1
    9380:	1727c83a 	sub	r19,r2,fp
    9384:	02000044 	movi	r8,1
    9388:	003f9d06 	br	9200 <__alt_data_end+0xfffd84c0>
    938c:	80800517 	ldw	r2,20(r16)
    9390:	81400417 	ldw	r5,16(r16)
    9394:	81c00017 	ldw	r7,0(r16)
    9398:	10a7883a 	add	r19,r2,r2
    939c:	9885883a 	add	r2,r19,r2
    93a0:	1026d7fa 	srli	r19,r2,31
    93a4:	396dc83a 	sub	r22,r7,r5
    93a8:	b1000044 	addi	r4,r22,1
    93ac:	9885883a 	add	r2,r19,r2
    93b0:	1027d07a 	srai	r19,r2,1
    93b4:	2485883a 	add	r2,r4,r18
    93b8:	980d883a 	mov	r6,r19
    93bc:	9880022e 	bgeu	r19,r2,93c8 <__sfvwrite_r+0x3f8>
    93c0:	1027883a 	mov	r19,r2
    93c4:	100d883a 	mov	r6,r2
    93c8:	18c1000c 	andi	r3,r3,1024
    93cc:	18001c26 	beq	r3,zero,9440 <__sfvwrite_r+0x470>
    93d0:	300b883a 	mov	r5,r6
    93d4:	a809883a 	mov	r4,r21
    93d8:	00054500 	call	5450 <_malloc_r>
    93dc:	102f883a 	mov	r23,r2
    93e0:	10002926 	beq	r2,zero,9488 <__sfvwrite_r+0x4b8>
    93e4:	81400417 	ldw	r5,16(r16)
    93e8:	b00d883a 	mov	r6,r22
    93ec:	1009883a 	mov	r4,r2
    93f0:	0005d400 	call	5d40 <memcpy>
    93f4:	8080030b 	ldhu	r2,12(r16)
    93f8:	00fedfc4 	movi	r3,-1153
    93fc:	10c4703a 	and	r2,r2,r3
    9400:	10802014 	ori	r2,r2,128
    9404:	8080030d 	sth	r2,12(r16)
    9408:	bd89883a 	add	r4,r23,r22
    940c:	9d8fc83a 	sub	r7,r19,r22
    9410:	85c00415 	stw	r23,16(r16)
    9414:	84c00515 	stw	r19,20(r16)
    9418:	81000015 	stw	r4,0(r16)
    941c:	9027883a 	mov	r19,r18
    9420:	81c00215 	stw	r7,8(r16)
    9424:	902f883a 	mov	r23,r18
    9428:	003f3806 	br	910c <__alt_data_end+0xfffd83cc>
    942c:	800b883a 	mov	r5,r16
    9430:	a809883a 	mov	r4,r21
    9434:	00047c00 	call	47c0 <_fflush_r>
    9438:	103fb926 	beq	r2,zero,9320 <__alt_data_end+0xfffd85e0>
    943c:	003f6506 	br	91d4 <__alt_data_end+0xfffd8494>
    9440:	a809883a 	mov	r4,r21
    9444:	00097080 	call	9708 <_realloc_r>
    9448:	102f883a 	mov	r23,r2
    944c:	103fee1e 	bne	r2,zero,9408 <__alt_data_end+0xfffd86c8>
    9450:	81400417 	ldw	r5,16(r16)
    9454:	a809883a 	mov	r4,r21
    9458:	0004d200 	call	4d20 <_free_r>
    945c:	8080030b 	ldhu	r2,12(r16)
    9460:	00ffdfc4 	movi	r3,-129
    9464:	1884703a 	and	r2,r3,r2
    9468:	00c00304 	movi	r3,12
    946c:	a8c00015 	stw	r3,0(r21)
    9470:	003f5906 	br	91d8 <__alt_data_end+0xfffd8498>
    9474:	94c00044 	addi	r19,r18,1
    9478:	02000044 	movi	r8,1
    947c:	003f6006 	br	9200 <__alt_data_end+0xfffd84c0>
    9480:	00bfffc4 	movi	r2,-1
    9484:	003f0006 	br	9088 <__alt_data_end+0xfffd8348>
    9488:	00800304 	movi	r2,12
    948c:	a8800015 	stw	r2,0(r21)
    9490:	8080030b 	ldhu	r2,12(r16)
    9494:	003f5006 	br	91d8 <__alt_data_end+0xfffd8498>

00009498 <_isatty_r>:
    9498:	defffd04 	addi	sp,sp,-12
    949c:	dc000015 	stw	r16,0(sp)
    94a0:	04000074 	movhi	r16,1
    94a4:	dc400115 	stw	r17,4(sp)
    94a8:	8409b704 	addi	r16,r16,9948
    94ac:	2023883a 	mov	r17,r4
    94b0:	2809883a 	mov	r4,r5
    94b4:	dfc00215 	stw	ra,8(sp)
    94b8:	80000015 	stw	zero,0(r16)
    94bc:	000d6f80 	call	d6f8 <isatty>
    94c0:	00ffffc4 	movi	r3,-1
    94c4:	10c00526 	beq	r2,r3,94dc <_isatty_r+0x44>
    94c8:	dfc00217 	ldw	ra,8(sp)
    94cc:	dc400117 	ldw	r17,4(sp)
    94d0:	dc000017 	ldw	r16,0(sp)
    94d4:	dec00304 	addi	sp,sp,12
    94d8:	f800283a 	ret
    94dc:	80c00017 	ldw	r3,0(r16)
    94e0:	183ff926 	beq	r3,zero,94c8 <__alt_data_end+0xfffd8788>
    94e4:	88c00015 	stw	r3,0(r17)
    94e8:	003ff706 	br	94c8 <__alt_data_end+0xfffd8788>

000094ec <_lseek_r>:
    94ec:	defffd04 	addi	sp,sp,-12
    94f0:	2805883a 	mov	r2,r5
    94f4:	dc000015 	stw	r16,0(sp)
    94f8:	04000074 	movhi	r16,1
    94fc:	dc400115 	stw	r17,4(sp)
    9500:	300b883a 	mov	r5,r6
    9504:	8409b704 	addi	r16,r16,9948
    9508:	2023883a 	mov	r17,r4
    950c:	380d883a 	mov	r6,r7
    9510:	1009883a 	mov	r4,r2
    9514:	dfc00215 	stw	ra,8(sp)
    9518:	80000015 	stw	zero,0(r16)
    951c:	000d91c0 	call	d91c <lseek>
    9520:	00ffffc4 	movi	r3,-1
    9524:	10c00526 	beq	r2,r3,953c <_lseek_r+0x50>
    9528:	dfc00217 	ldw	ra,8(sp)
    952c:	dc400117 	ldw	r17,4(sp)
    9530:	dc000017 	ldw	r16,0(sp)
    9534:	dec00304 	addi	sp,sp,12
    9538:	f800283a 	ret
    953c:	80c00017 	ldw	r3,0(r16)
    9540:	183ff926 	beq	r3,zero,9528 <__alt_data_end+0xfffd87e8>
    9544:	88c00015 	stw	r3,0(r17)
    9548:	003ff706 	br	9528 <__alt_data_end+0xfffd87e8>

0000954c <memmove>:
    954c:	2005883a 	mov	r2,r4
    9550:	29000b2e 	bgeu	r5,r4,9580 <memmove+0x34>
    9554:	298f883a 	add	r7,r5,r6
    9558:	21c0092e 	bgeu	r4,r7,9580 <memmove+0x34>
    955c:	2187883a 	add	r3,r4,r6
    9560:	198bc83a 	sub	r5,r3,r6
    9564:	30004826 	beq	r6,zero,9688 <memmove+0x13c>
    9568:	39ffffc4 	addi	r7,r7,-1
    956c:	39000003 	ldbu	r4,0(r7)
    9570:	18ffffc4 	addi	r3,r3,-1
    9574:	19000005 	stb	r4,0(r3)
    9578:	28fffb1e 	bne	r5,r3,9568 <__alt_data_end+0xfffd8828>
    957c:	f800283a 	ret
    9580:	00c003c4 	movi	r3,15
    9584:	1980412e 	bgeu	r3,r6,968c <memmove+0x140>
    9588:	2886b03a 	or	r3,r5,r2
    958c:	18c000cc 	andi	r3,r3,3
    9590:	1800401e 	bne	r3,zero,9694 <memmove+0x148>
    9594:	33fffc04 	addi	r15,r6,-16
    9598:	781ed13a 	srli	r15,r15,4
    959c:	28c00104 	addi	r3,r5,4
    95a0:	13400104 	addi	r13,r2,4
    95a4:	781c913a 	slli	r14,r15,4
    95a8:	2b000204 	addi	r12,r5,8
    95ac:	12c00204 	addi	r11,r2,8
    95b0:	73800504 	addi	r14,r14,20
    95b4:	2a800304 	addi	r10,r5,12
    95b8:	12400304 	addi	r9,r2,12
    95bc:	2b9d883a 	add	r14,r5,r14
    95c0:	2811883a 	mov	r8,r5
    95c4:	100f883a 	mov	r7,r2
    95c8:	41000017 	ldw	r4,0(r8)
    95cc:	39c00404 	addi	r7,r7,16
    95d0:	18c00404 	addi	r3,r3,16
    95d4:	393ffc15 	stw	r4,-16(r7)
    95d8:	193ffc17 	ldw	r4,-16(r3)
    95dc:	6b400404 	addi	r13,r13,16
    95e0:	5ac00404 	addi	r11,r11,16
    95e4:	693ffc15 	stw	r4,-16(r13)
    95e8:	61000017 	ldw	r4,0(r12)
    95ec:	4a400404 	addi	r9,r9,16
    95f0:	42000404 	addi	r8,r8,16
    95f4:	593ffc15 	stw	r4,-16(r11)
    95f8:	51000017 	ldw	r4,0(r10)
    95fc:	63000404 	addi	r12,r12,16
    9600:	52800404 	addi	r10,r10,16
    9604:	493ffc15 	stw	r4,-16(r9)
    9608:	1bbfef1e 	bne	r3,r14,95c8 <__alt_data_end+0xfffd8888>
    960c:	79000044 	addi	r4,r15,1
    9610:	2008913a 	slli	r4,r4,4
    9614:	328003cc 	andi	r10,r6,15
    9618:	02c000c4 	movi	r11,3
    961c:	1107883a 	add	r3,r2,r4
    9620:	290b883a 	add	r5,r5,r4
    9624:	5a801e2e 	bgeu	r11,r10,96a0 <memmove+0x154>
    9628:	1813883a 	mov	r9,r3
    962c:	2811883a 	mov	r8,r5
    9630:	500f883a 	mov	r7,r10
    9634:	41000017 	ldw	r4,0(r8)
    9638:	4a400104 	addi	r9,r9,4
    963c:	39ffff04 	addi	r7,r7,-4
    9640:	493fff15 	stw	r4,-4(r9)
    9644:	42000104 	addi	r8,r8,4
    9648:	59fffa36 	bltu	r11,r7,9634 <__alt_data_end+0xfffd88f4>
    964c:	513fff04 	addi	r4,r10,-4
    9650:	2008d0ba 	srli	r4,r4,2
    9654:	318000cc 	andi	r6,r6,3
    9658:	21000044 	addi	r4,r4,1
    965c:	2109883a 	add	r4,r4,r4
    9660:	2109883a 	add	r4,r4,r4
    9664:	1907883a 	add	r3,r3,r4
    9668:	290b883a 	add	r5,r5,r4
    966c:	30000b26 	beq	r6,zero,969c <memmove+0x150>
    9670:	198d883a 	add	r6,r3,r6
    9674:	29c00003 	ldbu	r7,0(r5)
    9678:	18c00044 	addi	r3,r3,1
    967c:	29400044 	addi	r5,r5,1
    9680:	19ffffc5 	stb	r7,-1(r3)
    9684:	19bffb1e 	bne	r3,r6,9674 <__alt_data_end+0xfffd8934>
    9688:	f800283a 	ret
    968c:	1007883a 	mov	r3,r2
    9690:	003ff606 	br	966c <__alt_data_end+0xfffd892c>
    9694:	1007883a 	mov	r3,r2
    9698:	003ff506 	br	9670 <__alt_data_end+0xfffd8930>
    969c:	f800283a 	ret
    96a0:	500d883a 	mov	r6,r10
    96a4:	003ff106 	br	966c <__alt_data_end+0xfffd892c>

000096a8 <_read_r>:
    96a8:	defffd04 	addi	sp,sp,-12
    96ac:	2805883a 	mov	r2,r5
    96b0:	dc000015 	stw	r16,0(sp)
    96b4:	04000074 	movhi	r16,1
    96b8:	dc400115 	stw	r17,4(sp)
    96bc:	300b883a 	mov	r5,r6
    96c0:	8409b704 	addi	r16,r16,9948
    96c4:	2023883a 	mov	r17,r4
    96c8:	380d883a 	mov	r6,r7
    96cc:	1009883a 	mov	r4,r2
    96d0:	dfc00215 	stw	ra,8(sp)
    96d4:	80000015 	stw	zero,0(r16)
    96d8:	000da4c0 	call	da4c <read>
    96dc:	00ffffc4 	movi	r3,-1
    96e0:	10c00526 	beq	r2,r3,96f8 <_read_r+0x50>
    96e4:	dfc00217 	ldw	ra,8(sp)
    96e8:	dc400117 	ldw	r17,4(sp)
    96ec:	dc000017 	ldw	r16,0(sp)
    96f0:	dec00304 	addi	sp,sp,12
    96f4:	f800283a 	ret
    96f8:	80c00017 	ldw	r3,0(r16)
    96fc:	183ff926 	beq	r3,zero,96e4 <__alt_data_end+0xfffd89a4>
    9700:	88c00015 	stw	r3,0(r17)
    9704:	003ff706 	br	96e4 <__alt_data_end+0xfffd89a4>

00009708 <_realloc_r>:
    9708:	defff604 	addi	sp,sp,-40
    970c:	dc800215 	stw	r18,8(sp)
    9710:	dfc00915 	stw	ra,36(sp)
    9714:	df000815 	stw	fp,32(sp)
    9718:	ddc00715 	stw	r23,28(sp)
    971c:	dd800615 	stw	r22,24(sp)
    9720:	dd400515 	stw	r21,20(sp)
    9724:	dd000415 	stw	r20,16(sp)
    9728:	dcc00315 	stw	r19,12(sp)
    972c:	dc400115 	stw	r17,4(sp)
    9730:	dc000015 	stw	r16,0(sp)
    9734:	3025883a 	mov	r18,r6
    9738:	2800b726 	beq	r5,zero,9a18 <_realloc_r+0x310>
    973c:	282b883a 	mov	r21,r5
    9740:	2029883a 	mov	r20,r4
    9744:	000da440 	call	da44 <__malloc_lock>
    9748:	a8bfff17 	ldw	r2,-4(r21)
    974c:	043fff04 	movi	r16,-4
    9750:	90c002c4 	addi	r3,r18,11
    9754:	01000584 	movi	r4,22
    9758:	acfffe04 	addi	r19,r21,-8
    975c:	1420703a 	and	r16,r2,r16
    9760:	20c0332e 	bgeu	r4,r3,9830 <_realloc_r+0x128>
    9764:	047ffe04 	movi	r17,-8
    9768:	1c62703a 	and	r17,r3,r17
    976c:	8807883a 	mov	r3,r17
    9770:	88005816 	blt	r17,zero,98d4 <_realloc_r+0x1cc>
    9774:	8c805736 	bltu	r17,r18,98d4 <_realloc_r+0x1cc>
    9778:	80c0300e 	bge	r16,r3,983c <_realloc_r+0x134>
    977c:	07000074 	movhi	fp,1
    9780:	e73d3404 	addi	fp,fp,-2864
    9784:	e1c00217 	ldw	r7,8(fp)
    9788:	9c09883a 	add	r4,r19,r16
    978c:	22000117 	ldw	r8,4(r4)
    9790:	21c06326 	beq	r4,r7,9920 <_realloc_r+0x218>
    9794:	017fff84 	movi	r5,-2
    9798:	414a703a 	and	r5,r8,r5
    979c:	214b883a 	add	r5,r4,r5
    97a0:	29800117 	ldw	r6,4(r5)
    97a4:	3180004c 	andi	r6,r6,1
    97a8:	30003f26 	beq	r6,zero,98a8 <_realloc_r+0x1a0>
    97ac:	1080004c 	andi	r2,r2,1
    97b0:	10008326 	beq	r2,zero,99c0 <_realloc_r+0x2b8>
    97b4:	900b883a 	mov	r5,r18
    97b8:	a009883a 	mov	r4,r20
    97bc:	00054500 	call	5450 <_malloc_r>
    97c0:	1025883a 	mov	r18,r2
    97c4:	10011e26 	beq	r2,zero,9c40 <_realloc_r+0x538>
    97c8:	a93fff17 	ldw	r4,-4(r21)
    97cc:	10fffe04 	addi	r3,r2,-8
    97d0:	00bfff84 	movi	r2,-2
    97d4:	2084703a 	and	r2,r4,r2
    97d8:	9885883a 	add	r2,r19,r2
    97dc:	1880ee26 	beq	r3,r2,9b98 <_realloc_r+0x490>
    97e0:	81bfff04 	addi	r6,r16,-4
    97e4:	00800904 	movi	r2,36
    97e8:	1180b836 	bltu	r2,r6,9acc <_realloc_r+0x3c4>
    97ec:	00c004c4 	movi	r3,19
    97f0:	19809636 	bltu	r3,r6,9a4c <_realloc_r+0x344>
    97f4:	9005883a 	mov	r2,r18
    97f8:	a807883a 	mov	r3,r21
    97fc:	19000017 	ldw	r4,0(r3)
    9800:	11000015 	stw	r4,0(r2)
    9804:	19000117 	ldw	r4,4(r3)
    9808:	11000115 	stw	r4,4(r2)
    980c:	18c00217 	ldw	r3,8(r3)
    9810:	10c00215 	stw	r3,8(r2)
    9814:	a80b883a 	mov	r5,r21
    9818:	a009883a 	mov	r4,r20
    981c:	0004d200 	call	4d20 <_free_r>
    9820:	a009883a 	mov	r4,r20
    9824:	000da480 	call	da48 <__malloc_unlock>
    9828:	9005883a 	mov	r2,r18
    982c:	00001206 	br	9878 <_realloc_r+0x170>
    9830:	00c00404 	movi	r3,16
    9834:	1823883a 	mov	r17,r3
    9838:	003fce06 	br	9774 <__alt_data_end+0xfffd8a34>
    983c:	a825883a 	mov	r18,r21
    9840:	8445c83a 	sub	r2,r16,r17
    9844:	00c003c4 	movi	r3,15
    9848:	18802636 	bltu	r3,r2,98e4 <_realloc_r+0x1dc>
    984c:	99800117 	ldw	r6,4(r19)
    9850:	9c07883a 	add	r3,r19,r16
    9854:	3180004c 	andi	r6,r6,1
    9858:	3420b03a 	or	r16,r6,r16
    985c:	9c000115 	stw	r16,4(r19)
    9860:	18800117 	ldw	r2,4(r3)
    9864:	10800054 	ori	r2,r2,1
    9868:	18800115 	stw	r2,4(r3)
    986c:	a009883a 	mov	r4,r20
    9870:	000da480 	call	da48 <__malloc_unlock>
    9874:	9005883a 	mov	r2,r18
    9878:	dfc00917 	ldw	ra,36(sp)
    987c:	df000817 	ldw	fp,32(sp)
    9880:	ddc00717 	ldw	r23,28(sp)
    9884:	dd800617 	ldw	r22,24(sp)
    9888:	dd400517 	ldw	r21,20(sp)
    988c:	dd000417 	ldw	r20,16(sp)
    9890:	dcc00317 	ldw	r19,12(sp)
    9894:	dc800217 	ldw	r18,8(sp)
    9898:	dc400117 	ldw	r17,4(sp)
    989c:	dc000017 	ldw	r16,0(sp)
    98a0:	dec00a04 	addi	sp,sp,40
    98a4:	f800283a 	ret
    98a8:	017fff04 	movi	r5,-4
    98ac:	414a703a 	and	r5,r8,r5
    98b0:	814d883a 	add	r6,r16,r5
    98b4:	30c01f16 	blt	r6,r3,9934 <_realloc_r+0x22c>
    98b8:	20800317 	ldw	r2,12(r4)
    98bc:	20c00217 	ldw	r3,8(r4)
    98c0:	a825883a 	mov	r18,r21
    98c4:	3021883a 	mov	r16,r6
    98c8:	18800315 	stw	r2,12(r3)
    98cc:	10c00215 	stw	r3,8(r2)
    98d0:	003fdb06 	br	9840 <__alt_data_end+0xfffd8b00>
    98d4:	00800304 	movi	r2,12
    98d8:	a0800015 	stw	r2,0(r20)
    98dc:	0005883a 	mov	r2,zero
    98e0:	003fe506 	br	9878 <__alt_data_end+0xfffd8b38>
    98e4:	98c00117 	ldw	r3,4(r19)
    98e8:	9c4b883a 	add	r5,r19,r17
    98ec:	11000054 	ori	r4,r2,1
    98f0:	18c0004c 	andi	r3,r3,1
    98f4:	1c62b03a 	or	r17,r3,r17
    98f8:	9c400115 	stw	r17,4(r19)
    98fc:	29000115 	stw	r4,4(r5)
    9900:	2885883a 	add	r2,r5,r2
    9904:	10c00117 	ldw	r3,4(r2)
    9908:	29400204 	addi	r5,r5,8
    990c:	a009883a 	mov	r4,r20
    9910:	18c00054 	ori	r3,r3,1
    9914:	10c00115 	stw	r3,4(r2)
    9918:	0004d200 	call	4d20 <_free_r>
    991c:	003fd306 	br	986c <__alt_data_end+0xfffd8b2c>
    9920:	017fff04 	movi	r5,-4
    9924:	414a703a 	and	r5,r8,r5
    9928:	89800404 	addi	r6,r17,16
    992c:	8151883a 	add	r8,r16,r5
    9930:	4180590e 	bge	r8,r6,9a98 <_realloc_r+0x390>
    9934:	1080004c 	andi	r2,r2,1
    9938:	103f9e1e 	bne	r2,zero,97b4 <__alt_data_end+0xfffd8a74>
    993c:	adbffe17 	ldw	r22,-8(r21)
    9940:	00bfff04 	movi	r2,-4
    9944:	9dadc83a 	sub	r22,r19,r22
    9948:	b1800117 	ldw	r6,4(r22)
    994c:	3084703a 	and	r2,r6,r2
    9950:	20002026 	beq	r4,zero,99d4 <_realloc_r+0x2cc>
    9954:	80af883a 	add	r23,r16,r2
    9958:	b96f883a 	add	r23,r23,r5
    995c:	21c05f26 	beq	r4,r7,9adc <_realloc_r+0x3d4>
    9960:	b8c01c16 	blt	r23,r3,99d4 <_realloc_r+0x2cc>
    9964:	20800317 	ldw	r2,12(r4)
    9968:	20c00217 	ldw	r3,8(r4)
    996c:	81bfff04 	addi	r6,r16,-4
    9970:	01000904 	movi	r4,36
    9974:	18800315 	stw	r2,12(r3)
    9978:	10c00215 	stw	r3,8(r2)
    997c:	b0c00217 	ldw	r3,8(r22)
    9980:	b0800317 	ldw	r2,12(r22)
    9984:	b4800204 	addi	r18,r22,8
    9988:	18800315 	stw	r2,12(r3)
    998c:	10c00215 	stw	r3,8(r2)
    9990:	21801b36 	bltu	r4,r6,9a00 <_realloc_r+0x2f8>
    9994:	008004c4 	movi	r2,19
    9998:	1180352e 	bgeu	r2,r6,9a70 <_realloc_r+0x368>
    999c:	a8800017 	ldw	r2,0(r21)
    99a0:	b0800215 	stw	r2,8(r22)
    99a4:	a8800117 	ldw	r2,4(r21)
    99a8:	b0800315 	stw	r2,12(r22)
    99ac:	008006c4 	movi	r2,27
    99b0:	11807f36 	bltu	r2,r6,9bb0 <_realloc_r+0x4a8>
    99b4:	b0800404 	addi	r2,r22,16
    99b8:	ad400204 	addi	r21,r21,8
    99bc:	00002d06 	br	9a74 <_realloc_r+0x36c>
    99c0:	adbffe17 	ldw	r22,-8(r21)
    99c4:	00bfff04 	movi	r2,-4
    99c8:	9dadc83a 	sub	r22,r19,r22
    99cc:	b1000117 	ldw	r4,4(r22)
    99d0:	2084703a 	and	r2,r4,r2
    99d4:	b03f7726 	beq	r22,zero,97b4 <__alt_data_end+0xfffd8a74>
    99d8:	80af883a 	add	r23,r16,r2
    99dc:	b8ff7516 	blt	r23,r3,97b4 <__alt_data_end+0xfffd8a74>
    99e0:	b0800317 	ldw	r2,12(r22)
    99e4:	b0c00217 	ldw	r3,8(r22)
    99e8:	81bfff04 	addi	r6,r16,-4
    99ec:	01000904 	movi	r4,36
    99f0:	18800315 	stw	r2,12(r3)
    99f4:	10c00215 	stw	r3,8(r2)
    99f8:	b4800204 	addi	r18,r22,8
    99fc:	21bfe52e 	bgeu	r4,r6,9994 <__alt_data_end+0xfffd8c54>
    9a00:	a80b883a 	mov	r5,r21
    9a04:	9009883a 	mov	r4,r18
    9a08:	000954c0 	call	954c <memmove>
    9a0c:	b821883a 	mov	r16,r23
    9a10:	b027883a 	mov	r19,r22
    9a14:	003f8a06 	br	9840 <__alt_data_end+0xfffd8b00>
    9a18:	300b883a 	mov	r5,r6
    9a1c:	dfc00917 	ldw	ra,36(sp)
    9a20:	df000817 	ldw	fp,32(sp)
    9a24:	ddc00717 	ldw	r23,28(sp)
    9a28:	dd800617 	ldw	r22,24(sp)
    9a2c:	dd400517 	ldw	r21,20(sp)
    9a30:	dd000417 	ldw	r20,16(sp)
    9a34:	dcc00317 	ldw	r19,12(sp)
    9a38:	dc800217 	ldw	r18,8(sp)
    9a3c:	dc400117 	ldw	r17,4(sp)
    9a40:	dc000017 	ldw	r16,0(sp)
    9a44:	dec00a04 	addi	sp,sp,40
    9a48:	00054501 	jmpi	5450 <_malloc_r>
    9a4c:	a8c00017 	ldw	r3,0(r21)
    9a50:	90c00015 	stw	r3,0(r18)
    9a54:	a8c00117 	ldw	r3,4(r21)
    9a58:	90c00115 	stw	r3,4(r18)
    9a5c:	00c006c4 	movi	r3,27
    9a60:	19804536 	bltu	r3,r6,9b78 <_realloc_r+0x470>
    9a64:	90800204 	addi	r2,r18,8
    9a68:	a8c00204 	addi	r3,r21,8
    9a6c:	003f6306 	br	97fc <__alt_data_end+0xfffd8abc>
    9a70:	9005883a 	mov	r2,r18
    9a74:	a8c00017 	ldw	r3,0(r21)
    9a78:	b821883a 	mov	r16,r23
    9a7c:	b027883a 	mov	r19,r22
    9a80:	10c00015 	stw	r3,0(r2)
    9a84:	a8c00117 	ldw	r3,4(r21)
    9a88:	10c00115 	stw	r3,4(r2)
    9a8c:	a8c00217 	ldw	r3,8(r21)
    9a90:	10c00215 	stw	r3,8(r2)
    9a94:	003f6a06 	br	9840 <__alt_data_end+0xfffd8b00>
    9a98:	9c67883a 	add	r19,r19,r17
    9a9c:	4445c83a 	sub	r2,r8,r17
    9aa0:	e4c00215 	stw	r19,8(fp)
    9aa4:	10800054 	ori	r2,r2,1
    9aa8:	98800115 	stw	r2,4(r19)
    9aac:	a8bfff17 	ldw	r2,-4(r21)
    9ab0:	a009883a 	mov	r4,r20
    9ab4:	1080004c 	andi	r2,r2,1
    9ab8:	1462b03a 	or	r17,r2,r17
    9abc:	ac7fff15 	stw	r17,-4(r21)
    9ac0:	000da480 	call	da48 <__malloc_unlock>
    9ac4:	a805883a 	mov	r2,r21
    9ac8:	003f6b06 	br	9878 <__alt_data_end+0xfffd8b38>
    9acc:	a80b883a 	mov	r5,r21
    9ad0:	9009883a 	mov	r4,r18
    9ad4:	000954c0 	call	954c <memmove>
    9ad8:	003f4e06 	br	9814 <__alt_data_end+0xfffd8ad4>
    9adc:	89000404 	addi	r4,r17,16
    9ae0:	b93fbc16 	blt	r23,r4,99d4 <__alt_data_end+0xfffd8c94>
    9ae4:	b0800317 	ldw	r2,12(r22)
    9ae8:	b0c00217 	ldw	r3,8(r22)
    9aec:	81bfff04 	addi	r6,r16,-4
    9af0:	01000904 	movi	r4,36
    9af4:	18800315 	stw	r2,12(r3)
    9af8:	10c00215 	stw	r3,8(r2)
    9afc:	b4800204 	addi	r18,r22,8
    9b00:	21804336 	bltu	r4,r6,9c10 <_realloc_r+0x508>
    9b04:	008004c4 	movi	r2,19
    9b08:	11803f2e 	bgeu	r2,r6,9c08 <_realloc_r+0x500>
    9b0c:	a8800017 	ldw	r2,0(r21)
    9b10:	b0800215 	stw	r2,8(r22)
    9b14:	a8800117 	ldw	r2,4(r21)
    9b18:	b0800315 	stw	r2,12(r22)
    9b1c:	008006c4 	movi	r2,27
    9b20:	11803f36 	bltu	r2,r6,9c20 <_realloc_r+0x518>
    9b24:	b0800404 	addi	r2,r22,16
    9b28:	ad400204 	addi	r21,r21,8
    9b2c:	a8c00017 	ldw	r3,0(r21)
    9b30:	10c00015 	stw	r3,0(r2)
    9b34:	a8c00117 	ldw	r3,4(r21)
    9b38:	10c00115 	stw	r3,4(r2)
    9b3c:	a8c00217 	ldw	r3,8(r21)
    9b40:	10c00215 	stw	r3,8(r2)
    9b44:	b447883a 	add	r3,r22,r17
    9b48:	bc45c83a 	sub	r2,r23,r17
    9b4c:	e0c00215 	stw	r3,8(fp)
    9b50:	10800054 	ori	r2,r2,1
    9b54:	18800115 	stw	r2,4(r3)
    9b58:	b0800117 	ldw	r2,4(r22)
    9b5c:	a009883a 	mov	r4,r20
    9b60:	1080004c 	andi	r2,r2,1
    9b64:	1462b03a 	or	r17,r2,r17
    9b68:	b4400115 	stw	r17,4(r22)
    9b6c:	000da480 	call	da48 <__malloc_unlock>
    9b70:	9005883a 	mov	r2,r18
    9b74:	003f4006 	br	9878 <__alt_data_end+0xfffd8b38>
    9b78:	a8c00217 	ldw	r3,8(r21)
    9b7c:	90c00215 	stw	r3,8(r18)
    9b80:	a8c00317 	ldw	r3,12(r21)
    9b84:	90c00315 	stw	r3,12(r18)
    9b88:	30801126 	beq	r6,r2,9bd0 <_realloc_r+0x4c8>
    9b8c:	90800404 	addi	r2,r18,16
    9b90:	a8c00404 	addi	r3,r21,16
    9b94:	003f1906 	br	97fc <__alt_data_end+0xfffd8abc>
    9b98:	90ffff17 	ldw	r3,-4(r18)
    9b9c:	00bfff04 	movi	r2,-4
    9ba0:	a825883a 	mov	r18,r21
    9ba4:	1884703a 	and	r2,r3,r2
    9ba8:	80a1883a 	add	r16,r16,r2
    9bac:	003f2406 	br	9840 <__alt_data_end+0xfffd8b00>
    9bb0:	a8800217 	ldw	r2,8(r21)
    9bb4:	b0800415 	stw	r2,16(r22)
    9bb8:	a8800317 	ldw	r2,12(r21)
    9bbc:	b0800515 	stw	r2,20(r22)
    9bc0:	31000a26 	beq	r6,r4,9bec <_realloc_r+0x4e4>
    9bc4:	b0800604 	addi	r2,r22,24
    9bc8:	ad400404 	addi	r21,r21,16
    9bcc:	003fa906 	br	9a74 <__alt_data_end+0xfffd8d34>
    9bd0:	a9000417 	ldw	r4,16(r21)
    9bd4:	90800604 	addi	r2,r18,24
    9bd8:	a8c00604 	addi	r3,r21,24
    9bdc:	91000415 	stw	r4,16(r18)
    9be0:	a9000517 	ldw	r4,20(r21)
    9be4:	91000515 	stw	r4,20(r18)
    9be8:	003f0406 	br	97fc <__alt_data_end+0xfffd8abc>
    9bec:	a8c00417 	ldw	r3,16(r21)
    9bf0:	ad400604 	addi	r21,r21,24
    9bf4:	b0800804 	addi	r2,r22,32
    9bf8:	b0c00615 	stw	r3,24(r22)
    9bfc:	a8ffff17 	ldw	r3,-4(r21)
    9c00:	b0c00715 	stw	r3,28(r22)
    9c04:	003f9b06 	br	9a74 <__alt_data_end+0xfffd8d34>
    9c08:	9005883a 	mov	r2,r18
    9c0c:	003fc706 	br	9b2c <__alt_data_end+0xfffd8dec>
    9c10:	a80b883a 	mov	r5,r21
    9c14:	9009883a 	mov	r4,r18
    9c18:	000954c0 	call	954c <memmove>
    9c1c:	003fc906 	br	9b44 <__alt_data_end+0xfffd8e04>
    9c20:	a8800217 	ldw	r2,8(r21)
    9c24:	b0800415 	stw	r2,16(r22)
    9c28:	a8800317 	ldw	r2,12(r21)
    9c2c:	b0800515 	stw	r2,20(r22)
    9c30:	31000726 	beq	r6,r4,9c50 <_realloc_r+0x548>
    9c34:	b0800604 	addi	r2,r22,24
    9c38:	ad400404 	addi	r21,r21,16
    9c3c:	003fbb06 	br	9b2c <__alt_data_end+0xfffd8dec>
    9c40:	a009883a 	mov	r4,r20
    9c44:	000da480 	call	da48 <__malloc_unlock>
    9c48:	0005883a 	mov	r2,zero
    9c4c:	003f0a06 	br	9878 <__alt_data_end+0xfffd8b38>
    9c50:	a8c00417 	ldw	r3,16(r21)
    9c54:	ad400604 	addi	r21,r21,24
    9c58:	b0800804 	addi	r2,r22,32
    9c5c:	b0c00615 	stw	r3,24(r22)
    9c60:	a8ffff17 	ldw	r3,-4(r21)
    9c64:	b0c00715 	stw	r3,28(r22)
    9c68:	003fb006 	br	9b2c <__alt_data_end+0xfffd8dec>

00009c6c <__swbuf_r>:
    9c6c:	defffb04 	addi	sp,sp,-20
    9c70:	dcc00315 	stw	r19,12(sp)
    9c74:	dc800215 	stw	r18,8(sp)
    9c78:	dc000015 	stw	r16,0(sp)
    9c7c:	dfc00415 	stw	ra,16(sp)
    9c80:	dc400115 	stw	r17,4(sp)
    9c84:	2025883a 	mov	r18,r4
    9c88:	2827883a 	mov	r19,r5
    9c8c:	3021883a 	mov	r16,r6
    9c90:	20000226 	beq	r4,zero,9c9c <__swbuf_r+0x30>
    9c94:	20800e17 	ldw	r2,56(r4)
    9c98:	10004226 	beq	r2,zero,9da4 <__swbuf_r+0x138>
    9c9c:	80800617 	ldw	r2,24(r16)
    9ca0:	8100030b 	ldhu	r4,12(r16)
    9ca4:	80800215 	stw	r2,8(r16)
    9ca8:	2080020c 	andi	r2,r4,8
    9cac:	10003626 	beq	r2,zero,9d88 <__swbuf_r+0x11c>
    9cb0:	80c00417 	ldw	r3,16(r16)
    9cb4:	18003426 	beq	r3,zero,9d88 <__swbuf_r+0x11c>
    9cb8:	2088000c 	andi	r2,r4,8192
    9cbc:	9c403fcc 	andi	r17,r19,255
    9cc0:	10001a26 	beq	r2,zero,9d2c <__swbuf_r+0xc0>
    9cc4:	80800017 	ldw	r2,0(r16)
    9cc8:	81000517 	ldw	r4,20(r16)
    9ccc:	10c7c83a 	sub	r3,r2,r3
    9cd0:	1900200e 	bge	r3,r4,9d54 <__swbuf_r+0xe8>
    9cd4:	18c00044 	addi	r3,r3,1
    9cd8:	81000217 	ldw	r4,8(r16)
    9cdc:	11400044 	addi	r5,r2,1
    9ce0:	81400015 	stw	r5,0(r16)
    9ce4:	213fffc4 	addi	r4,r4,-1
    9ce8:	81000215 	stw	r4,8(r16)
    9cec:	14c00005 	stb	r19,0(r2)
    9cf0:	80800517 	ldw	r2,20(r16)
    9cf4:	10c01e26 	beq	r2,r3,9d70 <__swbuf_r+0x104>
    9cf8:	8080030b 	ldhu	r2,12(r16)
    9cfc:	1080004c 	andi	r2,r2,1
    9d00:	10000226 	beq	r2,zero,9d0c <__swbuf_r+0xa0>
    9d04:	00800284 	movi	r2,10
    9d08:	88801926 	beq	r17,r2,9d70 <__swbuf_r+0x104>
    9d0c:	8805883a 	mov	r2,r17
    9d10:	dfc00417 	ldw	ra,16(sp)
    9d14:	dcc00317 	ldw	r19,12(sp)
    9d18:	dc800217 	ldw	r18,8(sp)
    9d1c:	dc400117 	ldw	r17,4(sp)
    9d20:	dc000017 	ldw	r16,0(sp)
    9d24:	dec00504 	addi	sp,sp,20
    9d28:	f800283a 	ret
    9d2c:	81401917 	ldw	r5,100(r16)
    9d30:	00b7ffc4 	movi	r2,-8193
    9d34:	21080014 	ori	r4,r4,8192
    9d38:	2884703a 	and	r2,r5,r2
    9d3c:	80801915 	stw	r2,100(r16)
    9d40:	80800017 	ldw	r2,0(r16)
    9d44:	8100030d 	sth	r4,12(r16)
    9d48:	81000517 	ldw	r4,20(r16)
    9d4c:	10c7c83a 	sub	r3,r2,r3
    9d50:	193fe016 	blt	r3,r4,9cd4 <__alt_data_end+0xfffd8f94>
    9d54:	800b883a 	mov	r5,r16
    9d58:	9009883a 	mov	r4,r18
    9d5c:	00047c00 	call	47c0 <_fflush_r>
    9d60:	1000071e 	bne	r2,zero,9d80 <__swbuf_r+0x114>
    9d64:	80800017 	ldw	r2,0(r16)
    9d68:	00c00044 	movi	r3,1
    9d6c:	003fda06 	br	9cd8 <__alt_data_end+0xfffd8f98>
    9d70:	800b883a 	mov	r5,r16
    9d74:	9009883a 	mov	r4,r18
    9d78:	00047c00 	call	47c0 <_fflush_r>
    9d7c:	103fe326 	beq	r2,zero,9d0c <__alt_data_end+0xfffd8fcc>
    9d80:	00bfffc4 	movi	r2,-1
    9d84:	003fe206 	br	9d10 <__alt_data_end+0xfffd8fd0>
    9d88:	800b883a 	mov	r5,r16
    9d8c:	9009883a 	mov	r4,r18
    9d90:	0002ba00 	call	2ba0 <__swsetup_r>
    9d94:	103ffa1e 	bne	r2,zero,9d80 <__alt_data_end+0xfffd9040>
    9d98:	8100030b 	ldhu	r4,12(r16)
    9d9c:	80c00417 	ldw	r3,16(r16)
    9da0:	003fc506 	br	9cb8 <__alt_data_end+0xfffd8f78>
    9da4:	0004bac0 	call	4bac <__sinit>
    9da8:	003fbc06 	br	9c9c <__alt_data_end+0xfffd8f5c>

00009dac <__swbuf>:
    9dac:	00800074 	movhi	r2,1
    9db0:	1082c704 	addi	r2,r2,2844
    9db4:	280d883a 	mov	r6,r5
    9db8:	200b883a 	mov	r5,r4
    9dbc:	11000017 	ldw	r4,0(r2)
    9dc0:	0009c6c1 	jmpi	9c6c <__swbuf_r>

00009dc4 <_wcrtomb_r>:
    9dc4:	defff604 	addi	sp,sp,-40
    9dc8:	00800074 	movhi	r2,1
    9dcc:	dc800815 	stw	r18,32(sp)
    9dd0:	dc400715 	stw	r17,28(sp)
    9dd4:	dc000615 	stw	r16,24(sp)
    9dd8:	1082cb04 	addi	r2,r2,2860
    9ddc:	dfc00915 	stw	ra,36(sp)
    9de0:	2021883a 	mov	r16,r4
    9de4:	3823883a 	mov	r17,r7
    9de8:	14800017 	ldw	r18,0(r2)
    9dec:	28001426 	beq	r5,zero,9e40 <_wcrtomb_r+0x7c>
    9df0:	d9400415 	stw	r5,16(sp)
    9df4:	d9800515 	stw	r6,20(sp)
    9df8:	00052340 	call	5234 <__locale_charset>
    9dfc:	d9800517 	ldw	r6,20(sp)
    9e00:	d9400417 	ldw	r5,16(sp)
    9e04:	100f883a 	mov	r7,r2
    9e08:	dc400015 	stw	r17,0(sp)
    9e0c:	8009883a 	mov	r4,r16
    9e10:	903ee83a 	callr	r18
    9e14:	00ffffc4 	movi	r3,-1
    9e18:	10c0031e 	bne	r2,r3,9e28 <_wcrtomb_r+0x64>
    9e1c:	88000015 	stw	zero,0(r17)
    9e20:	00c02284 	movi	r3,138
    9e24:	80c00015 	stw	r3,0(r16)
    9e28:	dfc00917 	ldw	ra,36(sp)
    9e2c:	dc800817 	ldw	r18,32(sp)
    9e30:	dc400717 	ldw	r17,28(sp)
    9e34:	dc000617 	ldw	r16,24(sp)
    9e38:	dec00a04 	addi	sp,sp,40
    9e3c:	f800283a 	ret
    9e40:	00052340 	call	5234 <__locale_charset>
    9e44:	100f883a 	mov	r7,r2
    9e48:	dc400015 	stw	r17,0(sp)
    9e4c:	000d883a 	mov	r6,zero
    9e50:	d9400104 	addi	r5,sp,4
    9e54:	8009883a 	mov	r4,r16
    9e58:	903ee83a 	callr	r18
    9e5c:	003fed06 	br	9e14 <__alt_data_end+0xfffd90d4>

00009e60 <wcrtomb>:
    9e60:	defff604 	addi	sp,sp,-40
    9e64:	00800074 	movhi	r2,1
    9e68:	dc800615 	stw	r18,24(sp)
    9e6c:	dc400515 	stw	r17,20(sp)
    9e70:	1082c704 	addi	r2,r2,2844
    9e74:	dfc00915 	stw	ra,36(sp)
    9e78:	dd000815 	stw	r20,32(sp)
    9e7c:	dcc00715 	stw	r19,28(sp)
    9e80:	dc000415 	stw	r16,16(sp)
    9e84:	3025883a 	mov	r18,r6
    9e88:	14400017 	ldw	r17,0(r2)
    9e8c:	20001926 	beq	r4,zero,9ef4 <wcrtomb+0x94>
    9e90:	00800074 	movhi	r2,1
    9e94:	1082cb04 	addi	r2,r2,2860
    9e98:	15000017 	ldw	r20,0(r2)
    9e9c:	2021883a 	mov	r16,r4
    9ea0:	2827883a 	mov	r19,r5
    9ea4:	00052340 	call	5234 <__locale_charset>
    9ea8:	100f883a 	mov	r7,r2
    9eac:	dc800015 	stw	r18,0(sp)
    9eb0:	980d883a 	mov	r6,r19
    9eb4:	800b883a 	mov	r5,r16
    9eb8:	8809883a 	mov	r4,r17
    9ebc:	a03ee83a 	callr	r20
    9ec0:	00ffffc4 	movi	r3,-1
    9ec4:	10c0031e 	bne	r2,r3,9ed4 <wcrtomb+0x74>
    9ec8:	90000015 	stw	zero,0(r18)
    9ecc:	00c02284 	movi	r3,138
    9ed0:	88c00015 	stw	r3,0(r17)
    9ed4:	dfc00917 	ldw	ra,36(sp)
    9ed8:	dd000817 	ldw	r20,32(sp)
    9edc:	dcc00717 	ldw	r19,28(sp)
    9ee0:	dc800617 	ldw	r18,24(sp)
    9ee4:	dc400517 	ldw	r17,20(sp)
    9ee8:	dc000417 	ldw	r16,16(sp)
    9eec:	dec00a04 	addi	sp,sp,40
    9ef0:	f800283a 	ret
    9ef4:	00800074 	movhi	r2,1
    9ef8:	1082cb04 	addi	r2,r2,2860
    9efc:	14000017 	ldw	r16,0(r2)
    9f00:	00052340 	call	5234 <__locale_charset>
    9f04:	100f883a 	mov	r7,r2
    9f08:	dc800015 	stw	r18,0(sp)
    9f0c:	000d883a 	mov	r6,zero
    9f10:	d9400104 	addi	r5,sp,4
    9f14:	8809883a 	mov	r4,r17
    9f18:	803ee83a 	callr	r16
    9f1c:	003fe806 	br	9ec0 <__alt_data_end+0xfffd9180>

00009f20 <__ascii_wctomb>:
    9f20:	28000526 	beq	r5,zero,9f38 <__ascii_wctomb+0x18>
    9f24:	00803fc4 	movi	r2,255
    9f28:	11800536 	bltu	r2,r6,9f40 <__ascii_wctomb+0x20>
    9f2c:	29800005 	stb	r6,0(r5)
    9f30:	00800044 	movi	r2,1
    9f34:	f800283a 	ret
    9f38:	0005883a 	mov	r2,zero
    9f3c:	f800283a 	ret
    9f40:	00802284 	movi	r2,138
    9f44:	20800015 	stw	r2,0(r4)
    9f48:	00bfffc4 	movi	r2,-1
    9f4c:	f800283a 	ret

00009f50 <_wctomb_r>:
    9f50:	00800074 	movhi	r2,1
    9f54:	defff904 	addi	sp,sp,-28
    9f58:	1082cb04 	addi	r2,r2,2860
    9f5c:	dfc00615 	stw	ra,24(sp)
    9f60:	dc400515 	stw	r17,20(sp)
    9f64:	dc000415 	stw	r16,16(sp)
    9f68:	3823883a 	mov	r17,r7
    9f6c:	14000017 	ldw	r16,0(r2)
    9f70:	d9000115 	stw	r4,4(sp)
    9f74:	d9400215 	stw	r5,8(sp)
    9f78:	d9800315 	stw	r6,12(sp)
    9f7c:	00052340 	call	5234 <__locale_charset>
    9f80:	d9800317 	ldw	r6,12(sp)
    9f84:	d9400217 	ldw	r5,8(sp)
    9f88:	d9000117 	ldw	r4,4(sp)
    9f8c:	100f883a 	mov	r7,r2
    9f90:	dc400015 	stw	r17,0(sp)
    9f94:	803ee83a 	callr	r16
    9f98:	dfc00617 	ldw	ra,24(sp)
    9f9c:	dc400517 	ldw	r17,20(sp)
    9fa0:	dc000417 	ldw	r16,16(sp)
    9fa4:	dec00704 	addi	sp,sp,28
    9fa8:	f800283a 	ret

00009fac <__udivdi3>:
    9fac:	defff404 	addi	sp,sp,-48
    9fb0:	dcc00515 	stw	r19,20(sp)
    9fb4:	dc000215 	stw	r16,8(sp)
    9fb8:	dfc00b15 	stw	ra,44(sp)
    9fbc:	df000a15 	stw	fp,40(sp)
    9fc0:	ddc00915 	stw	r23,36(sp)
    9fc4:	dd800815 	stw	r22,32(sp)
    9fc8:	dd400715 	stw	r21,28(sp)
    9fcc:	dd000615 	stw	r20,24(sp)
    9fd0:	dc800415 	stw	r18,16(sp)
    9fd4:	dc400315 	stw	r17,12(sp)
    9fd8:	2027883a 	mov	r19,r4
    9fdc:	2821883a 	mov	r16,r5
    9fe0:	3800461e 	bne	r7,zero,a0fc <__udivdi3+0x150>
    9fe4:	3023883a 	mov	r17,r6
    9fe8:	2025883a 	mov	r18,r4
    9fec:	2980572e 	bgeu	r5,r6,a14c <__udivdi3+0x1a0>
    9ff0:	00bfffd4 	movui	r2,65535
    9ff4:	282d883a 	mov	r22,r5
    9ff8:	1180b236 	bltu	r2,r6,a2c4 <__udivdi3+0x318>
    9ffc:	00803fc4 	movi	r2,255
    a000:	1185803a 	cmpltu	r2,r2,r6
    a004:	100490fa 	slli	r2,r2,3
    a008:	3086d83a 	srl	r3,r6,r2
    a00c:	01000074 	movhi	r4,1
    a010:	213bc104 	addi	r4,r4,-4348
    a014:	20c7883a 	add	r3,r4,r3
    a018:	18c00003 	ldbu	r3,0(r3)
    a01c:	1885883a 	add	r2,r3,r2
    a020:	00c00804 	movi	r3,32
    a024:	1887c83a 	sub	r3,r3,r2
    a028:	18000526 	beq	r3,zero,a040 <__udivdi3+0x94>
    a02c:	80e0983a 	sll	r16,r16,r3
    a030:	9884d83a 	srl	r2,r19,r2
    a034:	30e2983a 	sll	r17,r6,r3
    a038:	98e4983a 	sll	r18,r19,r3
    a03c:	142cb03a 	or	r22,r2,r16
    a040:	882ad43a 	srli	r21,r17,16
    a044:	b009883a 	mov	r4,r22
    a048:	8d3fffcc 	andi	r20,r17,65535
    a04c:	a80b883a 	mov	r5,r21
    a050:	00007280 	call	728 <__umodsi3>
    a054:	b009883a 	mov	r4,r22
    a058:	a80b883a 	mov	r5,r21
    a05c:	1027883a 	mov	r19,r2
    a060:	00006c40 	call	6c4 <__udivsi3>
    a064:	100b883a 	mov	r5,r2
    a068:	a009883a 	mov	r4,r20
    a06c:	102d883a 	mov	r22,r2
    a070:	000ab6c0 	call	ab6c <__mulsi3>
    a074:	9826943a 	slli	r19,r19,16
    a078:	9006d43a 	srli	r3,r18,16
    a07c:	1cc6b03a 	or	r3,r3,r19
    a080:	1880052e 	bgeu	r3,r2,a098 <__udivdi3+0xec>
    a084:	1c47883a 	add	r3,r3,r17
    a088:	b13fffc4 	addi	r4,r22,-1
    a08c:	1c400136 	bltu	r3,r17,a094 <__udivdi3+0xe8>
    a090:	18814236 	bltu	r3,r2,a59c <__udivdi3+0x5f0>
    a094:	202d883a 	mov	r22,r4
    a098:	18a1c83a 	sub	r16,r3,r2
    a09c:	8009883a 	mov	r4,r16
    a0a0:	a80b883a 	mov	r5,r21
    a0a4:	00007280 	call	728 <__umodsi3>
    a0a8:	1027883a 	mov	r19,r2
    a0ac:	8009883a 	mov	r4,r16
    a0b0:	a80b883a 	mov	r5,r21
    a0b4:	9826943a 	slli	r19,r19,16
    a0b8:	00006c40 	call	6c4 <__udivsi3>
    a0bc:	100b883a 	mov	r5,r2
    a0c0:	a009883a 	mov	r4,r20
    a0c4:	94bfffcc 	andi	r18,r18,65535
    a0c8:	1021883a 	mov	r16,r2
    a0cc:	94e4b03a 	or	r18,r18,r19
    a0d0:	000ab6c0 	call	ab6c <__mulsi3>
    a0d4:	9080052e 	bgeu	r18,r2,a0ec <__udivdi3+0x140>
    a0d8:	8ca5883a 	add	r18,r17,r18
    a0dc:	80ffffc4 	addi	r3,r16,-1
    a0e0:	94410c36 	bltu	r18,r17,a514 <__udivdi3+0x568>
    a0e4:	90810b2e 	bgeu	r18,r2,a514 <__udivdi3+0x568>
    a0e8:	843fff84 	addi	r16,r16,-2
    a0ec:	b004943a 	slli	r2,r22,16
    a0f0:	0007883a 	mov	r3,zero
    a0f4:	1404b03a 	or	r2,r2,r16
    a0f8:	00005e06 	br	a274 <__udivdi3+0x2c8>
    a0fc:	29c05b36 	bltu	r5,r7,a26c <__udivdi3+0x2c0>
    a100:	00bfffd4 	movui	r2,65535
    a104:	11c0672e 	bgeu	r2,r7,a2a4 <__udivdi3+0x2f8>
    a108:	00804034 	movhi	r2,256
    a10c:	10bfffc4 	addi	r2,r2,-1
    a110:	11c10a36 	bltu	r2,r7,a53c <__udivdi3+0x590>
    a114:	00800404 	movi	r2,16
    a118:	3886d83a 	srl	r3,r7,r2
    a11c:	01000074 	movhi	r4,1
    a120:	213bc104 	addi	r4,r4,-4348
    a124:	20c7883a 	add	r3,r4,r3
    a128:	18c00003 	ldbu	r3,0(r3)
    a12c:	05c00804 	movi	r23,32
    a130:	1885883a 	add	r2,r3,r2
    a134:	b8afc83a 	sub	r23,r23,r2
    a138:	b800671e 	bne	r23,zero,a2d8 <__udivdi3+0x32c>
    a13c:	3c010536 	bltu	r7,r16,a554 <__udivdi3+0x5a8>
    a140:	9985403a 	cmpgeu	r2,r19,r6
    a144:	0007883a 	mov	r3,zero
    a148:	00004a06 	br	a274 <__udivdi3+0x2c8>
    a14c:	3000041e 	bne	r6,zero,a160 <__udivdi3+0x1b4>
    a150:	000b883a 	mov	r5,zero
    a154:	01000044 	movi	r4,1
    a158:	00006c40 	call	6c4 <__udivsi3>
    a15c:	1023883a 	mov	r17,r2
    a160:	00bfffd4 	movui	r2,65535
    a164:	1440532e 	bgeu	r2,r17,a2b4 <__udivdi3+0x308>
    a168:	00804034 	movhi	r2,256
    a16c:	10bfffc4 	addi	r2,r2,-1
    a170:	1440f436 	bltu	r2,r17,a544 <__udivdi3+0x598>
    a174:	00800404 	movi	r2,16
    a178:	8886d83a 	srl	r3,r17,r2
    a17c:	01000074 	movhi	r4,1
    a180:	213bc104 	addi	r4,r4,-4348
    a184:	20c7883a 	add	r3,r4,r3
    a188:	18c00003 	ldbu	r3,0(r3)
    a18c:	1885883a 	add	r2,r3,r2
    a190:	00c00804 	movi	r3,32
    a194:	1887c83a 	sub	r3,r3,r2
    a198:	1800a51e 	bne	r3,zero,a430 <__udivdi3+0x484>
    a19c:	882ad43a 	srli	r21,r17,16
    a1a0:	8461c83a 	sub	r16,r16,r17
    a1a4:	8d3fffcc 	andi	r20,r17,65535
    a1a8:	00c00044 	movi	r3,1
    a1ac:	a80b883a 	mov	r5,r21
    a1b0:	8009883a 	mov	r4,r16
    a1b4:	d8c00115 	stw	r3,4(sp)
    a1b8:	00007280 	call	728 <__umodsi3>
    a1bc:	a80b883a 	mov	r5,r21
    a1c0:	8009883a 	mov	r4,r16
    a1c4:	1027883a 	mov	r19,r2
    a1c8:	00006c40 	call	6c4 <__udivsi3>
    a1cc:	a00b883a 	mov	r5,r20
    a1d0:	1009883a 	mov	r4,r2
    a1d4:	102d883a 	mov	r22,r2
    a1d8:	000ab6c0 	call	ab6c <__mulsi3>
    a1dc:	9826943a 	slli	r19,r19,16
    a1e0:	900ed43a 	srli	r7,r18,16
    a1e4:	d8c00117 	ldw	r3,4(sp)
    a1e8:	3cceb03a 	or	r7,r7,r19
    a1ec:	3880052e 	bgeu	r7,r2,a204 <__udivdi3+0x258>
    a1f0:	3c4f883a 	add	r7,r7,r17
    a1f4:	b13fffc4 	addi	r4,r22,-1
    a1f8:	3c400136 	bltu	r7,r17,a200 <__udivdi3+0x254>
    a1fc:	3880e436 	bltu	r7,r2,a590 <__udivdi3+0x5e4>
    a200:	202d883a 	mov	r22,r4
    a204:	38a1c83a 	sub	r16,r7,r2
    a208:	8009883a 	mov	r4,r16
    a20c:	a80b883a 	mov	r5,r21
    a210:	d8c00115 	stw	r3,4(sp)
    a214:	00007280 	call	728 <__umodsi3>
    a218:	1027883a 	mov	r19,r2
    a21c:	8009883a 	mov	r4,r16
    a220:	a80b883a 	mov	r5,r21
    a224:	9826943a 	slli	r19,r19,16
    a228:	00006c40 	call	6c4 <__udivsi3>
    a22c:	a00b883a 	mov	r5,r20
    a230:	1009883a 	mov	r4,r2
    a234:	94bfffcc 	andi	r18,r18,65535
    a238:	1021883a 	mov	r16,r2
    a23c:	94e4b03a 	or	r18,r18,r19
    a240:	000ab6c0 	call	ab6c <__mulsi3>
    a244:	d8c00117 	ldw	r3,4(sp)
    a248:	9080052e 	bgeu	r18,r2,a260 <__udivdi3+0x2b4>
    a24c:	8ca5883a 	add	r18,r17,r18
    a250:	813fffc4 	addi	r4,r16,-1
    a254:	9440ad36 	bltu	r18,r17,a50c <__udivdi3+0x560>
    a258:	9080ac2e 	bgeu	r18,r2,a50c <__udivdi3+0x560>
    a25c:	843fff84 	addi	r16,r16,-2
    a260:	b004943a 	slli	r2,r22,16
    a264:	1404b03a 	or	r2,r2,r16
    a268:	00000206 	br	a274 <__udivdi3+0x2c8>
    a26c:	0007883a 	mov	r3,zero
    a270:	0005883a 	mov	r2,zero
    a274:	dfc00b17 	ldw	ra,44(sp)
    a278:	df000a17 	ldw	fp,40(sp)
    a27c:	ddc00917 	ldw	r23,36(sp)
    a280:	dd800817 	ldw	r22,32(sp)
    a284:	dd400717 	ldw	r21,28(sp)
    a288:	dd000617 	ldw	r20,24(sp)
    a28c:	dcc00517 	ldw	r19,20(sp)
    a290:	dc800417 	ldw	r18,16(sp)
    a294:	dc400317 	ldw	r17,12(sp)
    a298:	dc000217 	ldw	r16,8(sp)
    a29c:	dec00c04 	addi	sp,sp,48
    a2a0:	f800283a 	ret
    a2a4:	00803fc4 	movi	r2,255
    a2a8:	11c5803a 	cmpltu	r2,r2,r7
    a2ac:	100490fa 	slli	r2,r2,3
    a2b0:	003f9906 	br	a118 <__alt_data_end+0xfffd93d8>
    a2b4:	00803fc4 	movi	r2,255
    a2b8:	1445803a 	cmpltu	r2,r2,r17
    a2bc:	100490fa 	slli	r2,r2,3
    a2c0:	003fad06 	br	a178 <__alt_data_end+0xfffd9438>
    a2c4:	00804034 	movhi	r2,256
    a2c8:	10bfffc4 	addi	r2,r2,-1
    a2cc:	11809f36 	bltu	r2,r6,a54c <__udivdi3+0x5a0>
    a2d0:	00800404 	movi	r2,16
    a2d4:	003f4c06 	br	a008 <__alt_data_end+0xfffd92c8>
    a2d8:	3dce983a 	sll	r7,r7,r23
    a2dc:	30b8d83a 	srl	fp,r6,r2
    a2e0:	80a2d83a 	srl	r17,r16,r2
    a2e4:	35cc983a 	sll	r6,r6,r23
    a2e8:	3f38b03a 	or	fp,r7,fp
    a2ec:	e024d43a 	srli	r18,fp,16
    a2f0:	9884d83a 	srl	r2,r19,r2
    a2f4:	85e0983a 	sll	r16,r16,r23
    a2f8:	8809883a 	mov	r4,r17
    a2fc:	900b883a 	mov	r5,r18
    a300:	d9800015 	stw	r6,0(sp)
    a304:	1420b03a 	or	r16,r2,r16
    a308:	00007280 	call	728 <__umodsi3>
    a30c:	900b883a 	mov	r5,r18
    a310:	8809883a 	mov	r4,r17
    a314:	1029883a 	mov	r20,r2
    a318:	e5bfffcc 	andi	r22,fp,65535
    a31c:	00006c40 	call	6c4 <__udivsi3>
    a320:	100b883a 	mov	r5,r2
    a324:	b009883a 	mov	r4,r22
    a328:	102b883a 	mov	r21,r2
    a32c:	000ab6c0 	call	ab6c <__mulsi3>
    a330:	a028943a 	slli	r20,r20,16
    a334:	8006d43a 	srli	r3,r16,16
    a338:	1d06b03a 	or	r3,r3,r20
    a33c:	1880042e 	bgeu	r3,r2,a350 <__udivdi3+0x3a4>
    a340:	1f07883a 	add	r3,r3,fp
    a344:	a93fffc4 	addi	r4,r21,-1
    a348:	1f00892e 	bgeu	r3,fp,a570 <__udivdi3+0x5c4>
    a34c:	202b883a 	mov	r21,r4
    a350:	18a3c83a 	sub	r17,r3,r2
    a354:	8809883a 	mov	r4,r17
    a358:	900b883a 	mov	r5,r18
    a35c:	00007280 	call	728 <__umodsi3>
    a360:	1029883a 	mov	r20,r2
    a364:	8809883a 	mov	r4,r17
    a368:	900b883a 	mov	r5,r18
    a36c:	a028943a 	slli	r20,r20,16
    a370:	00006c40 	call	6c4 <__udivsi3>
    a374:	100b883a 	mov	r5,r2
    a378:	b009883a 	mov	r4,r22
    a37c:	843fffcc 	andi	r16,r16,65535
    a380:	1023883a 	mov	r17,r2
    a384:	8520b03a 	or	r16,r16,r20
    a388:	000ab6c0 	call	ab6c <__mulsi3>
    a38c:	8080042e 	bgeu	r16,r2,a3a0 <__udivdi3+0x3f4>
    a390:	8721883a 	add	r16,r16,fp
    a394:	88ffffc4 	addi	r3,r17,-1
    a398:	8700712e 	bgeu	r16,fp,a560 <__udivdi3+0x5b4>
    a39c:	1823883a 	mov	r17,r3
    a3a0:	a80e943a 	slli	r7,r21,16
    a3a4:	d8c00017 	ldw	r3,0(sp)
    a3a8:	80a1c83a 	sub	r16,r16,r2
    a3ac:	3c64b03a 	or	r18,r7,r17
    a3b0:	1d3fffcc 	andi	r20,r3,65535
    a3b4:	9022d43a 	srli	r17,r18,16
    a3b8:	95bfffcc 	andi	r22,r18,65535
    a3bc:	a00b883a 	mov	r5,r20
    a3c0:	b009883a 	mov	r4,r22
    a3c4:	182ad43a 	srli	r21,r3,16
    a3c8:	000ab6c0 	call	ab6c <__mulsi3>
    a3cc:	a00b883a 	mov	r5,r20
    a3d0:	8809883a 	mov	r4,r17
    a3d4:	1039883a 	mov	fp,r2
    a3d8:	000ab6c0 	call	ab6c <__mulsi3>
    a3dc:	8809883a 	mov	r4,r17
    a3e0:	a80b883a 	mov	r5,r21
    a3e4:	1029883a 	mov	r20,r2
    a3e8:	000ab6c0 	call	ab6c <__mulsi3>
    a3ec:	a80b883a 	mov	r5,r21
    a3f0:	b009883a 	mov	r4,r22
    a3f4:	1023883a 	mov	r17,r2
    a3f8:	000ab6c0 	call	ab6c <__mulsi3>
    a3fc:	e006d43a 	srli	r3,fp,16
    a400:	1505883a 	add	r2,r2,r20
    a404:	1887883a 	add	r3,r3,r2
    a408:	1d00022e 	bgeu	r3,r20,a414 <__udivdi3+0x468>
    a40c:	00800074 	movhi	r2,1
    a410:	88a3883a 	add	r17,r17,r2
    a414:	1804d43a 	srli	r2,r3,16
    a418:	1463883a 	add	r17,r2,r17
    a41c:	84404436 	bltu	r16,r17,a530 <__udivdi3+0x584>
    a420:	84403e26 	beq	r16,r17,a51c <__udivdi3+0x570>
    a424:	9005883a 	mov	r2,r18
    a428:	0007883a 	mov	r3,zero
    a42c:	003f9106 	br	a274 <__alt_data_end+0xfffd9534>
    a430:	88e2983a 	sll	r17,r17,r3
    a434:	80aed83a 	srl	r23,r16,r2
    a438:	80e0983a 	sll	r16,r16,r3
    a43c:	882ad43a 	srli	r21,r17,16
    a440:	9884d83a 	srl	r2,r19,r2
    a444:	b809883a 	mov	r4,r23
    a448:	a80b883a 	mov	r5,r21
    a44c:	98e4983a 	sll	r18,r19,r3
    a450:	142cb03a 	or	r22,r2,r16
    a454:	00007280 	call	728 <__umodsi3>
    a458:	b809883a 	mov	r4,r23
    a45c:	a80b883a 	mov	r5,r21
    a460:	1027883a 	mov	r19,r2
    a464:	8d3fffcc 	andi	r20,r17,65535
    a468:	00006c40 	call	6c4 <__udivsi3>
    a46c:	a009883a 	mov	r4,r20
    a470:	100b883a 	mov	r5,r2
    a474:	102f883a 	mov	r23,r2
    a478:	000ab6c0 	call	ab6c <__mulsi3>
    a47c:	9826943a 	slli	r19,r19,16
    a480:	b008d43a 	srli	r4,r22,16
    a484:	24c8b03a 	or	r4,r4,r19
    a488:	2080062e 	bgeu	r4,r2,a4a4 <__udivdi3+0x4f8>
    a48c:	2449883a 	add	r4,r4,r17
    a490:	b8ffffc4 	addi	r3,r23,-1
    a494:	24403c36 	bltu	r4,r17,a588 <__udivdi3+0x5dc>
    a498:	20803b2e 	bgeu	r4,r2,a588 <__udivdi3+0x5dc>
    a49c:	bdffff84 	addi	r23,r23,-2
    a4a0:	2449883a 	add	r4,r4,r17
    a4a4:	20a1c83a 	sub	r16,r4,r2
    a4a8:	a80b883a 	mov	r5,r21
    a4ac:	8009883a 	mov	r4,r16
    a4b0:	00007280 	call	728 <__umodsi3>
    a4b4:	a80b883a 	mov	r5,r21
    a4b8:	8009883a 	mov	r4,r16
    a4bc:	1027883a 	mov	r19,r2
    a4c0:	00006c40 	call	6c4 <__udivsi3>
    a4c4:	a009883a 	mov	r4,r20
    a4c8:	100b883a 	mov	r5,r2
    a4cc:	9826943a 	slli	r19,r19,16
    a4d0:	1039883a 	mov	fp,r2
    a4d4:	000ab6c0 	call	ab6c <__mulsi3>
    a4d8:	b13fffcc 	andi	r4,r22,65535
    a4dc:	24c8b03a 	or	r4,r4,r19
    a4e0:	2080062e 	bgeu	r4,r2,a4fc <__udivdi3+0x550>
    a4e4:	2449883a 	add	r4,r4,r17
    a4e8:	e0ffffc4 	addi	r3,fp,-1
    a4ec:	24402436 	bltu	r4,r17,a580 <__udivdi3+0x5d4>
    a4f0:	2080232e 	bgeu	r4,r2,a580 <__udivdi3+0x5d4>
    a4f4:	e73fff84 	addi	fp,fp,-2
    a4f8:	2449883a 	add	r4,r4,r17
    a4fc:	b82e943a 	slli	r23,r23,16
    a500:	20a1c83a 	sub	r16,r4,r2
    a504:	bf06b03a 	or	r3,r23,fp
    a508:	003f2806 	br	a1ac <__alt_data_end+0xfffd946c>
    a50c:	2021883a 	mov	r16,r4
    a510:	003f5306 	br	a260 <__alt_data_end+0xfffd9520>
    a514:	1821883a 	mov	r16,r3
    a518:	003ef406 	br	a0ec <__alt_data_end+0xfffd93ac>
    a51c:	1806943a 	slli	r3,r3,16
    a520:	9de6983a 	sll	r19,r19,r23
    a524:	e73fffcc 	andi	fp,fp,65535
    a528:	1f07883a 	add	r3,r3,fp
    a52c:	98ffbd2e 	bgeu	r19,r3,a424 <__alt_data_end+0xfffd96e4>
    a530:	90bfffc4 	addi	r2,r18,-1
    a534:	0007883a 	mov	r3,zero
    a538:	003f4e06 	br	a274 <__alt_data_end+0xfffd9534>
    a53c:	00800604 	movi	r2,24
    a540:	003ef506 	br	a118 <__alt_data_end+0xfffd93d8>
    a544:	00800604 	movi	r2,24
    a548:	003f0b06 	br	a178 <__alt_data_end+0xfffd9438>
    a54c:	00800604 	movi	r2,24
    a550:	003ead06 	br	a008 <__alt_data_end+0xfffd92c8>
    a554:	0007883a 	mov	r3,zero
    a558:	00800044 	movi	r2,1
    a55c:	003f4506 	br	a274 <__alt_data_end+0xfffd9534>
    a560:	80bf8e2e 	bgeu	r16,r2,a39c <__alt_data_end+0xfffd965c>
    a564:	8c7fff84 	addi	r17,r17,-2
    a568:	8721883a 	add	r16,r16,fp
    a56c:	003f8c06 	br	a3a0 <__alt_data_end+0xfffd9660>
    a570:	18bf762e 	bgeu	r3,r2,a34c <__alt_data_end+0xfffd960c>
    a574:	ad7fff84 	addi	r21,r21,-2
    a578:	1f07883a 	add	r3,r3,fp
    a57c:	003f7406 	br	a350 <__alt_data_end+0xfffd9610>
    a580:	1839883a 	mov	fp,r3
    a584:	003fdd06 	br	a4fc <__alt_data_end+0xfffd97bc>
    a588:	182f883a 	mov	r23,r3
    a58c:	003fc506 	br	a4a4 <__alt_data_end+0xfffd9764>
    a590:	b5bfff84 	addi	r22,r22,-2
    a594:	3c4f883a 	add	r7,r7,r17
    a598:	003f1a06 	br	a204 <__alt_data_end+0xfffd94c4>
    a59c:	b5bfff84 	addi	r22,r22,-2
    a5a0:	1c47883a 	add	r3,r3,r17
    a5a4:	003ebc06 	br	a098 <__alt_data_end+0xfffd9358>

0000a5a8 <__umoddi3>:
    a5a8:	defff304 	addi	sp,sp,-52
    a5ac:	df000b15 	stw	fp,44(sp)
    a5b0:	dc400415 	stw	r17,16(sp)
    a5b4:	dc000315 	stw	r16,12(sp)
    a5b8:	dfc00c15 	stw	ra,48(sp)
    a5bc:	ddc00a15 	stw	r23,40(sp)
    a5c0:	dd800915 	stw	r22,36(sp)
    a5c4:	dd400815 	stw	r21,32(sp)
    a5c8:	dd000715 	stw	r20,28(sp)
    a5cc:	dcc00615 	stw	r19,24(sp)
    a5d0:	dc800515 	stw	r18,20(sp)
    a5d4:	2021883a 	mov	r16,r4
    a5d8:	2823883a 	mov	r17,r5
    a5dc:	2839883a 	mov	fp,r5
    a5e0:	3800401e 	bne	r7,zero,a6e4 <__umoddi3+0x13c>
    a5e4:	3027883a 	mov	r19,r6
    a5e8:	2029883a 	mov	r20,r4
    a5ec:	2980552e 	bgeu	r5,r6,a744 <__umoddi3+0x19c>
    a5f0:	00bfffd4 	movui	r2,65535
    a5f4:	1180a236 	bltu	r2,r6,a880 <__umoddi3+0x2d8>
    a5f8:	01003fc4 	movi	r4,255
    a5fc:	2189803a 	cmpltu	r4,r4,r6
    a600:	200890fa 	slli	r4,r4,3
    a604:	3104d83a 	srl	r2,r6,r4
    a608:	00c00074 	movhi	r3,1
    a60c:	18fbc104 	addi	r3,r3,-4348
    a610:	1885883a 	add	r2,r3,r2
    a614:	10c00003 	ldbu	r3,0(r2)
    a618:	00800804 	movi	r2,32
    a61c:	1909883a 	add	r4,r3,r4
    a620:	1125c83a 	sub	r18,r2,r4
    a624:	90000526 	beq	r18,zero,a63c <__umoddi3+0x94>
    a628:	8ca2983a 	sll	r17,r17,r18
    a62c:	8108d83a 	srl	r4,r16,r4
    a630:	34a6983a 	sll	r19,r6,r18
    a634:	84a8983a 	sll	r20,r16,r18
    a638:	2478b03a 	or	fp,r4,r17
    a63c:	982cd43a 	srli	r22,r19,16
    a640:	e009883a 	mov	r4,fp
    a644:	9dffffcc 	andi	r23,r19,65535
    a648:	b00b883a 	mov	r5,r22
    a64c:	00007280 	call	728 <__umodsi3>
    a650:	b00b883a 	mov	r5,r22
    a654:	e009883a 	mov	r4,fp
    a658:	102b883a 	mov	r21,r2
    a65c:	00006c40 	call	6c4 <__udivsi3>
    a660:	100b883a 	mov	r5,r2
    a664:	b809883a 	mov	r4,r23
    a668:	000ab6c0 	call	ab6c <__mulsi3>
    a66c:	a82a943a 	slli	r21,r21,16
    a670:	a006d43a 	srli	r3,r20,16
    a674:	1d46b03a 	or	r3,r3,r21
    a678:	1880032e 	bgeu	r3,r2,a688 <__umoddi3+0xe0>
    a67c:	1cc7883a 	add	r3,r3,r19
    a680:	1cc00136 	bltu	r3,r19,a688 <__umoddi3+0xe0>
    a684:	18813136 	bltu	r3,r2,ab4c <__umoddi3+0x5a4>
    a688:	18a1c83a 	sub	r16,r3,r2
    a68c:	b00b883a 	mov	r5,r22
    a690:	8009883a 	mov	r4,r16
    a694:	00007280 	call	728 <__umodsi3>
    a698:	b00b883a 	mov	r5,r22
    a69c:	8009883a 	mov	r4,r16
    a6a0:	1023883a 	mov	r17,r2
    a6a4:	00006c40 	call	6c4 <__udivsi3>
    a6a8:	100b883a 	mov	r5,r2
    a6ac:	b809883a 	mov	r4,r23
    a6b0:	8822943a 	slli	r17,r17,16
    a6b4:	000ab6c0 	call	ab6c <__mulsi3>
    a6b8:	a0ffffcc 	andi	r3,r20,65535
    a6bc:	1c46b03a 	or	r3,r3,r17
    a6c0:	1880042e 	bgeu	r3,r2,a6d4 <__umoddi3+0x12c>
    a6c4:	1cc7883a 	add	r3,r3,r19
    a6c8:	1cc00236 	bltu	r3,r19,a6d4 <__umoddi3+0x12c>
    a6cc:	1880012e 	bgeu	r3,r2,a6d4 <__umoddi3+0x12c>
    a6d0:	1cc7883a 	add	r3,r3,r19
    a6d4:	1885c83a 	sub	r2,r3,r2
    a6d8:	1484d83a 	srl	r2,r2,r18
    a6dc:	0007883a 	mov	r3,zero
    a6e0:	00005306 	br	a830 <__umoddi3+0x288>
    a6e4:	29c05036 	bltu	r5,r7,a828 <__umoddi3+0x280>
    a6e8:	00bfffd4 	movui	r2,65535
    a6ec:	11c05c2e 	bgeu	r2,r7,a860 <__umoddi3+0x2b8>
    a6f0:	00804034 	movhi	r2,256
    a6f4:	10bfffc4 	addi	r2,r2,-1
    a6f8:	11c10636 	bltu	r2,r7,ab14 <__umoddi3+0x56c>
    a6fc:	01000404 	movi	r4,16
    a700:	3904d83a 	srl	r2,r7,r4
    a704:	00c00074 	movhi	r3,1
    a708:	18fbc104 	addi	r3,r3,-4348
    a70c:	1885883a 	add	r2,r3,r2
    a710:	14c00003 	ldbu	r19,0(r2)
    a714:	00c00804 	movi	r3,32
    a718:	9927883a 	add	r19,r19,r4
    a71c:	1ce9c83a 	sub	r20,r3,r19
    a720:	a0005c1e 	bne	r20,zero,a894 <__umoddi3+0x2ec>
    a724:	3c400136 	bltu	r7,r17,a72c <__umoddi3+0x184>
    a728:	81810a36 	bltu	r16,r6,ab54 <__umoddi3+0x5ac>
    a72c:	8185c83a 	sub	r2,r16,r6
    a730:	89e3c83a 	sub	r17,r17,r7
    a734:	8089803a 	cmpltu	r4,r16,r2
    a738:	8939c83a 	sub	fp,r17,r4
    a73c:	e007883a 	mov	r3,fp
    a740:	00003b06 	br	a830 <__umoddi3+0x288>
    a744:	3000041e 	bne	r6,zero,a758 <__umoddi3+0x1b0>
    a748:	000b883a 	mov	r5,zero
    a74c:	01000044 	movi	r4,1
    a750:	00006c40 	call	6c4 <__udivsi3>
    a754:	1027883a 	mov	r19,r2
    a758:	00bfffd4 	movui	r2,65535
    a75c:	14c0442e 	bgeu	r2,r19,a870 <__umoddi3+0x2c8>
    a760:	00804034 	movhi	r2,256
    a764:	10bfffc4 	addi	r2,r2,-1
    a768:	14c0ec36 	bltu	r2,r19,ab1c <__umoddi3+0x574>
    a76c:	00800404 	movi	r2,16
    a770:	9886d83a 	srl	r3,r19,r2
    a774:	01000074 	movhi	r4,1
    a778:	213bc104 	addi	r4,r4,-4348
    a77c:	20c7883a 	add	r3,r4,r3
    a780:	18c00003 	ldbu	r3,0(r3)
    a784:	1887883a 	add	r3,r3,r2
    a788:	00800804 	movi	r2,32
    a78c:	10e5c83a 	sub	r18,r2,r3
    a790:	9000ab1e 	bne	r18,zero,aa40 <__umoddi3+0x498>
    a794:	982cd43a 	srli	r22,r19,16
    a798:	8ce3c83a 	sub	r17,r17,r19
    a79c:	9dffffcc 	andi	r23,r19,65535
    a7a0:	b00b883a 	mov	r5,r22
    a7a4:	8809883a 	mov	r4,r17
    a7a8:	00007280 	call	728 <__umodsi3>
    a7ac:	b00b883a 	mov	r5,r22
    a7b0:	8809883a 	mov	r4,r17
    a7b4:	102b883a 	mov	r21,r2
    a7b8:	00006c40 	call	6c4 <__udivsi3>
    a7bc:	b80b883a 	mov	r5,r23
    a7c0:	1009883a 	mov	r4,r2
    a7c4:	000ab6c0 	call	ab6c <__mulsi3>
    a7c8:	a82a943a 	slli	r21,r21,16
    a7cc:	a006d43a 	srli	r3,r20,16
    a7d0:	1d46b03a 	or	r3,r3,r21
    a7d4:	1880042e 	bgeu	r3,r2,a7e8 <__umoddi3+0x240>
    a7d8:	1cc7883a 	add	r3,r3,r19
    a7dc:	1cc00236 	bltu	r3,r19,a7e8 <__umoddi3+0x240>
    a7e0:	1880012e 	bgeu	r3,r2,a7e8 <__umoddi3+0x240>
    a7e4:	1cc7883a 	add	r3,r3,r19
    a7e8:	18a1c83a 	sub	r16,r3,r2
    a7ec:	b00b883a 	mov	r5,r22
    a7f0:	8009883a 	mov	r4,r16
    a7f4:	00007280 	call	728 <__umodsi3>
    a7f8:	1023883a 	mov	r17,r2
    a7fc:	b00b883a 	mov	r5,r22
    a800:	8009883a 	mov	r4,r16
    a804:	00006c40 	call	6c4 <__udivsi3>
    a808:	8822943a 	slli	r17,r17,16
    a80c:	b80b883a 	mov	r5,r23
    a810:	1009883a 	mov	r4,r2
    a814:	000ab6c0 	call	ab6c <__mulsi3>
    a818:	a53fffcc 	andi	r20,r20,65535
    a81c:	a446b03a 	or	r3,r20,r17
    a820:	18bfac2e 	bgeu	r3,r2,a6d4 <__alt_data_end+0xfffd9994>
    a824:	003fa706 	br	a6c4 <__alt_data_end+0xfffd9984>
    a828:	2005883a 	mov	r2,r4
    a82c:	2807883a 	mov	r3,r5
    a830:	dfc00c17 	ldw	ra,48(sp)
    a834:	df000b17 	ldw	fp,44(sp)
    a838:	ddc00a17 	ldw	r23,40(sp)
    a83c:	dd800917 	ldw	r22,36(sp)
    a840:	dd400817 	ldw	r21,32(sp)
    a844:	dd000717 	ldw	r20,28(sp)
    a848:	dcc00617 	ldw	r19,24(sp)
    a84c:	dc800517 	ldw	r18,20(sp)
    a850:	dc400417 	ldw	r17,16(sp)
    a854:	dc000317 	ldw	r16,12(sp)
    a858:	dec00d04 	addi	sp,sp,52
    a85c:	f800283a 	ret
    a860:	04c03fc4 	movi	r19,255
    a864:	99c9803a 	cmpltu	r4,r19,r7
    a868:	200890fa 	slli	r4,r4,3
    a86c:	003fa406 	br	a700 <__alt_data_end+0xfffd99c0>
    a870:	00803fc4 	movi	r2,255
    a874:	14c5803a 	cmpltu	r2,r2,r19
    a878:	100490fa 	slli	r2,r2,3
    a87c:	003fbc06 	br	a770 <__alt_data_end+0xfffd9a30>
    a880:	00804034 	movhi	r2,256
    a884:	10bfffc4 	addi	r2,r2,-1
    a888:	1180a636 	bltu	r2,r6,ab24 <__umoddi3+0x57c>
    a88c:	01000404 	movi	r4,16
    a890:	003f5c06 	br	a604 <__alt_data_end+0xfffd98c4>
    a894:	3d0e983a 	sll	r7,r7,r20
    a898:	34ead83a 	srl	r21,r6,r19
    a89c:	8cc6d83a 	srl	r3,r17,r19
    a8a0:	8d10983a 	sll	r8,r17,r20
    a8a4:	3d6ab03a 	or	r21,r7,r21
    a8a8:	a82cd43a 	srli	r22,r21,16
    a8ac:	84e2d83a 	srl	r17,r16,r19
    a8b0:	1809883a 	mov	r4,r3
    a8b4:	b00b883a 	mov	r5,r22
    a8b8:	8a22b03a 	or	r17,r17,r8
    a8bc:	3524983a 	sll	r18,r6,r20
    a8c0:	dc400015 	stw	r17,0(sp)
    a8c4:	d8c00115 	stw	r3,4(sp)
    a8c8:	00007280 	call	728 <__umodsi3>
    a8cc:	d8c00117 	ldw	r3,4(sp)
    a8d0:	b00b883a 	mov	r5,r22
    a8d4:	1039883a 	mov	fp,r2
    a8d8:	1809883a 	mov	r4,r3
    a8dc:	00006c40 	call	6c4 <__udivsi3>
    a8e0:	adffffcc 	andi	r23,r21,65535
    a8e4:	100b883a 	mov	r5,r2
    a8e8:	b809883a 	mov	r4,r23
    a8ec:	1023883a 	mov	r17,r2
    a8f0:	000ab6c0 	call	ab6c <__mulsi3>
    a8f4:	d9400017 	ldw	r5,0(sp)
    a8f8:	e008943a 	slli	r4,fp,16
    a8fc:	8520983a 	sll	r16,r16,r20
    a900:	2806d43a 	srli	r3,r5,16
    a904:	1906b03a 	or	r3,r3,r4
    a908:	1880042e 	bgeu	r3,r2,a91c <__umoddi3+0x374>
    a90c:	1d47883a 	add	r3,r3,r21
    a910:	893fffc4 	addi	r4,r17,-1
    a914:	1d40892e 	bgeu	r3,r21,ab3c <__umoddi3+0x594>
    a918:	2023883a 	mov	r17,r4
    a91c:	18b9c83a 	sub	fp,r3,r2
    a920:	b00b883a 	mov	r5,r22
    a924:	e009883a 	mov	r4,fp
    a928:	00007280 	call	728 <__umodsi3>
    a92c:	b00b883a 	mov	r5,r22
    a930:	e009883a 	mov	r4,fp
    a934:	d8800215 	stw	r2,8(sp)
    a938:	00006c40 	call	6c4 <__udivsi3>
    a93c:	100b883a 	mov	r5,r2
    a940:	b809883a 	mov	r4,r23
    a944:	102d883a 	mov	r22,r2
    a948:	000ab6c0 	call	ab6c <__mulsi3>
    a94c:	d9800217 	ldw	r6,8(sp)
    a950:	d8c00017 	ldw	r3,0(sp)
    a954:	300c943a 	slli	r6,r6,16
    a958:	1a3fffcc 	andi	r8,r3,65535
    a95c:	4190b03a 	or	r8,r8,r6
    a960:	4080042e 	bgeu	r8,r2,a974 <__umoddi3+0x3cc>
    a964:	4551883a 	add	r8,r8,r21
    a968:	b0ffffc4 	addi	r3,r22,-1
    a96c:	45406f2e 	bgeu	r8,r21,ab2c <__umoddi3+0x584>
    a970:	182d883a 	mov	r22,r3
    a974:	880e943a 	slli	r7,r17,16
    a978:	9006d43a 	srli	r3,r18,16
    a97c:	91bfffcc 	andi	r6,r18,65535
    a980:	3dacb03a 	or	r22,r7,r22
    a984:	b02ed43a 	srli	r23,r22,16
    a988:	b5bfffcc 	andi	r22,r22,65535
    a98c:	300b883a 	mov	r5,r6
    a990:	b009883a 	mov	r4,r22
    a994:	40a3c83a 	sub	r17,r8,r2
    a998:	d8c00115 	stw	r3,4(sp)
    a99c:	d9800215 	stw	r6,8(sp)
    a9a0:	000ab6c0 	call	ab6c <__mulsi3>
    a9a4:	d9800217 	ldw	r6,8(sp)
    a9a8:	b809883a 	mov	r4,r23
    a9ac:	1039883a 	mov	fp,r2
    a9b0:	300b883a 	mov	r5,r6
    a9b4:	000ab6c0 	call	ab6c <__mulsi3>
    a9b8:	d8c00117 	ldw	r3,4(sp)
    a9bc:	b809883a 	mov	r4,r23
    a9c0:	d8800215 	stw	r2,8(sp)
    a9c4:	180b883a 	mov	r5,r3
    a9c8:	000ab6c0 	call	ab6c <__mulsi3>
    a9cc:	d8c00117 	ldw	r3,4(sp)
    a9d0:	b009883a 	mov	r4,r22
    a9d4:	102f883a 	mov	r23,r2
    a9d8:	180b883a 	mov	r5,r3
    a9dc:	000ab6c0 	call	ab6c <__mulsi3>
    a9e0:	d9800217 	ldw	r6,8(sp)
    a9e4:	e006d43a 	srli	r3,fp,16
    a9e8:	1185883a 	add	r2,r2,r6
    a9ec:	1885883a 	add	r2,r3,r2
    a9f0:	1180022e 	bgeu	r2,r6,a9fc <__umoddi3+0x454>
    a9f4:	00c00074 	movhi	r3,1
    a9f8:	b8ef883a 	add	r23,r23,r3
    a9fc:	1006d43a 	srli	r3,r2,16
    aa00:	1004943a 	slli	r2,r2,16
    aa04:	e73fffcc 	andi	fp,fp,65535
    aa08:	1dc7883a 	add	r3,r3,r23
    aa0c:	1739883a 	add	fp,r2,fp
    aa10:	88c03a36 	bltu	r17,r3,aafc <__umoddi3+0x554>
    aa14:	88c05126 	beq	r17,r3,ab5c <__umoddi3+0x5b4>
    aa18:	88c9c83a 	sub	r4,r17,r3
    aa1c:	e00f883a 	mov	r7,fp
    aa20:	81cfc83a 	sub	r7,r16,r7
    aa24:	81c7803a 	cmpltu	r3,r16,r7
    aa28:	20c7c83a 	sub	r3,r4,r3
    aa2c:	1cc4983a 	sll	r2,r3,r19
    aa30:	3d0ed83a 	srl	r7,r7,r20
    aa34:	1d06d83a 	srl	r3,r3,r20
    aa38:	11c4b03a 	or	r2,r2,r7
    aa3c:	003f7c06 	br	a830 <__alt_data_end+0xfffd9af0>
    aa40:	9ca6983a 	sll	r19,r19,r18
    aa44:	88f8d83a 	srl	fp,r17,r3
    aa48:	80c4d83a 	srl	r2,r16,r3
    aa4c:	982cd43a 	srli	r22,r19,16
    aa50:	8ca2983a 	sll	r17,r17,r18
    aa54:	e009883a 	mov	r4,fp
    aa58:	b00b883a 	mov	r5,r22
    aa5c:	146ab03a 	or	r21,r2,r17
    aa60:	00007280 	call	728 <__umodsi3>
    aa64:	b00b883a 	mov	r5,r22
    aa68:	e009883a 	mov	r4,fp
    aa6c:	1029883a 	mov	r20,r2
    aa70:	9dffffcc 	andi	r23,r19,65535
    aa74:	00006c40 	call	6c4 <__udivsi3>
    aa78:	b809883a 	mov	r4,r23
    aa7c:	100b883a 	mov	r5,r2
    aa80:	000ab6c0 	call	ab6c <__mulsi3>
    aa84:	a008943a 	slli	r4,r20,16
    aa88:	a806d43a 	srli	r3,r21,16
    aa8c:	84a8983a 	sll	r20,r16,r18
    aa90:	1906b03a 	or	r3,r3,r4
    aa94:	1880042e 	bgeu	r3,r2,aaa8 <__umoddi3+0x500>
    aa98:	1cc7883a 	add	r3,r3,r19
    aa9c:	1cc00236 	bltu	r3,r19,aaa8 <__umoddi3+0x500>
    aaa0:	1880012e 	bgeu	r3,r2,aaa8 <__umoddi3+0x500>
    aaa4:	1cc7883a 	add	r3,r3,r19
    aaa8:	18a3c83a 	sub	r17,r3,r2
    aaac:	b00b883a 	mov	r5,r22
    aab0:	8809883a 	mov	r4,r17
    aab4:	00007280 	call	728 <__umodsi3>
    aab8:	b00b883a 	mov	r5,r22
    aabc:	8809883a 	mov	r4,r17
    aac0:	1021883a 	mov	r16,r2
    aac4:	00006c40 	call	6c4 <__udivsi3>
    aac8:	100b883a 	mov	r5,r2
    aacc:	b809883a 	mov	r4,r23
    aad0:	8020943a 	slli	r16,r16,16
    aad4:	000ab6c0 	call	ab6c <__mulsi3>
    aad8:	a8ffffcc 	andi	r3,r21,65535
    aadc:	1c06b03a 	or	r3,r3,r16
    aae0:	1880042e 	bgeu	r3,r2,aaf4 <__umoddi3+0x54c>
    aae4:	1cc7883a 	add	r3,r3,r19
    aae8:	1cc00236 	bltu	r3,r19,aaf4 <__umoddi3+0x54c>
    aaec:	1880012e 	bgeu	r3,r2,aaf4 <__umoddi3+0x54c>
    aaf0:	1cc7883a 	add	r3,r3,r19
    aaf4:	18a3c83a 	sub	r17,r3,r2
    aaf8:	003f2906 	br	a7a0 <__alt_data_end+0xfffd9a60>
    aafc:	e48fc83a 	sub	r7,fp,r18
    ab00:	1d49c83a 	sub	r4,r3,r21
    ab04:	e1f9803a 	cmpltu	fp,fp,r7
    ab08:	2739c83a 	sub	fp,r4,fp
    ab0c:	8f09c83a 	sub	r4,r17,fp
    ab10:	003fc306 	br	aa20 <__alt_data_end+0xfffd9ce0>
    ab14:	01000604 	movi	r4,24
    ab18:	003ef906 	br	a700 <__alt_data_end+0xfffd99c0>
    ab1c:	00800604 	movi	r2,24
    ab20:	003f1306 	br	a770 <__alt_data_end+0xfffd9a30>
    ab24:	01000604 	movi	r4,24
    ab28:	003eb606 	br	a604 <__alt_data_end+0xfffd98c4>
    ab2c:	40bf902e 	bgeu	r8,r2,a970 <__alt_data_end+0xfffd9c30>
    ab30:	b5bfff84 	addi	r22,r22,-2
    ab34:	4551883a 	add	r8,r8,r21
    ab38:	003f8e06 	br	a974 <__alt_data_end+0xfffd9c34>
    ab3c:	18bf762e 	bgeu	r3,r2,a918 <__alt_data_end+0xfffd9bd8>
    ab40:	8c7fff84 	addi	r17,r17,-2
    ab44:	1d47883a 	add	r3,r3,r21
    ab48:	003f7406 	br	a91c <__alt_data_end+0xfffd9bdc>
    ab4c:	1cc7883a 	add	r3,r3,r19
    ab50:	003ecd06 	br	a688 <__alt_data_end+0xfffd9948>
    ab54:	8005883a 	mov	r2,r16
    ab58:	003ef806 	br	a73c <__alt_data_end+0xfffd99fc>
    ab5c:	873fe736 	bltu	r16,fp,aafc <__alt_data_end+0xfffd9dbc>
    ab60:	e00f883a 	mov	r7,fp
    ab64:	0009883a 	mov	r4,zero
    ab68:	003fad06 	br	aa20 <__alt_data_end+0xfffd9ce0>

0000ab6c <__mulsi3>:
    ab6c:	0005883a 	mov	r2,zero
    ab70:	20000726 	beq	r4,zero,ab90 <__mulsi3+0x24>
    ab74:	20c0004c 	andi	r3,r4,1
    ab78:	2008d07a 	srli	r4,r4,1
    ab7c:	18000126 	beq	r3,zero,ab84 <__mulsi3+0x18>
    ab80:	1145883a 	add	r2,r2,r5
    ab84:	294b883a 	add	r5,r5,r5
    ab88:	203ffa1e 	bne	r4,zero,ab74 <__alt_data_end+0xfffd9e34>
    ab8c:	f800283a 	ret
    ab90:	f800283a 	ret

0000ab94 <__adddf3>:
    ab94:	02c00434 	movhi	r11,16
    ab98:	5affffc4 	addi	r11,r11,-1
    ab9c:	2806d7fa 	srli	r3,r5,31
    aba0:	2ad4703a 	and	r10,r5,r11
    aba4:	3ad2703a 	and	r9,r7,r11
    aba8:	3804d53a 	srli	r2,r7,20
    abac:	3018d77a 	srli	r12,r6,29
    abb0:	280ad53a 	srli	r5,r5,20
    abb4:	501490fa 	slli	r10,r10,3
    abb8:	2010d77a 	srli	r8,r4,29
    abbc:	481290fa 	slli	r9,r9,3
    abc0:	380ed7fa 	srli	r7,r7,31
    abc4:	defffb04 	addi	sp,sp,-20
    abc8:	dc800215 	stw	r18,8(sp)
    abcc:	dc400115 	stw	r17,4(sp)
    abd0:	dc000015 	stw	r16,0(sp)
    abd4:	dfc00415 	stw	ra,16(sp)
    abd8:	dcc00315 	stw	r19,12(sp)
    abdc:	1c803fcc 	andi	r18,r3,255
    abe0:	2c01ffcc 	andi	r16,r5,2047
    abe4:	5210b03a 	or	r8,r10,r8
    abe8:	202290fa 	slli	r17,r4,3
    abec:	1081ffcc 	andi	r2,r2,2047
    abf0:	4b12b03a 	or	r9,r9,r12
    abf4:	300c90fa 	slli	r6,r6,3
    abf8:	91c07526 	beq	r18,r7,add0 <__adddf3+0x23c>
    abfc:	8087c83a 	sub	r3,r16,r2
    ac00:	00c0ab0e 	bge	zero,r3,aeb0 <__adddf3+0x31c>
    ac04:	10002a1e 	bne	r2,zero,acb0 <__adddf3+0x11c>
    ac08:	4984b03a 	or	r2,r9,r6
    ac0c:	1000961e 	bne	r2,zero,ae68 <__adddf3+0x2d4>
    ac10:	888001cc 	andi	r2,r17,7
    ac14:	10000726 	beq	r2,zero,ac34 <__adddf3+0xa0>
    ac18:	888003cc 	andi	r2,r17,15
    ac1c:	00c00104 	movi	r3,4
    ac20:	10c00426 	beq	r2,r3,ac34 <__adddf3+0xa0>
    ac24:	88c7883a 	add	r3,r17,r3
    ac28:	1c63803a 	cmpltu	r17,r3,r17
    ac2c:	4451883a 	add	r8,r8,r17
    ac30:	1823883a 	mov	r17,r3
    ac34:	4080202c 	andhi	r2,r8,128
    ac38:	10005926 	beq	r2,zero,ada0 <__adddf3+0x20c>
    ac3c:	84000044 	addi	r16,r16,1
    ac40:	0081ffc4 	movi	r2,2047
    ac44:	8080ba26 	beq	r16,r2,af30 <__adddf3+0x39c>
    ac48:	00bfe034 	movhi	r2,65408
    ac4c:	10bfffc4 	addi	r2,r2,-1
    ac50:	4090703a 	and	r8,r8,r2
    ac54:	4004977a 	slli	r2,r8,29
    ac58:	4010927a 	slli	r8,r8,9
    ac5c:	8822d0fa 	srli	r17,r17,3
    ac60:	8401ffcc 	andi	r16,r16,2047
    ac64:	4010d33a 	srli	r8,r8,12
    ac68:	9007883a 	mov	r3,r18
    ac6c:	1444b03a 	or	r2,r2,r17
    ac70:	8401ffcc 	andi	r16,r16,2047
    ac74:	8020953a 	slli	r16,r16,20
    ac78:	18c03fcc 	andi	r3,r3,255
    ac7c:	01000434 	movhi	r4,16
    ac80:	213fffc4 	addi	r4,r4,-1
    ac84:	180697fa 	slli	r3,r3,31
    ac88:	4110703a 	and	r8,r8,r4
    ac8c:	4410b03a 	or	r8,r8,r16
    ac90:	40c6b03a 	or	r3,r8,r3
    ac94:	dfc00417 	ldw	ra,16(sp)
    ac98:	dcc00317 	ldw	r19,12(sp)
    ac9c:	dc800217 	ldw	r18,8(sp)
    aca0:	dc400117 	ldw	r17,4(sp)
    aca4:	dc000017 	ldw	r16,0(sp)
    aca8:	dec00504 	addi	sp,sp,20
    acac:	f800283a 	ret
    acb0:	0081ffc4 	movi	r2,2047
    acb4:	80bfd626 	beq	r16,r2,ac10 <__alt_data_end+0xfffd9ed0>
    acb8:	4a402034 	orhi	r9,r9,128
    acbc:	00800e04 	movi	r2,56
    acc0:	10c09f16 	blt	r2,r3,af40 <__adddf3+0x3ac>
    acc4:	008007c4 	movi	r2,31
    acc8:	10c0c216 	blt	r2,r3,afd4 <__adddf3+0x440>
    accc:	00800804 	movi	r2,32
    acd0:	10c5c83a 	sub	r2,r2,r3
    acd4:	488a983a 	sll	r5,r9,r2
    acd8:	30c8d83a 	srl	r4,r6,r3
    acdc:	3084983a 	sll	r2,r6,r2
    ace0:	48c6d83a 	srl	r3,r9,r3
    ace4:	290cb03a 	or	r6,r5,r4
    ace8:	1004c03a 	cmpne	r2,r2,zero
    acec:	308cb03a 	or	r6,r6,r2
    acf0:	898dc83a 	sub	r6,r17,r6
    acf4:	89a3803a 	cmpltu	r17,r17,r6
    acf8:	40d1c83a 	sub	r8,r8,r3
    acfc:	4451c83a 	sub	r8,r8,r17
    ad00:	3023883a 	mov	r17,r6
    ad04:	4080202c 	andhi	r2,r8,128
    ad08:	10002326 	beq	r2,zero,ad98 <__adddf3+0x204>
    ad0c:	04c02034 	movhi	r19,128
    ad10:	9cffffc4 	addi	r19,r19,-1
    ad14:	44e6703a 	and	r19,r8,r19
    ad18:	98007626 	beq	r19,zero,aef4 <__adddf3+0x360>
    ad1c:	9809883a 	mov	r4,r19
    ad20:	000d3d40 	call	d3d4 <__clzsi2>
    ad24:	10fffe04 	addi	r3,r2,-8
    ad28:	010007c4 	movi	r4,31
    ad2c:	20c07716 	blt	r4,r3,af0c <__adddf3+0x378>
    ad30:	00800804 	movi	r2,32
    ad34:	10c5c83a 	sub	r2,r2,r3
    ad38:	8884d83a 	srl	r2,r17,r2
    ad3c:	98d0983a 	sll	r8,r19,r3
    ad40:	88e2983a 	sll	r17,r17,r3
    ad44:	1204b03a 	or	r2,r2,r8
    ad48:	1c007416 	blt	r3,r16,af1c <__adddf3+0x388>
    ad4c:	1c21c83a 	sub	r16,r3,r16
    ad50:	82000044 	addi	r8,r16,1
    ad54:	00c007c4 	movi	r3,31
    ad58:	1a009116 	blt	r3,r8,afa0 <__adddf3+0x40c>
    ad5c:	00c00804 	movi	r3,32
    ad60:	1a07c83a 	sub	r3,r3,r8
    ad64:	8a08d83a 	srl	r4,r17,r8
    ad68:	88e2983a 	sll	r17,r17,r3
    ad6c:	10c6983a 	sll	r3,r2,r3
    ad70:	1210d83a 	srl	r8,r2,r8
    ad74:	8804c03a 	cmpne	r2,r17,zero
    ad78:	1906b03a 	or	r3,r3,r4
    ad7c:	18a2b03a 	or	r17,r3,r2
    ad80:	0021883a 	mov	r16,zero
    ad84:	003fa206 	br	ac10 <__alt_data_end+0xfffd9ed0>
    ad88:	1890b03a 	or	r8,r3,r2
    ad8c:	40017d26 	beq	r8,zero,b384 <__adddf3+0x7f0>
    ad90:	1011883a 	mov	r8,r2
    ad94:	1823883a 	mov	r17,r3
    ad98:	888001cc 	andi	r2,r17,7
    ad9c:	103f9e1e 	bne	r2,zero,ac18 <__alt_data_end+0xfffd9ed8>
    ada0:	4004977a 	slli	r2,r8,29
    ada4:	8822d0fa 	srli	r17,r17,3
    ada8:	4010d0fa 	srli	r8,r8,3
    adac:	9007883a 	mov	r3,r18
    adb0:	1444b03a 	or	r2,r2,r17
    adb4:	0101ffc4 	movi	r4,2047
    adb8:	81002426 	beq	r16,r4,ae4c <__adddf3+0x2b8>
    adbc:	8120703a 	and	r16,r16,r4
    adc0:	01000434 	movhi	r4,16
    adc4:	213fffc4 	addi	r4,r4,-1
    adc8:	4110703a 	and	r8,r8,r4
    adcc:	003fa806 	br	ac70 <__alt_data_end+0xfffd9f30>
    add0:	8089c83a 	sub	r4,r16,r2
    add4:	01005e0e 	bge	zero,r4,af50 <__adddf3+0x3bc>
    add8:	10002b26 	beq	r2,zero,ae88 <__adddf3+0x2f4>
    addc:	0081ffc4 	movi	r2,2047
    ade0:	80bf8b26 	beq	r16,r2,ac10 <__alt_data_end+0xfffd9ed0>
    ade4:	4a402034 	orhi	r9,r9,128
    ade8:	00800e04 	movi	r2,56
    adec:	1100a40e 	bge	r2,r4,b080 <__adddf3+0x4ec>
    adf0:	498cb03a 	or	r6,r9,r6
    adf4:	300ac03a 	cmpne	r5,r6,zero
    adf8:	0013883a 	mov	r9,zero
    adfc:	2c4b883a 	add	r5,r5,r17
    ae00:	2c63803a 	cmpltu	r17,r5,r17
    ae04:	4a11883a 	add	r8,r9,r8
    ae08:	8a11883a 	add	r8,r17,r8
    ae0c:	2823883a 	mov	r17,r5
    ae10:	4080202c 	andhi	r2,r8,128
    ae14:	103fe026 	beq	r2,zero,ad98 <__alt_data_end+0xfffda058>
    ae18:	84000044 	addi	r16,r16,1
    ae1c:	0081ffc4 	movi	r2,2047
    ae20:	8080d226 	beq	r16,r2,b16c <__adddf3+0x5d8>
    ae24:	00bfe034 	movhi	r2,65408
    ae28:	10bfffc4 	addi	r2,r2,-1
    ae2c:	4090703a 	and	r8,r8,r2
    ae30:	880ad07a 	srli	r5,r17,1
    ae34:	400897fa 	slli	r4,r8,31
    ae38:	88c0004c 	andi	r3,r17,1
    ae3c:	28e2b03a 	or	r17,r5,r3
    ae40:	4010d07a 	srli	r8,r8,1
    ae44:	2462b03a 	or	r17,r4,r17
    ae48:	003f7106 	br	ac10 <__alt_data_end+0xfffd9ed0>
    ae4c:	4088b03a 	or	r4,r8,r2
    ae50:	20014526 	beq	r4,zero,b368 <__adddf3+0x7d4>
    ae54:	01000434 	movhi	r4,16
    ae58:	42000234 	orhi	r8,r8,8
    ae5c:	213fffc4 	addi	r4,r4,-1
    ae60:	4110703a 	and	r8,r8,r4
    ae64:	003f8206 	br	ac70 <__alt_data_end+0xfffd9f30>
    ae68:	18ffffc4 	addi	r3,r3,-1
    ae6c:	1800491e 	bne	r3,zero,af94 <__adddf3+0x400>
    ae70:	898bc83a 	sub	r5,r17,r6
    ae74:	8963803a 	cmpltu	r17,r17,r5
    ae78:	4251c83a 	sub	r8,r8,r9
    ae7c:	4451c83a 	sub	r8,r8,r17
    ae80:	2823883a 	mov	r17,r5
    ae84:	003f9f06 	br	ad04 <__alt_data_end+0xfffd9fc4>
    ae88:	4984b03a 	or	r2,r9,r6
    ae8c:	103f6026 	beq	r2,zero,ac10 <__alt_data_end+0xfffd9ed0>
    ae90:	213fffc4 	addi	r4,r4,-1
    ae94:	2000931e 	bne	r4,zero,b0e4 <__adddf3+0x550>
    ae98:	898d883a 	add	r6,r17,r6
    ae9c:	3463803a 	cmpltu	r17,r6,r17
    aea0:	4251883a 	add	r8,r8,r9
    aea4:	8a11883a 	add	r8,r17,r8
    aea8:	3023883a 	mov	r17,r6
    aeac:	003fd806 	br	ae10 <__alt_data_end+0xfffda0d0>
    aeb0:	1800541e 	bne	r3,zero,b004 <__adddf3+0x470>
    aeb4:	80800044 	addi	r2,r16,1
    aeb8:	1081ffcc 	andi	r2,r2,2047
    aebc:	00c00044 	movi	r3,1
    aec0:	1880a00e 	bge	r3,r2,b144 <__adddf3+0x5b0>
    aec4:	8989c83a 	sub	r4,r17,r6
    aec8:	8905803a 	cmpltu	r2,r17,r4
    aecc:	4267c83a 	sub	r19,r8,r9
    aed0:	98a7c83a 	sub	r19,r19,r2
    aed4:	9880202c 	andhi	r2,r19,128
    aed8:	10006326 	beq	r2,zero,b068 <__adddf3+0x4d4>
    aedc:	3463c83a 	sub	r17,r6,r17
    aee0:	4a07c83a 	sub	r3,r9,r8
    aee4:	344d803a 	cmpltu	r6,r6,r17
    aee8:	19a7c83a 	sub	r19,r3,r6
    aeec:	3825883a 	mov	r18,r7
    aef0:	983f8a1e 	bne	r19,zero,ad1c <__alt_data_end+0xfffd9fdc>
    aef4:	8809883a 	mov	r4,r17
    aef8:	000d3d40 	call	d3d4 <__clzsi2>
    aefc:	10800804 	addi	r2,r2,32
    af00:	10fffe04 	addi	r3,r2,-8
    af04:	010007c4 	movi	r4,31
    af08:	20ff890e 	bge	r4,r3,ad30 <__alt_data_end+0xfffd9ff0>
    af0c:	10bff604 	addi	r2,r2,-40
    af10:	8884983a 	sll	r2,r17,r2
    af14:	0023883a 	mov	r17,zero
    af18:	1c3f8c0e 	bge	r3,r16,ad4c <__alt_data_end+0xfffda00c>
    af1c:	023fe034 	movhi	r8,65408
    af20:	423fffc4 	addi	r8,r8,-1
    af24:	80e1c83a 	sub	r16,r16,r3
    af28:	1210703a 	and	r8,r2,r8
    af2c:	003f3806 	br	ac10 <__alt_data_end+0xfffd9ed0>
    af30:	9007883a 	mov	r3,r18
    af34:	0011883a 	mov	r8,zero
    af38:	0005883a 	mov	r2,zero
    af3c:	003f4c06 	br	ac70 <__alt_data_end+0xfffd9f30>
    af40:	498cb03a 	or	r6,r9,r6
    af44:	300cc03a 	cmpne	r6,r6,zero
    af48:	0007883a 	mov	r3,zero
    af4c:	003f6806 	br	acf0 <__alt_data_end+0xfffd9fb0>
    af50:	20009c1e 	bne	r4,zero,b1c4 <__adddf3+0x630>
    af54:	80800044 	addi	r2,r16,1
    af58:	1141ffcc 	andi	r5,r2,2047
    af5c:	01000044 	movi	r4,1
    af60:	2140670e 	bge	r4,r5,b100 <__adddf3+0x56c>
    af64:	0101ffc4 	movi	r4,2047
    af68:	11007f26 	beq	r2,r4,b168 <__adddf3+0x5d4>
    af6c:	898d883a 	add	r6,r17,r6
    af70:	4247883a 	add	r3,r8,r9
    af74:	3451803a 	cmpltu	r8,r6,r17
    af78:	40d1883a 	add	r8,r8,r3
    af7c:	402297fa 	slli	r17,r8,31
    af80:	300cd07a 	srli	r6,r6,1
    af84:	4010d07a 	srli	r8,r8,1
    af88:	1021883a 	mov	r16,r2
    af8c:	89a2b03a 	or	r17,r17,r6
    af90:	003f1f06 	br	ac10 <__alt_data_end+0xfffd9ed0>
    af94:	0081ffc4 	movi	r2,2047
    af98:	80bf481e 	bne	r16,r2,acbc <__alt_data_end+0xfffd9f7c>
    af9c:	003f1c06 	br	ac10 <__alt_data_end+0xfffd9ed0>
    afa0:	843ff844 	addi	r16,r16,-31
    afa4:	01000804 	movi	r4,32
    afa8:	1406d83a 	srl	r3,r2,r16
    afac:	41005026 	beq	r8,r4,b0f0 <__adddf3+0x55c>
    afb0:	01001004 	movi	r4,64
    afb4:	2211c83a 	sub	r8,r4,r8
    afb8:	1204983a 	sll	r2,r2,r8
    afbc:	88a2b03a 	or	r17,r17,r2
    afc0:	8822c03a 	cmpne	r17,r17,zero
    afc4:	1c62b03a 	or	r17,r3,r17
    afc8:	0011883a 	mov	r8,zero
    afcc:	0021883a 	mov	r16,zero
    afd0:	003f7106 	br	ad98 <__alt_data_end+0xfffda058>
    afd4:	193ff804 	addi	r4,r3,-32
    afd8:	00800804 	movi	r2,32
    afdc:	4908d83a 	srl	r4,r9,r4
    afe0:	18804526 	beq	r3,r2,b0f8 <__adddf3+0x564>
    afe4:	00801004 	movi	r2,64
    afe8:	10c5c83a 	sub	r2,r2,r3
    afec:	4886983a 	sll	r3,r9,r2
    aff0:	198cb03a 	or	r6,r3,r6
    aff4:	300cc03a 	cmpne	r6,r6,zero
    aff8:	218cb03a 	or	r6,r4,r6
    affc:	0007883a 	mov	r3,zero
    b000:	003f3b06 	br	acf0 <__alt_data_end+0xfffd9fb0>
    b004:	80002a26 	beq	r16,zero,b0b0 <__adddf3+0x51c>
    b008:	0101ffc4 	movi	r4,2047
    b00c:	11006826 	beq	r2,r4,b1b0 <__adddf3+0x61c>
    b010:	00c7c83a 	sub	r3,zero,r3
    b014:	42002034 	orhi	r8,r8,128
    b018:	01000e04 	movi	r4,56
    b01c:	20c07c16 	blt	r4,r3,b210 <__adddf3+0x67c>
    b020:	010007c4 	movi	r4,31
    b024:	20c0da16 	blt	r4,r3,b390 <__adddf3+0x7fc>
    b028:	01000804 	movi	r4,32
    b02c:	20c9c83a 	sub	r4,r4,r3
    b030:	4114983a 	sll	r10,r8,r4
    b034:	88cad83a 	srl	r5,r17,r3
    b038:	8908983a 	sll	r4,r17,r4
    b03c:	40c6d83a 	srl	r3,r8,r3
    b040:	5162b03a 	or	r17,r10,r5
    b044:	2008c03a 	cmpne	r4,r4,zero
    b048:	8922b03a 	or	r17,r17,r4
    b04c:	3463c83a 	sub	r17,r6,r17
    b050:	48c7c83a 	sub	r3,r9,r3
    b054:	344d803a 	cmpltu	r6,r6,r17
    b058:	1991c83a 	sub	r8,r3,r6
    b05c:	1021883a 	mov	r16,r2
    b060:	3825883a 	mov	r18,r7
    b064:	003f2706 	br	ad04 <__alt_data_end+0xfffd9fc4>
    b068:	24d0b03a 	or	r8,r4,r19
    b06c:	40001b1e 	bne	r8,zero,b0dc <__adddf3+0x548>
    b070:	0005883a 	mov	r2,zero
    b074:	0007883a 	mov	r3,zero
    b078:	0021883a 	mov	r16,zero
    b07c:	003f4d06 	br	adb4 <__alt_data_end+0xfffda074>
    b080:	008007c4 	movi	r2,31
    b084:	11003c16 	blt	r2,r4,b178 <__adddf3+0x5e4>
    b088:	00800804 	movi	r2,32
    b08c:	1105c83a 	sub	r2,r2,r4
    b090:	488e983a 	sll	r7,r9,r2
    b094:	310ad83a 	srl	r5,r6,r4
    b098:	3084983a 	sll	r2,r6,r2
    b09c:	4912d83a 	srl	r9,r9,r4
    b0a0:	394ab03a 	or	r5,r7,r5
    b0a4:	1004c03a 	cmpne	r2,r2,zero
    b0a8:	288ab03a 	or	r5,r5,r2
    b0ac:	003f5306 	br	adfc <__alt_data_end+0xfffda0bc>
    b0b0:	4448b03a 	or	r4,r8,r17
    b0b4:	20003e26 	beq	r4,zero,b1b0 <__adddf3+0x61c>
    b0b8:	00c6303a 	nor	r3,zero,r3
    b0bc:	18003a1e 	bne	r3,zero,b1a8 <__adddf3+0x614>
    b0c0:	3463c83a 	sub	r17,r6,r17
    b0c4:	4a07c83a 	sub	r3,r9,r8
    b0c8:	344d803a 	cmpltu	r6,r6,r17
    b0cc:	1991c83a 	sub	r8,r3,r6
    b0d0:	1021883a 	mov	r16,r2
    b0d4:	3825883a 	mov	r18,r7
    b0d8:	003f0a06 	br	ad04 <__alt_data_end+0xfffd9fc4>
    b0dc:	2023883a 	mov	r17,r4
    b0e0:	003f0d06 	br	ad18 <__alt_data_end+0xfffd9fd8>
    b0e4:	0081ffc4 	movi	r2,2047
    b0e8:	80bf3f1e 	bne	r16,r2,ade8 <__alt_data_end+0xfffda0a8>
    b0ec:	003ec806 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b0f0:	0005883a 	mov	r2,zero
    b0f4:	003fb106 	br	afbc <__alt_data_end+0xfffda27c>
    b0f8:	0007883a 	mov	r3,zero
    b0fc:	003fbc06 	br	aff0 <__alt_data_end+0xfffda2b0>
    b100:	4444b03a 	or	r2,r8,r17
    b104:	8000871e 	bne	r16,zero,b324 <__adddf3+0x790>
    b108:	1000ba26 	beq	r2,zero,b3f4 <__adddf3+0x860>
    b10c:	4984b03a 	or	r2,r9,r6
    b110:	103ebf26 	beq	r2,zero,ac10 <__alt_data_end+0xfffd9ed0>
    b114:	8985883a 	add	r2,r17,r6
    b118:	4247883a 	add	r3,r8,r9
    b11c:	1451803a 	cmpltu	r8,r2,r17
    b120:	40d1883a 	add	r8,r8,r3
    b124:	40c0202c 	andhi	r3,r8,128
    b128:	1023883a 	mov	r17,r2
    b12c:	183f1a26 	beq	r3,zero,ad98 <__alt_data_end+0xfffda058>
    b130:	00bfe034 	movhi	r2,65408
    b134:	10bfffc4 	addi	r2,r2,-1
    b138:	2021883a 	mov	r16,r4
    b13c:	4090703a 	and	r8,r8,r2
    b140:	003eb306 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b144:	4444b03a 	or	r2,r8,r17
    b148:	8000291e 	bne	r16,zero,b1f0 <__adddf3+0x65c>
    b14c:	10004b1e 	bne	r2,zero,b27c <__adddf3+0x6e8>
    b150:	4990b03a 	or	r8,r9,r6
    b154:	40008b26 	beq	r8,zero,b384 <__adddf3+0x7f0>
    b158:	4811883a 	mov	r8,r9
    b15c:	3023883a 	mov	r17,r6
    b160:	3825883a 	mov	r18,r7
    b164:	003eaa06 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b168:	1021883a 	mov	r16,r2
    b16c:	0011883a 	mov	r8,zero
    b170:	0005883a 	mov	r2,zero
    b174:	003f0f06 	br	adb4 <__alt_data_end+0xfffda074>
    b178:	217ff804 	addi	r5,r4,-32
    b17c:	00800804 	movi	r2,32
    b180:	494ad83a 	srl	r5,r9,r5
    b184:	20807d26 	beq	r4,r2,b37c <__adddf3+0x7e8>
    b188:	00801004 	movi	r2,64
    b18c:	1109c83a 	sub	r4,r2,r4
    b190:	4912983a 	sll	r9,r9,r4
    b194:	498cb03a 	or	r6,r9,r6
    b198:	300cc03a 	cmpne	r6,r6,zero
    b19c:	298ab03a 	or	r5,r5,r6
    b1a0:	0013883a 	mov	r9,zero
    b1a4:	003f1506 	br	adfc <__alt_data_end+0xfffda0bc>
    b1a8:	0101ffc4 	movi	r4,2047
    b1ac:	113f9a1e 	bne	r2,r4,b018 <__alt_data_end+0xfffda2d8>
    b1b0:	4811883a 	mov	r8,r9
    b1b4:	3023883a 	mov	r17,r6
    b1b8:	1021883a 	mov	r16,r2
    b1bc:	3825883a 	mov	r18,r7
    b1c0:	003e9306 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b1c4:	8000161e 	bne	r16,zero,b220 <__adddf3+0x68c>
    b1c8:	444ab03a 	or	r5,r8,r17
    b1cc:	28005126 	beq	r5,zero,b314 <__adddf3+0x780>
    b1d0:	0108303a 	nor	r4,zero,r4
    b1d4:	20004d1e 	bne	r4,zero,b30c <__adddf3+0x778>
    b1d8:	89a3883a 	add	r17,r17,r6
    b1dc:	4253883a 	add	r9,r8,r9
    b1e0:	898d803a 	cmpltu	r6,r17,r6
    b1e4:	3251883a 	add	r8,r6,r9
    b1e8:	1021883a 	mov	r16,r2
    b1ec:	003f0806 	br	ae10 <__alt_data_end+0xfffda0d0>
    b1f0:	1000301e 	bne	r2,zero,b2b4 <__adddf3+0x720>
    b1f4:	4984b03a 	or	r2,r9,r6
    b1f8:	10007126 	beq	r2,zero,b3c0 <__adddf3+0x82c>
    b1fc:	4811883a 	mov	r8,r9
    b200:	3023883a 	mov	r17,r6
    b204:	3825883a 	mov	r18,r7
    b208:	0401ffc4 	movi	r16,2047
    b20c:	003e8006 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b210:	4462b03a 	or	r17,r8,r17
    b214:	8822c03a 	cmpne	r17,r17,zero
    b218:	0007883a 	mov	r3,zero
    b21c:	003f8b06 	br	b04c <__alt_data_end+0xfffda30c>
    b220:	0141ffc4 	movi	r5,2047
    b224:	11403b26 	beq	r2,r5,b314 <__adddf3+0x780>
    b228:	0109c83a 	sub	r4,zero,r4
    b22c:	42002034 	orhi	r8,r8,128
    b230:	01400e04 	movi	r5,56
    b234:	29006716 	blt	r5,r4,b3d4 <__adddf3+0x840>
    b238:	014007c4 	movi	r5,31
    b23c:	29007016 	blt	r5,r4,b400 <__adddf3+0x86c>
    b240:	01400804 	movi	r5,32
    b244:	290bc83a 	sub	r5,r5,r4
    b248:	4154983a 	sll	r10,r8,r5
    b24c:	890ed83a 	srl	r7,r17,r4
    b250:	894a983a 	sll	r5,r17,r5
    b254:	4108d83a 	srl	r4,r8,r4
    b258:	51e2b03a 	or	r17,r10,r7
    b25c:	280ac03a 	cmpne	r5,r5,zero
    b260:	8962b03a 	or	r17,r17,r5
    b264:	89a3883a 	add	r17,r17,r6
    b268:	2253883a 	add	r9,r4,r9
    b26c:	898d803a 	cmpltu	r6,r17,r6
    b270:	3251883a 	add	r8,r6,r9
    b274:	1021883a 	mov	r16,r2
    b278:	003ee506 	br	ae10 <__alt_data_end+0xfffda0d0>
    b27c:	4984b03a 	or	r2,r9,r6
    b280:	103e6326 	beq	r2,zero,ac10 <__alt_data_end+0xfffd9ed0>
    b284:	8987c83a 	sub	r3,r17,r6
    b288:	88c9803a 	cmpltu	r4,r17,r3
    b28c:	4245c83a 	sub	r2,r8,r9
    b290:	1105c83a 	sub	r2,r2,r4
    b294:	1100202c 	andhi	r4,r2,128
    b298:	203ebb26 	beq	r4,zero,ad88 <__alt_data_end+0xfffda048>
    b29c:	3463c83a 	sub	r17,r6,r17
    b2a0:	4a07c83a 	sub	r3,r9,r8
    b2a4:	344d803a 	cmpltu	r6,r6,r17
    b2a8:	1991c83a 	sub	r8,r3,r6
    b2ac:	3825883a 	mov	r18,r7
    b2b0:	003e5706 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b2b4:	4984b03a 	or	r2,r9,r6
    b2b8:	10002e26 	beq	r2,zero,b374 <__adddf3+0x7e0>
    b2bc:	4004d0fa 	srli	r2,r8,3
    b2c0:	8822d0fa 	srli	r17,r17,3
    b2c4:	4010977a 	slli	r8,r8,29
    b2c8:	10c0022c 	andhi	r3,r2,8
    b2cc:	4462b03a 	or	r17,r8,r17
    b2d0:	18000826 	beq	r3,zero,b2f4 <__adddf3+0x760>
    b2d4:	4808d0fa 	srli	r4,r9,3
    b2d8:	20c0022c 	andhi	r3,r4,8
    b2dc:	1800051e 	bne	r3,zero,b2f4 <__adddf3+0x760>
    b2e0:	300cd0fa 	srli	r6,r6,3
    b2e4:	4806977a 	slli	r3,r9,29
    b2e8:	2005883a 	mov	r2,r4
    b2ec:	3825883a 	mov	r18,r7
    b2f0:	19a2b03a 	or	r17,r3,r6
    b2f4:	8810d77a 	srli	r8,r17,29
    b2f8:	100490fa 	slli	r2,r2,3
    b2fc:	882290fa 	slli	r17,r17,3
    b300:	0401ffc4 	movi	r16,2047
    b304:	4090b03a 	or	r8,r8,r2
    b308:	003e4106 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b30c:	0141ffc4 	movi	r5,2047
    b310:	117fc71e 	bne	r2,r5,b230 <__alt_data_end+0xfffda4f0>
    b314:	4811883a 	mov	r8,r9
    b318:	3023883a 	mov	r17,r6
    b31c:	1021883a 	mov	r16,r2
    b320:	003e3b06 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b324:	10002f26 	beq	r2,zero,b3e4 <__adddf3+0x850>
    b328:	4984b03a 	or	r2,r9,r6
    b32c:	10001126 	beq	r2,zero,b374 <__adddf3+0x7e0>
    b330:	4004d0fa 	srli	r2,r8,3
    b334:	8822d0fa 	srli	r17,r17,3
    b338:	4010977a 	slli	r8,r8,29
    b33c:	10c0022c 	andhi	r3,r2,8
    b340:	4462b03a 	or	r17,r8,r17
    b344:	183feb26 	beq	r3,zero,b2f4 <__alt_data_end+0xfffda5b4>
    b348:	4808d0fa 	srli	r4,r9,3
    b34c:	20c0022c 	andhi	r3,r4,8
    b350:	183fe81e 	bne	r3,zero,b2f4 <__alt_data_end+0xfffda5b4>
    b354:	300cd0fa 	srli	r6,r6,3
    b358:	4806977a 	slli	r3,r9,29
    b35c:	2005883a 	mov	r2,r4
    b360:	19a2b03a 	or	r17,r3,r6
    b364:	003fe306 	br	b2f4 <__alt_data_end+0xfffda5b4>
    b368:	0011883a 	mov	r8,zero
    b36c:	0005883a 	mov	r2,zero
    b370:	003e3f06 	br	ac70 <__alt_data_end+0xfffd9f30>
    b374:	0401ffc4 	movi	r16,2047
    b378:	003e2506 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b37c:	0013883a 	mov	r9,zero
    b380:	003f8406 	br	b194 <__alt_data_end+0xfffda454>
    b384:	0005883a 	mov	r2,zero
    b388:	0007883a 	mov	r3,zero
    b38c:	003e8906 	br	adb4 <__alt_data_end+0xfffda074>
    b390:	197ff804 	addi	r5,r3,-32
    b394:	01000804 	movi	r4,32
    b398:	414ad83a 	srl	r5,r8,r5
    b39c:	19002426 	beq	r3,r4,b430 <__adddf3+0x89c>
    b3a0:	01001004 	movi	r4,64
    b3a4:	20c7c83a 	sub	r3,r4,r3
    b3a8:	40c6983a 	sll	r3,r8,r3
    b3ac:	1c46b03a 	or	r3,r3,r17
    b3b0:	1806c03a 	cmpne	r3,r3,zero
    b3b4:	28e2b03a 	or	r17,r5,r3
    b3b8:	0007883a 	mov	r3,zero
    b3bc:	003f2306 	br	b04c <__alt_data_end+0xfffda30c>
    b3c0:	0007883a 	mov	r3,zero
    b3c4:	5811883a 	mov	r8,r11
    b3c8:	00bfffc4 	movi	r2,-1
    b3cc:	0401ffc4 	movi	r16,2047
    b3d0:	003e7806 	br	adb4 <__alt_data_end+0xfffda074>
    b3d4:	4462b03a 	or	r17,r8,r17
    b3d8:	8822c03a 	cmpne	r17,r17,zero
    b3dc:	0009883a 	mov	r4,zero
    b3e0:	003fa006 	br	b264 <__alt_data_end+0xfffda524>
    b3e4:	4811883a 	mov	r8,r9
    b3e8:	3023883a 	mov	r17,r6
    b3ec:	0401ffc4 	movi	r16,2047
    b3f0:	003e0706 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b3f4:	4811883a 	mov	r8,r9
    b3f8:	3023883a 	mov	r17,r6
    b3fc:	003e0406 	br	ac10 <__alt_data_end+0xfffd9ed0>
    b400:	21fff804 	addi	r7,r4,-32
    b404:	01400804 	movi	r5,32
    b408:	41ced83a 	srl	r7,r8,r7
    b40c:	21400a26 	beq	r4,r5,b438 <__adddf3+0x8a4>
    b410:	01401004 	movi	r5,64
    b414:	2909c83a 	sub	r4,r5,r4
    b418:	4108983a 	sll	r4,r8,r4
    b41c:	2448b03a 	or	r4,r4,r17
    b420:	2008c03a 	cmpne	r4,r4,zero
    b424:	3922b03a 	or	r17,r7,r4
    b428:	0009883a 	mov	r4,zero
    b42c:	003f8d06 	br	b264 <__alt_data_end+0xfffda524>
    b430:	0007883a 	mov	r3,zero
    b434:	003fdd06 	br	b3ac <__alt_data_end+0xfffda66c>
    b438:	0009883a 	mov	r4,zero
    b43c:	003ff706 	br	b41c <__alt_data_end+0xfffda6dc>

0000b440 <__divdf3>:
    b440:	defff004 	addi	sp,sp,-64
    b444:	dc800815 	stw	r18,32(sp)
    b448:	2824d53a 	srli	r18,r5,20
    b44c:	dd800c15 	stw	r22,48(sp)
    b450:	282cd7fa 	srli	r22,r5,31
    b454:	dc000615 	stw	r16,24(sp)
    b458:	04000434 	movhi	r16,16
    b45c:	843fffc4 	addi	r16,r16,-1
    b460:	dfc00f15 	stw	ra,60(sp)
    b464:	df000e15 	stw	fp,56(sp)
    b468:	ddc00d15 	stw	r23,52(sp)
    b46c:	dd400b15 	stw	r21,44(sp)
    b470:	dd000a15 	stw	r20,40(sp)
    b474:	dcc00915 	stw	r19,36(sp)
    b478:	dc400715 	stw	r17,28(sp)
    b47c:	9481ffcc 	andi	r18,r18,2047
    b480:	2c20703a 	and	r16,r5,r16
    b484:	b2003fcc 	andi	r8,r22,255
    b488:	90006126 	beq	r18,zero,b610 <__divdf3+0x1d0>
    b48c:	0081ffc4 	movi	r2,2047
    b490:	202b883a 	mov	r21,r4
    b494:	90803726 	beq	r18,r2,b574 <__divdf3+0x134>
    b498:	80800434 	orhi	r2,r16,16
    b49c:	100490fa 	slli	r2,r2,3
    b4a0:	2020d77a 	srli	r16,r4,29
    b4a4:	202a90fa 	slli	r21,r4,3
    b4a8:	94bf0044 	addi	r18,r18,-1023
    b4ac:	80a0b03a 	or	r16,r16,r2
    b4b0:	0013883a 	mov	r9,zero
    b4b4:	000b883a 	mov	r5,zero
    b4b8:	3806d53a 	srli	r3,r7,20
    b4bc:	382ed7fa 	srli	r23,r7,31
    b4c0:	04400434 	movhi	r17,16
    b4c4:	8c7fffc4 	addi	r17,r17,-1
    b4c8:	18c1ffcc 	andi	r3,r3,2047
    b4cc:	3029883a 	mov	r20,r6
    b4d0:	3c62703a 	and	r17,r7,r17
    b4d4:	bf003fcc 	andi	fp,r23,255
    b4d8:	18006e26 	beq	r3,zero,b694 <__divdf3+0x254>
    b4dc:	0081ffc4 	movi	r2,2047
    b4e0:	18806626 	beq	r3,r2,b67c <__divdf3+0x23c>
    b4e4:	88800434 	orhi	r2,r17,16
    b4e8:	100490fa 	slli	r2,r2,3
    b4ec:	3022d77a 	srli	r17,r6,29
    b4f0:	302890fa 	slli	r20,r6,3
    b4f4:	18ff0044 	addi	r3,r3,-1023
    b4f8:	88a2b03a 	or	r17,r17,r2
    b4fc:	000f883a 	mov	r7,zero
    b500:	b5e6f03a 	xor	r19,r22,r23
    b504:	3a4cb03a 	or	r6,r7,r9
    b508:	008003c4 	movi	r2,15
    b50c:	9809883a 	mov	r4,r19
    b510:	90c7c83a 	sub	r3,r18,r3
    b514:	9cc03fcc 	andi	r19,r19,255
    b518:	11809636 	bltu	r2,r6,b774 <__divdf3+0x334>
    b51c:	300c90ba 	slli	r6,r6,2
    b520:	00800074 	movhi	r2,1
    b524:	10ad4d04 	addi	r2,r2,-19148
    b528:	308d883a 	add	r6,r6,r2
    b52c:	30800017 	ldw	r2,0(r6)
    b530:	1000683a 	jmp	r2
    b534:	0000b774 	movhi	zero,733
    b538:	0000b5ac 	andhi	zero,zero,726
    b53c:	0000b764 	muli	zero,zero,733
    b540:	0000b5a0 	cmpeqi	zero,zero,726
    b544:	0000b764 	muli	zero,zero,733
    b548:	0000b738 	rdprs	zero,zero,732
    b54c:	0000b764 	muli	zero,zero,733
    b550:	0000b5a0 	cmpeqi	zero,zero,726
    b554:	0000b5ac 	andhi	zero,zero,726
    b558:	0000b5ac 	andhi	zero,zero,726
    b55c:	0000b738 	rdprs	zero,zero,732
    b560:	0000b5a0 	cmpeqi	zero,zero,726
    b564:	0000b590 	cmplti	zero,zero,726
    b568:	0000b590 	cmplti	zero,zero,726
    b56c:	0000b590 	cmplti	zero,zero,726
    b570:	0000bafc 	xorhi	zero,zero,747
    b574:	2404b03a 	or	r2,r4,r16
    b578:	10006c1e 	bne	r2,zero,b72c <__divdf3+0x2ec>
    b57c:	02400204 	movi	r9,8
    b580:	0021883a 	mov	r16,zero
    b584:	002b883a 	mov	r21,zero
    b588:	01400084 	movi	r5,2
    b58c:	003fca06 	br	b4b8 <__alt_data_end+0xfffda778>
    b590:	8023883a 	mov	r17,r16
    b594:	a829883a 	mov	r20,r21
    b598:	4039883a 	mov	fp,r8
    b59c:	280f883a 	mov	r7,r5
    b5a0:	00800084 	movi	r2,2
    b5a4:	3881601e 	bne	r7,r2,bb28 <__divdf3+0x6e8>
    b5a8:	e027883a 	mov	r19,fp
    b5ac:	9900004c 	andi	r4,r19,1
    b5b0:	0081ffc4 	movi	r2,2047
    b5b4:	0021883a 	mov	r16,zero
    b5b8:	002b883a 	mov	r21,zero
    b5bc:	1004953a 	slli	r2,r2,20
    b5c0:	20c03fcc 	andi	r3,r4,255
    b5c4:	01400434 	movhi	r5,16
    b5c8:	297fffc4 	addi	r5,r5,-1
    b5cc:	180697fa 	slli	r3,r3,31
    b5d0:	8160703a 	and	r16,r16,r5
    b5d4:	80a0b03a 	or	r16,r16,r2
    b5d8:	80c6b03a 	or	r3,r16,r3
    b5dc:	a805883a 	mov	r2,r21
    b5e0:	dfc00f17 	ldw	ra,60(sp)
    b5e4:	df000e17 	ldw	fp,56(sp)
    b5e8:	ddc00d17 	ldw	r23,52(sp)
    b5ec:	dd800c17 	ldw	r22,48(sp)
    b5f0:	dd400b17 	ldw	r21,44(sp)
    b5f4:	dd000a17 	ldw	r20,40(sp)
    b5f8:	dcc00917 	ldw	r19,36(sp)
    b5fc:	dc800817 	ldw	r18,32(sp)
    b600:	dc400717 	ldw	r17,28(sp)
    b604:	dc000617 	ldw	r16,24(sp)
    b608:	dec01004 	addi	sp,sp,64
    b60c:	f800283a 	ret
    b610:	2404b03a 	or	r2,r4,r16
    b614:	2023883a 	mov	r17,r4
    b618:	10003f26 	beq	r2,zero,b718 <__divdf3+0x2d8>
    b61c:	80015e26 	beq	r16,zero,bb98 <__divdf3+0x758>
    b620:	8009883a 	mov	r4,r16
    b624:	d9800215 	stw	r6,8(sp)
    b628:	d9c00515 	stw	r7,20(sp)
    b62c:	da000415 	stw	r8,16(sp)
    b630:	000d3d40 	call	d3d4 <__clzsi2>
    b634:	d9800217 	ldw	r6,8(sp)
    b638:	d9c00517 	ldw	r7,20(sp)
    b63c:	da000417 	ldw	r8,16(sp)
    b640:	113ffd44 	addi	r4,r2,-11
    b644:	00c00704 	movi	r3,28
    b648:	19014f16 	blt	r3,r4,bb88 <__divdf3+0x748>
    b64c:	00c00744 	movi	r3,29
    b650:	157ffe04 	addi	r21,r2,-8
    b654:	1907c83a 	sub	r3,r3,r4
    b658:	8560983a 	sll	r16,r16,r21
    b65c:	88c6d83a 	srl	r3,r17,r3
    b660:	8d6a983a 	sll	r21,r17,r21
    b664:	1c20b03a 	or	r16,r3,r16
    b668:	1080fcc4 	addi	r2,r2,1011
    b66c:	00a5c83a 	sub	r18,zero,r2
    b670:	0013883a 	mov	r9,zero
    b674:	000b883a 	mov	r5,zero
    b678:	003f8f06 	br	b4b8 <__alt_data_end+0xfffda778>
    b67c:	3444b03a 	or	r2,r6,r17
    b680:	1000231e 	bne	r2,zero,b710 <__divdf3+0x2d0>
    b684:	0023883a 	mov	r17,zero
    b688:	0029883a 	mov	r20,zero
    b68c:	01c00084 	movi	r7,2
    b690:	003f9b06 	br	b500 <__alt_data_end+0xfffda7c0>
    b694:	3444b03a 	or	r2,r6,r17
    b698:	10001926 	beq	r2,zero,b700 <__divdf3+0x2c0>
    b69c:	88014b26 	beq	r17,zero,bbcc <__divdf3+0x78c>
    b6a0:	8809883a 	mov	r4,r17
    b6a4:	d9400115 	stw	r5,4(sp)
    b6a8:	d9800215 	stw	r6,8(sp)
    b6ac:	da000415 	stw	r8,16(sp)
    b6b0:	da400315 	stw	r9,12(sp)
    b6b4:	000d3d40 	call	d3d4 <__clzsi2>
    b6b8:	d9400117 	ldw	r5,4(sp)
    b6bc:	d9800217 	ldw	r6,8(sp)
    b6c0:	da000417 	ldw	r8,16(sp)
    b6c4:	da400317 	ldw	r9,12(sp)
    b6c8:	113ffd44 	addi	r4,r2,-11
    b6cc:	00c00704 	movi	r3,28
    b6d0:	19013a16 	blt	r3,r4,bbbc <__divdf3+0x77c>
    b6d4:	00c00744 	movi	r3,29
    b6d8:	153ffe04 	addi	r20,r2,-8
    b6dc:	1907c83a 	sub	r3,r3,r4
    b6e0:	8d22983a 	sll	r17,r17,r20
    b6e4:	30c6d83a 	srl	r3,r6,r3
    b6e8:	3528983a 	sll	r20,r6,r20
    b6ec:	1c62b03a 	or	r17,r3,r17
    b6f0:	1080fcc4 	addi	r2,r2,1011
    b6f4:	0087c83a 	sub	r3,zero,r2
    b6f8:	000f883a 	mov	r7,zero
    b6fc:	003f8006 	br	b500 <__alt_data_end+0xfffda7c0>
    b700:	0023883a 	mov	r17,zero
    b704:	0029883a 	mov	r20,zero
    b708:	01c00044 	movi	r7,1
    b70c:	003f7c06 	br	b500 <__alt_data_end+0xfffda7c0>
    b710:	01c000c4 	movi	r7,3
    b714:	003f7a06 	br	b500 <__alt_data_end+0xfffda7c0>
    b718:	02400104 	movi	r9,4
    b71c:	0021883a 	mov	r16,zero
    b720:	002b883a 	mov	r21,zero
    b724:	01400044 	movi	r5,1
    b728:	003f6306 	br	b4b8 <__alt_data_end+0xfffda778>
    b72c:	02400304 	movi	r9,12
    b730:	014000c4 	movi	r5,3
    b734:	003f6006 	br	b4b8 <__alt_data_end+0xfffda778>
    b738:	04000434 	movhi	r16,16
    b73c:	0009883a 	mov	r4,zero
    b740:	843fffc4 	addi	r16,r16,-1
    b744:	057fffc4 	movi	r21,-1
    b748:	0081ffc4 	movi	r2,2047
    b74c:	003f9b06 	br	b5bc <__alt_data_end+0xfffda87c>
    b750:	00c00044 	movi	r3,1
    b754:	1887c83a 	sub	r3,r3,r2
    b758:	01000e04 	movi	r4,56
    b75c:	20c1530e 	bge	r4,r3,bcac <__divdf3+0x86c>
    b760:	9900004c 	andi	r4,r19,1
    b764:	0005883a 	mov	r2,zero
    b768:	0021883a 	mov	r16,zero
    b76c:	002b883a 	mov	r21,zero
    b770:	003f9206 	br	b5bc <__alt_data_end+0xfffda87c>
    b774:	8c012e36 	bltu	r17,r16,bc30 <__divdf3+0x7f0>
    b778:	84412c26 	beq	r16,r17,bc2c <__divdf3+0x7ec>
    b77c:	a82f883a 	mov	r23,r21
    b780:	18ffffc4 	addi	r3,r3,-1
    b784:	002b883a 	mov	r21,zero
    b788:	a004d63a 	srli	r2,r20,24
    b78c:	8822923a 	slli	r17,r17,8
    b790:	a028923a 	slli	r20,r20,8
    b794:	8009883a 	mov	r4,r16
    b798:	88acb03a 	or	r22,r17,r2
    b79c:	dd000015 	stw	r20,0(sp)
    b7a0:	b028d43a 	srli	r20,r22,16
    b7a4:	d8c00215 	stw	r3,8(sp)
    b7a8:	b4bfffcc 	andi	r18,r22,65535
    b7ac:	a00b883a 	mov	r5,r20
    b7b0:	00006c40 	call	6c4 <__udivsi3>
    b7b4:	100b883a 	mov	r5,r2
    b7b8:	9009883a 	mov	r4,r18
    b7bc:	1023883a 	mov	r17,r2
    b7c0:	000ab6c0 	call	ab6c <__mulsi3>
    b7c4:	8009883a 	mov	r4,r16
    b7c8:	a00b883a 	mov	r5,r20
    b7cc:	1039883a 	mov	fp,r2
    b7d0:	00007280 	call	728 <__umodsi3>
    b7d4:	1004943a 	slli	r2,r2,16
    b7d8:	b808d43a 	srli	r4,r23,16
    b7dc:	d8c00217 	ldw	r3,8(sp)
    b7e0:	2084b03a 	or	r2,r4,r2
    b7e4:	1700062e 	bgeu	r2,fp,b800 <__divdf3+0x3c0>
    b7e8:	1585883a 	add	r2,r2,r22
    b7ec:	893fffc4 	addi	r4,r17,-1
    b7f0:	15811d36 	bltu	r2,r22,bc68 <__divdf3+0x828>
    b7f4:	17011c2e 	bgeu	r2,fp,bc68 <__divdf3+0x828>
    b7f8:	8c7fff84 	addi	r17,r17,-2
    b7fc:	1585883a 	add	r2,r2,r22
    b800:	1739c83a 	sub	fp,r2,fp
    b804:	a00b883a 	mov	r5,r20
    b808:	e009883a 	mov	r4,fp
    b80c:	d8c00215 	stw	r3,8(sp)
    b810:	00006c40 	call	6c4 <__udivsi3>
    b814:	100b883a 	mov	r5,r2
    b818:	9009883a 	mov	r4,r18
    b81c:	1021883a 	mov	r16,r2
    b820:	000ab6c0 	call	ab6c <__mulsi3>
    b824:	a00b883a 	mov	r5,r20
    b828:	e009883a 	mov	r4,fp
    b82c:	d8800415 	stw	r2,16(sp)
    b830:	00007280 	call	728 <__umodsi3>
    b834:	1004943a 	slli	r2,r2,16
    b838:	da000417 	ldw	r8,16(sp)
    b83c:	bdffffcc 	andi	r23,r23,65535
    b840:	b884b03a 	or	r2,r23,r2
    b844:	d8c00217 	ldw	r3,8(sp)
    b848:	1200062e 	bgeu	r2,r8,b864 <__divdf3+0x424>
    b84c:	1585883a 	add	r2,r2,r22
    b850:	813fffc4 	addi	r4,r16,-1
    b854:	15810236 	bltu	r2,r22,bc60 <__divdf3+0x820>
    b858:	1201012e 	bgeu	r2,r8,bc60 <__divdf3+0x820>
    b85c:	843fff84 	addi	r16,r16,-2
    b860:	1585883a 	add	r2,r2,r22
    b864:	8822943a 	slli	r17,r17,16
    b868:	d9800017 	ldw	r6,0(sp)
    b86c:	1211c83a 	sub	r8,r2,r8
    b870:	8c22b03a 	or	r17,r17,r16
    b874:	373fffcc 	andi	fp,r6,65535
    b878:	8abfffcc 	andi	r10,r17,65535
    b87c:	8820d43a 	srli	r16,r17,16
    b880:	5009883a 	mov	r4,r10
    b884:	e00b883a 	mov	r5,fp
    b888:	302ed43a 	srli	r23,r6,16
    b88c:	d8c00215 	stw	r3,8(sp)
    b890:	da000415 	stw	r8,16(sp)
    b894:	da800115 	stw	r10,4(sp)
    b898:	000ab6c0 	call	ab6c <__mulsi3>
    b89c:	800b883a 	mov	r5,r16
    b8a0:	e009883a 	mov	r4,fp
    b8a4:	d8800515 	stw	r2,20(sp)
    b8a8:	000ab6c0 	call	ab6c <__mulsi3>
    b8ac:	8009883a 	mov	r4,r16
    b8b0:	b80b883a 	mov	r5,r23
    b8b4:	d8800315 	stw	r2,12(sp)
    b8b8:	000ab6c0 	call	ab6c <__mulsi3>
    b8bc:	da800117 	ldw	r10,4(sp)
    b8c0:	b80b883a 	mov	r5,r23
    b8c4:	1021883a 	mov	r16,r2
    b8c8:	5009883a 	mov	r4,r10
    b8cc:	000ab6c0 	call	ab6c <__mulsi3>
    b8d0:	d9c00517 	ldw	r7,20(sp)
    b8d4:	da400317 	ldw	r9,12(sp)
    b8d8:	d8c00217 	ldw	r3,8(sp)
    b8dc:	3808d43a 	srli	r4,r7,16
    b8e0:	1245883a 	add	r2,r2,r9
    b8e4:	da000417 	ldw	r8,16(sp)
    b8e8:	2085883a 	add	r2,r4,r2
    b8ec:	1240022e 	bgeu	r2,r9,b8f8 <__divdf3+0x4b8>
    b8f0:	01000074 	movhi	r4,1
    b8f4:	8121883a 	add	r16,r16,r4
    b8f8:	1008d43a 	srli	r4,r2,16
    b8fc:	1004943a 	slli	r2,r2,16
    b900:	39ffffcc 	andi	r7,r7,65535
    b904:	2409883a 	add	r4,r4,r16
    b908:	11c5883a 	add	r2,r2,r7
    b90c:	4100bb36 	bltu	r8,r4,bbfc <__divdf3+0x7bc>
    b910:	4100d726 	beq	r8,r4,bc70 <__divdf3+0x830>
    b914:	4109c83a 	sub	r4,r8,r4
    b918:	a8a1c83a 	sub	r16,r21,r2
    b91c:	ac2b803a 	cmpltu	r21,r21,r16
    b920:	256bc83a 	sub	r21,r4,r21
    b924:	b540d926 	beq	r22,r21,bc8c <__divdf3+0x84c>
    b928:	a00b883a 	mov	r5,r20
    b92c:	a809883a 	mov	r4,r21
    b930:	d8c00215 	stw	r3,8(sp)
    b934:	00006c40 	call	6c4 <__udivsi3>
    b938:	100b883a 	mov	r5,r2
    b93c:	9009883a 	mov	r4,r18
    b940:	d8800515 	stw	r2,20(sp)
    b944:	000ab6c0 	call	ab6c <__mulsi3>
    b948:	a809883a 	mov	r4,r21
    b94c:	a00b883a 	mov	r5,r20
    b950:	d8800415 	stw	r2,16(sp)
    b954:	00007280 	call	728 <__umodsi3>
    b958:	1004943a 	slli	r2,r2,16
    b95c:	8008d43a 	srli	r4,r16,16
    b960:	da000417 	ldw	r8,16(sp)
    b964:	d8c00217 	ldw	r3,8(sp)
    b968:	2084b03a 	or	r2,r4,r2
    b96c:	d9c00517 	ldw	r7,20(sp)
    b970:	1200062e 	bgeu	r2,r8,b98c <__divdf3+0x54c>
    b974:	1585883a 	add	r2,r2,r22
    b978:	393fffc4 	addi	r4,r7,-1
    b97c:	1580c536 	bltu	r2,r22,bc94 <__divdf3+0x854>
    b980:	1200c42e 	bgeu	r2,r8,bc94 <__divdf3+0x854>
    b984:	39ffff84 	addi	r7,r7,-2
    b988:	1585883a 	add	r2,r2,r22
    b98c:	122bc83a 	sub	r21,r2,r8
    b990:	a00b883a 	mov	r5,r20
    b994:	a809883a 	mov	r4,r21
    b998:	d8c00215 	stw	r3,8(sp)
    b99c:	d9c00515 	stw	r7,20(sp)
    b9a0:	00006c40 	call	6c4 <__udivsi3>
    b9a4:	9009883a 	mov	r4,r18
    b9a8:	100b883a 	mov	r5,r2
    b9ac:	d8800415 	stw	r2,16(sp)
    b9b0:	000ab6c0 	call	ab6c <__mulsi3>
    b9b4:	a809883a 	mov	r4,r21
    b9b8:	a00b883a 	mov	r5,r20
    b9bc:	1025883a 	mov	r18,r2
    b9c0:	00007280 	call	728 <__umodsi3>
    b9c4:	1004943a 	slli	r2,r2,16
    b9c8:	813fffcc 	andi	r4,r16,65535
    b9cc:	d8c00217 	ldw	r3,8(sp)
    b9d0:	20a0b03a 	or	r16,r4,r2
    b9d4:	d9c00517 	ldw	r7,20(sp)
    b9d8:	da000417 	ldw	r8,16(sp)
    b9dc:	8480062e 	bgeu	r16,r18,b9f8 <__divdf3+0x5b8>
    b9e0:	85a1883a 	add	r16,r16,r22
    b9e4:	40bfffc4 	addi	r2,r8,-1
    b9e8:	8580ac36 	bltu	r16,r22,bc9c <__divdf3+0x85c>
    b9ec:	8480ab2e 	bgeu	r16,r18,bc9c <__divdf3+0x85c>
    b9f0:	423fff84 	addi	r8,r8,-2
    b9f4:	85a1883a 	add	r16,r16,r22
    b9f8:	3804943a 	slli	r2,r7,16
    b9fc:	84a1c83a 	sub	r16,r16,r18
    ba00:	e009883a 	mov	r4,fp
    ba04:	1228b03a 	or	r20,r2,r8
    ba08:	a1ffffcc 	andi	r7,r20,65535
    ba0c:	a024d43a 	srli	r18,r20,16
    ba10:	380b883a 	mov	r5,r7
    ba14:	d8c00215 	stw	r3,8(sp)
    ba18:	d9c00515 	stw	r7,20(sp)
    ba1c:	000ab6c0 	call	ab6c <__mulsi3>
    ba20:	900b883a 	mov	r5,r18
    ba24:	e009883a 	mov	r4,fp
    ba28:	102b883a 	mov	r21,r2
    ba2c:	000ab6c0 	call	ab6c <__mulsi3>
    ba30:	900b883a 	mov	r5,r18
    ba34:	b809883a 	mov	r4,r23
    ba38:	1039883a 	mov	fp,r2
    ba3c:	000ab6c0 	call	ab6c <__mulsi3>
    ba40:	d9c00517 	ldw	r7,20(sp)
    ba44:	b80b883a 	mov	r5,r23
    ba48:	1025883a 	mov	r18,r2
    ba4c:	3809883a 	mov	r4,r7
    ba50:	000ab6c0 	call	ab6c <__mulsi3>
    ba54:	a808d43a 	srli	r4,r21,16
    ba58:	1705883a 	add	r2,r2,fp
    ba5c:	d8c00217 	ldw	r3,8(sp)
    ba60:	2085883a 	add	r2,r4,r2
    ba64:	1700022e 	bgeu	r2,fp,ba70 <__divdf3+0x630>
    ba68:	01000074 	movhi	r4,1
    ba6c:	9125883a 	add	r18,r18,r4
    ba70:	1008d43a 	srli	r4,r2,16
    ba74:	1004943a 	slli	r2,r2,16
    ba78:	ad7fffcc 	andi	r21,r21,65535
    ba7c:	2489883a 	add	r4,r4,r18
    ba80:	1545883a 	add	r2,r2,r21
    ba84:	81003836 	bltu	r16,r4,bb68 <__divdf3+0x728>
    ba88:	81003626 	beq	r16,r4,bb64 <__divdf3+0x724>
    ba8c:	a5000054 	ori	r20,r20,1
    ba90:	1880ffc4 	addi	r2,r3,1023
    ba94:	00bf2e0e 	bge	zero,r2,b750 <__alt_data_end+0xfffdaa10>
    ba98:	a10001cc 	andi	r4,r20,7
    ba9c:	20000726 	beq	r4,zero,babc <__divdf3+0x67c>
    baa0:	a10003cc 	andi	r4,r20,15
    baa4:	01400104 	movi	r5,4
    baa8:	21400426 	beq	r4,r5,babc <__divdf3+0x67c>
    baac:	a149883a 	add	r4,r20,r5
    bab0:	2529803a 	cmpltu	r20,r4,r20
    bab4:	8d23883a 	add	r17,r17,r20
    bab8:	2029883a 	mov	r20,r4
    babc:	8900402c 	andhi	r4,r17,256
    bac0:	20000426 	beq	r4,zero,bad4 <__divdf3+0x694>
    bac4:	18810004 	addi	r2,r3,1024
    bac8:	00ffc034 	movhi	r3,65280
    bacc:	18ffffc4 	addi	r3,r3,-1
    bad0:	88e2703a 	and	r17,r17,r3
    bad4:	00c1ff84 	movi	r3,2046
    bad8:	18beb416 	blt	r3,r2,b5ac <__alt_data_end+0xfffda86c>
    badc:	a028d0fa 	srli	r20,r20,3
    bae0:	882a977a 	slli	r21,r17,29
    bae4:	8820927a 	slli	r16,r17,9
    bae8:	1081ffcc 	andi	r2,r2,2047
    baec:	ad2ab03a 	or	r21,r21,r20
    baf0:	8020d33a 	srli	r16,r16,12
    baf4:	9900004c 	andi	r4,r19,1
    baf8:	003eb006 	br	b5bc <__alt_data_end+0xfffda87c>
    bafc:	8080022c 	andhi	r2,r16,8
    bb00:	10001226 	beq	r2,zero,bb4c <__divdf3+0x70c>
    bb04:	8880022c 	andhi	r2,r17,8
    bb08:	1000101e 	bne	r2,zero,bb4c <__divdf3+0x70c>
    bb0c:	00800434 	movhi	r2,16
    bb10:	8c000234 	orhi	r16,r17,8
    bb14:	10bfffc4 	addi	r2,r2,-1
    bb18:	b809883a 	mov	r4,r23
    bb1c:	80a0703a 	and	r16,r16,r2
    bb20:	a02b883a 	mov	r21,r20
    bb24:	003f0806 	br	b748 <__alt_data_end+0xfffdaa08>
    bb28:	008000c4 	movi	r2,3
    bb2c:	3880b126 	beq	r7,r2,bdf4 <__divdf3+0x9b4>
    bb30:	00800044 	movi	r2,1
    bb34:	38805b1e 	bne	r7,r2,bca4 <__divdf3+0x864>
    bb38:	e009883a 	mov	r4,fp
    bb3c:	0005883a 	mov	r2,zero
    bb40:	0021883a 	mov	r16,zero
    bb44:	002b883a 	mov	r21,zero
    bb48:	003e9c06 	br	b5bc <__alt_data_end+0xfffda87c>
    bb4c:	00800434 	movhi	r2,16
    bb50:	84000234 	orhi	r16,r16,8
    bb54:	10bfffc4 	addi	r2,r2,-1
    bb58:	b009883a 	mov	r4,r22
    bb5c:	80a0703a 	and	r16,r16,r2
    bb60:	003ef906 	br	b748 <__alt_data_end+0xfffdaa08>
    bb64:	103fca26 	beq	r2,zero,ba90 <__alt_data_end+0xfffdad50>
    bb68:	b421883a 	add	r16,r22,r16
    bb6c:	a17fffc4 	addi	r5,r20,-1
    bb70:	8580422e 	bgeu	r16,r22,bc7c <__divdf3+0x83c>
    bb74:	2829883a 	mov	r20,r5
    bb78:	813fc41e 	bne	r16,r4,ba8c <__alt_data_end+0xfffdad4c>
    bb7c:	d9800017 	ldw	r6,0(sp)
    bb80:	30bfc21e 	bne	r6,r2,ba8c <__alt_data_end+0xfffdad4c>
    bb84:	003fc206 	br	ba90 <__alt_data_end+0xfffdad50>
    bb88:	143ff604 	addi	r16,r2,-40
    bb8c:	8c20983a 	sll	r16,r17,r16
    bb90:	002b883a 	mov	r21,zero
    bb94:	003eb406 	br	b668 <__alt_data_end+0xfffda928>
    bb98:	d9800215 	stw	r6,8(sp)
    bb9c:	d9c00515 	stw	r7,20(sp)
    bba0:	da000415 	stw	r8,16(sp)
    bba4:	000d3d40 	call	d3d4 <__clzsi2>
    bba8:	10800804 	addi	r2,r2,32
    bbac:	da000417 	ldw	r8,16(sp)
    bbb0:	d9c00517 	ldw	r7,20(sp)
    bbb4:	d9800217 	ldw	r6,8(sp)
    bbb8:	003ea106 	br	b640 <__alt_data_end+0xfffda900>
    bbbc:	147ff604 	addi	r17,r2,-40
    bbc0:	3462983a 	sll	r17,r6,r17
    bbc4:	0029883a 	mov	r20,zero
    bbc8:	003ec906 	br	b6f0 <__alt_data_end+0xfffda9b0>
    bbcc:	3009883a 	mov	r4,r6
    bbd0:	d9400115 	stw	r5,4(sp)
    bbd4:	d9800215 	stw	r6,8(sp)
    bbd8:	da000415 	stw	r8,16(sp)
    bbdc:	da400315 	stw	r9,12(sp)
    bbe0:	000d3d40 	call	d3d4 <__clzsi2>
    bbe4:	10800804 	addi	r2,r2,32
    bbe8:	da400317 	ldw	r9,12(sp)
    bbec:	da000417 	ldw	r8,16(sp)
    bbf0:	d9800217 	ldw	r6,8(sp)
    bbf4:	d9400117 	ldw	r5,4(sp)
    bbf8:	003eb306 	br	b6c8 <__alt_data_end+0xfffda988>
    bbfc:	d9800017 	ldw	r6,0(sp)
    bc00:	a9ab883a 	add	r21,r21,r6
    bc04:	a98b803a 	cmpltu	r5,r21,r6
    bc08:	2d8b883a 	add	r5,r5,r22
    bc0c:	2a11883a 	add	r8,r5,r8
    bc10:	897fffc4 	addi	r5,r17,-1
    bc14:	b2000c2e 	bgeu	r22,r8,bc48 <__divdf3+0x808>
    bc18:	41003f36 	bltu	r8,r4,bd18 <__divdf3+0x8d8>
    bc1c:	22006c26 	beq	r4,r8,bdd0 <__divdf3+0x990>
    bc20:	4109c83a 	sub	r4,r8,r4
    bc24:	2823883a 	mov	r17,r5
    bc28:	003f3b06 	br	b918 <__alt_data_end+0xfffdabd8>
    bc2c:	ad3ed336 	bltu	r21,r20,b77c <__alt_data_end+0xfffdaa3c>
    bc30:	a804d07a 	srli	r2,r21,1
    bc34:	802e97fa 	slli	r23,r16,31
    bc38:	a82a97fa 	slli	r21,r21,31
    bc3c:	8020d07a 	srli	r16,r16,1
    bc40:	b8aeb03a 	or	r23,r23,r2
    bc44:	003ed006 	br	b788 <__alt_data_end+0xfffdaa48>
    bc48:	b23ff51e 	bne	r22,r8,bc20 <__alt_data_end+0xfffdaee0>
    bc4c:	d9800017 	ldw	r6,0(sp)
    bc50:	a9bff12e 	bgeu	r21,r6,bc18 <__alt_data_end+0xfffdaed8>
    bc54:	b109c83a 	sub	r4,r22,r4
    bc58:	2823883a 	mov	r17,r5
    bc5c:	003f2e06 	br	b918 <__alt_data_end+0xfffdabd8>
    bc60:	2021883a 	mov	r16,r4
    bc64:	003eff06 	br	b864 <__alt_data_end+0xfffdab24>
    bc68:	2023883a 	mov	r17,r4
    bc6c:	003ee406 	br	b800 <__alt_data_end+0xfffdaac0>
    bc70:	a8bfe236 	bltu	r21,r2,bbfc <__alt_data_end+0xfffdaebc>
    bc74:	0009883a 	mov	r4,zero
    bc78:	003f2706 	br	b918 <__alt_data_end+0xfffdabd8>
    bc7c:	81002d36 	bltu	r16,r4,bd34 <__divdf3+0x8f4>
    bc80:	24005626 	beq	r4,r16,bddc <__divdf3+0x99c>
    bc84:	2829883a 	mov	r20,r5
    bc88:	003f8006 	br	ba8c <__alt_data_end+0xfffdad4c>
    bc8c:	053fffc4 	movi	r20,-1
    bc90:	003f7f06 	br	ba90 <__alt_data_end+0xfffdad50>
    bc94:	200f883a 	mov	r7,r4
    bc98:	003f3c06 	br	b98c <__alt_data_end+0xfffdac4c>
    bc9c:	1011883a 	mov	r8,r2
    bca0:	003f5506 	br	b9f8 <__alt_data_end+0xfffdacb8>
    bca4:	e027883a 	mov	r19,fp
    bca8:	003f7906 	br	ba90 <__alt_data_end+0xfffdad50>
    bcac:	010007c4 	movi	r4,31
    bcb0:	20c02816 	blt	r4,r3,bd54 <__divdf3+0x914>
    bcb4:	00800804 	movi	r2,32
    bcb8:	10c5c83a 	sub	r2,r2,r3
    bcbc:	888a983a 	sll	r5,r17,r2
    bcc0:	a0c8d83a 	srl	r4,r20,r3
    bcc4:	a084983a 	sll	r2,r20,r2
    bcc8:	88e2d83a 	srl	r17,r17,r3
    bccc:	2906b03a 	or	r3,r5,r4
    bcd0:	1004c03a 	cmpne	r2,r2,zero
    bcd4:	1886b03a 	or	r3,r3,r2
    bcd8:	188001cc 	andi	r2,r3,7
    bcdc:	10000726 	beq	r2,zero,bcfc <__divdf3+0x8bc>
    bce0:	188003cc 	andi	r2,r3,15
    bce4:	01000104 	movi	r4,4
    bce8:	11000426 	beq	r2,r4,bcfc <__divdf3+0x8bc>
    bcec:	1805883a 	mov	r2,r3
    bcf0:	10c00104 	addi	r3,r2,4
    bcf4:	1885803a 	cmpltu	r2,r3,r2
    bcf8:	88a3883a 	add	r17,r17,r2
    bcfc:	8880202c 	andhi	r2,r17,128
    bd00:	10002926 	beq	r2,zero,bda8 <__divdf3+0x968>
    bd04:	9900004c 	andi	r4,r19,1
    bd08:	00800044 	movi	r2,1
    bd0c:	0021883a 	mov	r16,zero
    bd10:	002b883a 	mov	r21,zero
    bd14:	003e2906 	br	b5bc <__alt_data_end+0xfffda87c>
    bd18:	d9800017 	ldw	r6,0(sp)
    bd1c:	8c7fff84 	addi	r17,r17,-2
    bd20:	a9ab883a 	add	r21,r21,r6
    bd24:	a98b803a 	cmpltu	r5,r21,r6
    bd28:	2d8b883a 	add	r5,r5,r22
    bd2c:	2a11883a 	add	r8,r5,r8
    bd30:	003ef806 	br	b914 <__alt_data_end+0xfffdabd4>
    bd34:	d9800017 	ldw	r6,0(sp)
    bd38:	318f883a 	add	r7,r6,r6
    bd3c:	398b803a 	cmpltu	r5,r7,r6
    bd40:	2d8d883a 	add	r6,r5,r22
    bd44:	81a1883a 	add	r16,r16,r6
    bd48:	a17fff84 	addi	r5,r20,-2
    bd4c:	d9c00015 	stw	r7,0(sp)
    bd50:	003f8806 	br	bb74 <__alt_data_end+0xfffdae34>
    bd54:	013ff844 	movi	r4,-31
    bd58:	2085c83a 	sub	r2,r4,r2
    bd5c:	8888d83a 	srl	r4,r17,r2
    bd60:	00800804 	movi	r2,32
    bd64:	18802126 	beq	r3,r2,bdec <__divdf3+0x9ac>
    bd68:	04001004 	movi	r16,64
    bd6c:	80c7c83a 	sub	r3,r16,r3
    bd70:	88e0983a 	sll	r16,r17,r3
    bd74:	8504b03a 	or	r2,r16,r20
    bd78:	1004c03a 	cmpne	r2,r2,zero
    bd7c:	2084b03a 	or	r2,r4,r2
    bd80:	144001cc 	andi	r17,r2,7
    bd84:	88000d1e 	bne	r17,zero,bdbc <__divdf3+0x97c>
    bd88:	0021883a 	mov	r16,zero
    bd8c:	102ad0fa 	srli	r21,r2,3
    bd90:	9900004c 	andi	r4,r19,1
    bd94:	0005883a 	mov	r2,zero
    bd98:	ac6ab03a 	or	r21,r21,r17
    bd9c:	003e0706 	br	b5bc <__alt_data_end+0xfffda87c>
    bda0:	1007883a 	mov	r3,r2
    bda4:	0023883a 	mov	r17,zero
    bda8:	8820927a 	slli	r16,r17,9
    bdac:	1805883a 	mov	r2,r3
    bdb0:	8822977a 	slli	r17,r17,29
    bdb4:	8020d33a 	srli	r16,r16,12
    bdb8:	003ff406 	br	bd8c <__alt_data_end+0xfffdb04c>
    bdbc:	10c003cc 	andi	r3,r2,15
    bdc0:	01000104 	movi	r4,4
    bdc4:	193ff626 	beq	r3,r4,bda0 <__alt_data_end+0xfffdb060>
    bdc8:	0023883a 	mov	r17,zero
    bdcc:	003fc806 	br	bcf0 <__alt_data_end+0xfffdafb0>
    bdd0:	a8bfd136 	bltu	r21,r2,bd18 <__alt_data_end+0xfffdafd8>
    bdd4:	2823883a 	mov	r17,r5
    bdd8:	003fa606 	br	bc74 <__alt_data_end+0xfffdaf34>
    bddc:	d9800017 	ldw	r6,0(sp)
    bde0:	30bfd436 	bltu	r6,r2,bd34 <__alt_data_end+0xfffdaff4>
    bde4:	2829883a 	mov	r20,r5
    bde8:	003f6406 	br	bb7c <__alt_data_end+0xfffdae3c>
    bdec:	0021883a 	mov	r16,zero
    bdf0:	003fe006 	br	bd74 <__alt_data_end+0xfffdb034>
    bdf4:	00800434 	movhi	r2,16
    bdf8:	8c000234 	orhi	r16,r17,8
    bdfc:	10bfffc4 	addi	r2,r2,-1
    be00:	e009883a 	mov	r4,fp
    be04:	80a0703a 	and	r16,r16,r2
    be08:	a02b883a 	mov	r21,r20
    be0c:	003e4e06 	br	b748 <__alt_data_end+0xfffdaa08>

0000be10 <__eqdf2>:
    be10:	2804d53a 	srli	r2,r5,20
    be14:	3806d53a 	srli	r3,r7,20
    be18:	02000434 	movhi	r8,16
    be1c:	423fffc4 	addi	r8,r8,-1
    be20:	1081ffcc 	andi	r2,r2,2047
    be24:	0281ffc4 	movi	r10,2047
    be28:	2a12703a 	and	r9,r5,r8
    be2c:	18c1ffcc 	andi	r3,r3,2047
    be30:	3a10703a 	and	r8,r7,r8
    be34:	280ad7fa 	srli	r5,r5,31
    be38:	380ed7fa 	srli	r7,r7,31
    be3c:	12801026 	beq	r2,r10,be80 <__eqdf2+0x70>
    be40:	0281ffc4 	movi	r10,2047
    be44:	1a800a26 	beq	r3,r10,be70 <__eqdf2+0x60>
    be48:	10c00226 	beq	r2,r3,be54 <__eqdf2+0x44>
    be4c:	00800044 	movi	r2,1
    be50:	f800283a 	ret
    be54:	4a3ffd1e 	bne	r9,r8,be4c <__alt_data_end+0xfffdb10c>
    be58:	21bffc1e 	bne	r4,r6,be4c <__alt_data_end+0xfffdb10c>
    be5c:	29c00c26 	beq	r5,r7,be90 <__eqdf2+0x80>
    be60:	103ffa1e 	bne	r2,zero,be4c <__alt_data_end+0xfffdb10c>
    be64:	2244b03a 	or	r2,r4,r9
    be68:	1004c03a 	cmpne	r2,r2,zero
    be6c:	f800283a 	ret
    be70:	3214b03a 	or	r10,r6,r8
    be74:	503ff426 	beq	r10,zero,be48 <__alt_data_end+0xfffdb108>
    be78:	00800044 	movi	r2,1
    be7c:	f800283a 	ret
    be80:	2254b03a 	or	r10,r4,r9
    be84:	503fee26 	beq	r10,zero,be40 <__alt_data_end+0xfffdb100>
    be88:	00800044 	movi	r2,1
    be8c:	f800283a 	ret
    be90:	0005883a 	mov	r2,zero
    be94:	f800283a 	ret

0000be98 <__gedf2>:
    be98:	2804d53a 	srli	r2,r5,20
    be9c:	3806d53a 	srli	r3,r7,20
    bea0:	02000434 	movhi	r8,16
    bea4:	423fffc4 	addi	r8,r8,-1
    bea8:	1081ffcc 	andi	r2,r2,2047
    beac:	0241ffc4 	movi	r9,2047
    beb0:	2a14703a 	and	r10,r5,r8
    beb4:	18c1ffcc 	andi	r3,r3,2047
    beb8:	3a10703a 	and	r8,r7,r8
    bebc:	280ad7fa 	srli	r5,r5,31
    bec0:	380ed7fa 	srli	r7,r7,31
    bec4:	12401d26 	beq	r2,r9,bf3c <__gedf2+0xa4>
    bec8:	0241ffc4 	movi	r9,2047
    becc:	1a401226 	beq	r3,r9,bf18 <__gedf2+0x80>
    bed0:	1000081e 	bne	r2,zero,bef4 <__gedf2+0x5c>
    bed4:	2296b03a 	or	r11,r4,r10
    bed8:	5813003a 	cmpeq	r9,r11,zero
    bedc:	1800091e 	bne	r3,zero,bf04 <__gedf2+0x6c>
    bee0:	3218b03a 	or	r12,r6,r8
    bee4:	6000071e 	bne	r12,zero,bf04 <__gedf2+0x6c>
    bee8:	0005883a 	mov	r2,zero
    beec:	5800101e 	bne	r11,zero,bf30 <__gedf2+0x98>
    bef0:	f800283a 	ret
    bef4:	18000c1e 	bne	r3,zero,bf28 <__gedf2+0x90>
    bef8:	3212b03a 	or	r9,r6,r8
    befc:	48000c26 	beq	r9,zero,bf30 <__gedf2+0x98>
    bf00:	0013883a 	mov	r9,zero
    bf04:	39c03fcc 	andi	r7,r7,255
    bf08:	48000826 	beq	r9,zero,bf2c <__gedf2+0x94>
    bf0c:	38000926 	beq	r7,zero,bf34 <__gedf2+0x9c>
    bf10:	00800044 	movi	r2,1
    bf14:	f800283a 	ret
    bf18:	3212b03a 	or	r9,r6,r8
    bf1c:	483fec26 	beq	r9,zero,bed0 <__alt_data_end+0xfffdb190>
    bf20:	00bfff84 	movi	r2,-2
    bf24:	f800283a 	ret
    bf28:	39c03fcc 	andi	r7,r7,255
    bf2c:	29c00626 	beq	r5,r7,bf48 <__gedf2+0xb0>
    bf30:	283ff726 	beq	r5,zero,bf10 <__alt_data_end+0xfffdb1d0>
    bf34:	00bfffc4 	movi	r2,-1
    bf38:	f800283a 	ret
    bf3c:	2292b03a 	or	r9,r4,r10
    bf40:	483fe126 	beq	r9,zero,bec8 <__alt_data_end+0xfffdb188>
    bf44:	003ff606 	br	bf20 <__alt_data_end+0xfffdb1e0>
    bf48:	18bff916 	blt	r3,r2,bf30 <__alt_data_end+0xfffdb1f0>
    bf4c:	10c00316 	blt	r2,r3,bf5c <__gedf2+0xc4>
    bf50:	42bff736 	bltu	r8,r10,bf30 <__alt_data_end+0xfffdb1f0>
    bf54:	52000326 	beq	r10,r8,bf64 <__gedf2+0xcc>
    bf58:	5200042e 	bgeu	r10,r8,bf6c <__gedf2+0xd4>
    bf5c:	283fec1e 	bne	r5,zero,bf10 <__alt_data_end+0xfffdb1d0>
    bf60:	003ff406 	br	bf34 <__alt_data_end+0xfffdb1f4>
    bf64:	313ff236 	bltu	r6,r4,bf30 <__alt_data_end+0xfffdb1f0>
    bf68:	21bffc36 	bltu	r4,r6,bf5c <__alt_data_end+0xfffdb21c>
    bf6c:	0005883a 	mov	r2,zero
    bf70:	f800283a 	ret

0000bf74 <__ledf2>:
    bf74:	2804d53a 	srli	r2,r5,20
    bf78:	3810d53a 	srli	r8,r7,20
    bf7c:	00c00434 	movhi	r3,16
    bf80:	18ffffc4 	addi	r3,r3,-1
    bf84:	1081ffcc 	andi	r2,r2,2047
    bf88:	0241ffc4 	movi	r9,2047
    bf8c:	28d4703a 	and	r10,r5,r3
    bf90:	4201ffcc 	andi	r8,r8,2047
    bf94:	38c6703a 	and	r3,r7,r3
    bf98:	280ad7fa 	srli	r5,r5,31
    bf9c:	380ed7fa 	srli	r7,r7,31
    bfa0:	12401f26 	beq	r2,r9,c020 <__ledf2+0xac>
    bfa4:	0241ffc4 	movi	r9,2047
    bfa8:	42401426 	beq	r8,r9,bffc <__ledf2+0x88>
    bfac:	1000091e 	bne	r2,zero,bfd4 <__ledf2+0x60>
    bfb0:	2296b03a 	or	r11,r4,r10
    bfb4:	5813003a 	cmpeq	r9,r11,zero
    bfb8:	29403fcc 	andi	r5,r5,255
    bfbc:	40000a1e 	bne	r8,zero,bfe8 <__ledf2+0x74>
    bfc0:	30d8b03a 	or	r12,r6,r3
    bfc4:	6000081e 	bne	r12,zero,bfe8 <__ledf2+0x74>
    bfc8:	0005883a 	mov	r2,zero
    bfcc:	5800111e 	bne	r11,zero,c014 <__ledf2+0xa0>
    bfd0:	f800283a 	ret
    bfd4:	29403fcc 	andi	r5,r5,255
    bfd8:	40000c1e 	bne	r8,zero,c00c <__ledf2+0x98>
    bfdc:	30d2b03a 	or	r9,r6,r3
    bfe0:	48000c26 	beq	r9,zero,c014 <__ledf2+0xa0>
    bfe4:	0013883a 	mov	r9,zero
    bfe8:	39c03fcc 	andi	r7,r7,255
    bfec:	48000826 	beq	r9,zero,c010 <__ledf2+0x9c>
    bff0:	38001126 	beq	r7,zero,c038 <__ledf2+0xc4>
    bff4:	00800044 	movi	r2,1
    bff8:	f800283a 	ret
    bffc:	30d2b03a 	or	r9,r6,r3
    c000:	483fea26 	beq	r9,zero,bfac <__alt_data_end+0xfffdb26c>
    c004:	00800084 	movi	r2,2
    c008:	f800283a 	ret
    c00c:	39c03fcc 	andi	r7,r7,255
    c010:	39400726 	beq	r7,r5,c030 <__ledf2+0xbc>
    c014:	2800081e 	bne	r5,zero,c038 <__ledf2+0xc4>
    c018:	00800044 	movi	r2,1
    c01c:	f800283a 	ret
    c020:	2292b03a 	or	r9,r4,r10
    c024:	483fdf26 	beq	r9,zero,bfa4 <__alt_data_end+0xfffdb264>
    c028:	00800084 	movi	r2,2
    c02c:	f800283a 	ret
    c030:	4080030e 	bge	r8,r2,c040 <__ledf2+0xcc>
    c034:	383fef26 	beq	r7,zero,bff4 <__alt_data_end+0xfffdb2b4>
    c038:	00bfffc4 	movi	r2,-1
    c03c:	f800283a 	ret
    c040:	123feb16 	blt	r2,r8,bff0 <__alt_data_end+0xfffdb2b0>
    c044:	1abff336 	bltu	r3,r10,c014 <__alt_data_end+0xfffdb2d4>
    c048:	50c00326 	beq	r10,r3,c058 <__ledf2+0xe4>
    c04c:	50c0042e 	bgeu	r10,r3,c060 <__ledf2+0xec>
    c050:	283fe81e 	bne	r5,zero,bff4 <__alt_data_end+0xfffdb2b4>
    c054:	003ff806 	br	c038 <__alt_data_end+0xfffdb2f8>
    c058:	313fee36 	bltu	r6,r4,c014 <__alt_data_end+0xfffdb2d4>
    c05c:	21bffc36 	bltu	r4,r6,c050 <__alt_data_end+0xfffdb310>
    c060:	0005883a 	mov	r2,zero
    c064:	f800283a 	ret

0000c068 <__muldf3>:
    c068:	deffee04 	addi	sp,sp,-72
    c06c:	dd000c15 	stw	r20,48(sp)
    c070:	2828d53a 	srli	r20,r5,20
    c074:	ddc00f15 	stw	r23,60(sp)
    c078:	282ed7fa 	srli	r23,r5,31
    c07c:	dc000815 	stw	r16,32(sp)
    c080:	04000434 	movhi	r16,16
    c084:	dcc00b15 	stw	r19,44(sp)
    c088:	843fffc4 	addi	r16,r16,-1
    c08c:	dfc01115 	stw	ra,68(sp)
    c090:	df001015 	stw	fp,64(sp)
    c094:	dd800e15 	stw	r22,56(sp)
    c098:	dd400d15 	stw	r21,52(sp)
    c09c:	dc800a15 	stw	r18,40(sp)
    c0a0:	dc400915 	stw	r17,36(sp)
    c0a4:	a501ffcc 	andi	r20,r20,2047
    c0a8:	2c20703a 	and	r16,r5,r16
    c0ac:	b827883a 	mov	r19,r23
    c0b0:	ba403fcc 	andi	r9,r23,255
    c0b4:	a0006026 	beq	r20,zero,c238 <__muldf3+0x1d0>
    c0b8:	0081ffc4 	movi	r2,2047
    c0bc:	202d883a 	mov	r22,r4
    c0c0:	a0803626 	beq	r20,r2,c19c <__muldf3+0x134>
    c0c4:	84000434 	orhi	r16,r16,16
    c0c8:	200ad77a 	srli	r5,r4,29
    c0cc:	800490fa 	slli	r2,r16,3
    c0d0:	202c90fa 	slli	r22,r4,3
    c0d4:	a53f0044 	addi	r20,r20,-1023
    c0d8:	28a0b03a 	or	r16,r5,r2
    c0dc:	002b883a 	mov	r21,zero
    c0e0:	000b883a 	mov	r5,zero
    c0e4:	3804d53a 	srli	r2,r7,20
    c0e8:	3838d7fa 	srli	fp,r7,31
    c0ec:	04400434 	movhi	r17,16
    c0f0:	8c7fffc4 	addi	r17,r17,-1
    c0f4:	1081ffcc 	andi	r2,r2,2047
    c0f8:	3025883a 	mov	r18,r6
    c0fc:	3c62703a 	and	r17,r7,r17
    c100:	e2803fcc 	andi	r10,fp,255
    c104:	10006d26 	beq	r2,zero,c2bc <__muldf3+0x254>
    c108:	00c1ffc4 	movi	r3,2047
    c10c:	10c06526 	beq	r2,r3,c2a4 <__muldf3+0x23c>
    c110:	8c400434 	orhi	r17,r17,16
    c114:	300ed77a 	srli	r7,r6,29
    c118:	880690fa 	slli	r3,r17,3
    c11c:	302490fa 	slli	r18,r6,3
    c120:	10bf0044 	addi	r2,r2,-1023
    c124:	38e2b03a 	or	r17,r7,r3
    c128:	000f883a 	mov	r7,zero
    c12c:	a087883a 	add	r3,r20,r2
    c130:	010003c4 	movi	r4,15
    c134:	3d44b03a 	or	r2,r7,r21
    c138:	e5ccf03a 	xor	r6,fp,r23
    c13c:	1a000044 	addi	r8,r3,1
    c140:	20809b36 	bltu	r4,r2,c3b0 <__muldf3+0x348>
    c144:	100490ba 	slli	r2,r2,2
    c148:	01000074 	movhi	r4,1
    c14c:	21305704 	addi	r4,r4,-16036
    c150:	1105883a 	add	r2,r2,r4
    c154:	10800017 	ldw	r2,0(r2)
    c158:	1000683a 	jmp	r2
    c15c:	0000c3b0 	cmpltui	zero,zero,782
    c160:	0000c1bc 	xorhi	zero,zero,774
    c164:	0000c1bc 	xorhi	zero,zero,774
    c168:	0000c1b8 	rdprs	zero,zero,774
    c16c:	0000c38c 	andi	zero,zero,782
    c170:	0000c38c 	andi	zero,zero,782
    c174:	0000c374 	movhi	zero,781
    c178:	0000c1b8 	rdprs	zero,zero,774
    c17c:	0000c38c 	andi	zero,zero,782
    c180:	0000c374 	movhi	zero,781
    c184:	0000c38c 	andi	zero,zero,782
    c188:	0000c1b8 	rdprs	zero,zero,774
    c18c:	0000c39c 	xori	zero,zero,782
    c190:	0000c39c 	xori	zero,zero,782
    c194:	0000c39c 	xori	zero,zero,782
    c198:	0000c6fc 	xorhi	zero,zero,795
    c19c:	2404b03a 	or	r2,r4,r16
    c1a0:	1000711e 	bne	r2,zero,c368 <__muldf3+0x300>
    c1a4:	05400204 	movi	r21,8
    c1a8:	0021883a 	mov	r16,zero
    c1ac:	002d883a 	mov	r22,zero
    c1b0:	01400084 	movi	r5,2
    c1b4:	003fcb06 	br	c0e4 <__alt_data_end+0xfffdb3a4>
    c1b8:	500d883a 	mov	r6,r10
    c1bc:	00800084 	movi	r2,2
    c1c0:	38805926 	beq	r7,r2,c328 <__muldf3+0x2c0>
    c1c4:	008000c4 	movi	r2,3
    c1c8:	3881bb26 	beq	r7,r2,c8b8 <__muldf3+0x850>
    c1cc:	00800044 	movi	r2,1
    c1d0:	3881961e 	bne	r7,r2,c82c <__muldf3+0x7c4>
    c1d4:	3027883a 	mov	r19,r6
    c1d8:	0005883a 	mov	r2,zero
    c1dc:	0021883a 	mov	r16,zero
    c1e0:	002d883a 	mov	r22,zero
    c1e4:	1004953a 	slli	r2,r2,20
    c1e8:	98c03fcc 	andi	r3,r19,255
    c1ec:	04400434 	movhi	r17,16
    c1f0:	8c7fffc4 	addi	r17,r17,-1
    c1f4:	180697fa 	slli	r3,r3,31
    c1f8:	8460703a 	and	r16,r16,r17
    c1fc:	80a0b03a 	or	r16,r16,r2
    c200:	80c6b03a 	or	r3,r16,r3
    c204:	b005883a 	mov	r2,r22
    c208:	dfc01117 	ldw	ra,68(sp)
    c20c:	df001017 	ldw	fp,64(sp)
    c210:	ddc00f17 	ldw	r23,60(sp)
    c214:	dd800e17 	ldw	r22,56(sp)
    c218:	dd400d17 	ldw	r21,52(sp)
    c21c:	dd000c17 	ldw	r20,48(sp)
    c220:	dcc00b17 	ldw	r19,44(sp)
    c224:	dc800a17 	ldw	r18,40(sp)
    c228:	dc400917 	ldw	r17,36(sp)
    c22c:	dc000817 	ldw	r16,32(sp)
    c230:	dec01204 	addi	sp,sp,72
    c234:	f800283a 	ret
    c238:	2404b03a 	or	r2,r4,r16
    c23c:	202b883a 	mov	r21,r4
    c240:	10004426 	beq	r2,zero,c354 <__muldf3+0x2ec>
    c244:	80015126 	beq	r16,zero,c78c <__muldf3+0x724>
    c248:	8009883a 	mov	r4,r16
    c24c:	d9800715 	stw	r6,28(sp)
    c250:	d9c00215 	stw	r7,8(sp)
    c254:	da400415 	stw	r9,16(sp)
    c258:	000d3d40 	call	d3d4 <__clzsi2>
    c25c:	d9800717 	ldw	r6,28(sp)
    c260:	d9c00217 	ldw	r7,8(sp)
    c264:	da400417 	ldw	r9,16(sp)
    c268:	113ffd44 	addi	r4,r2,-11
    c26c:	00c00704 	movi	r3,28
    c270:	19014216 	blt	r3,r4,c77c <__muldf3+0x714>
    c274:	00c00744 	movi	r3,29
    c278:	15bffe04 	addi	r22,r2,-8
    c27c:	1907c83a 	sub	r3,r3,r4
    c280:	85a0983a 	sll	r16,r16,r22
    c284:	a8c6d83a 	srl	r3,r21,r3
    c288:	adac983a 	sll	r22,r21,r22
    c28c:	1c20b03a 	or	r16,r3,r16
    c290:	1080fcc4 	addi	r2,r2,1011
    c294:	00a9c83a 	sub	r20,zero,r2
    c298:	002b883a 	mov	r21,zero
    c29c:	000b883a 	mov	r5,zero
    c2a0:	003f9006 	br	c0e4 <__alt_data_end+0xfffdb3a4>
    c2a4:	3446b03a 	or	r3,r6,r17
    c2a8:	1800281e 	bne	r3,zero,c34c <__muldf3+0x2e4>
    c2ac:	0023883a 	mov	r17,zero
    c2b0:	0025883a 	mov	r18,zero
    c2b4:	01c00084 	movi	r7,2
    c2b8:	003f9c06 	br	c12c <__alt_data_end+0xfffdb3ec>
    c2bc:	3446b03a 	or	r3,r6,r17
    c2c0:	18001e26 	beq	r3,zero,c33c <__muldf3+0x2d4>
    c2c4:	88012126 	beq	r17,zero,c74c <__muldf3+0x6e4>
    c2c8:	8809883a 	mov	r4,r17
    c2cc:	d9400215 	stw	r5,8(sp)
    c2d0:	d9800715 	stw	r6,28(sp)
    c2d4:	da400415 	stw	r9,16(sp)
    c2d8:	da800315 	stw	r10,12(sp)
    c2dc:	000d3d40 	call	d3d4 <__clzsi2>
    c2e0:	d9400217 	ldw	r5,8(sp)
    c2e4:	d9800717 	ldw	r6,28(sp)
    c2e8:	da400417 	ldw	r9,16(sp)
    c2ec:	da800317 	ldw	r10,12(sp)
    c2f0:	113ffd44 	addi	r4,r2,-11
    c2f4:	00c00704 	movi	r3,28
    c2f8:	19011016 	blt	r3,r4,c73c <__muldf3+0x6d4>
    c2fc:	00c00744 	movi	r3,29
    c300:	14bffe04 	addi	r18,r2,-8
    c304:	1907c83a 	sub	r3,r3,r4
    c308:	8ca2983a 	sll	r17,r17,r18
    c30c:	30c6d83a 	srl	r3,r6,r3
    c310:	34a4983a 	sll	r18,r6,r18
    c314:	1c62b03a 	or	r17,r3,r17
    c318:	1080fcc4 	addi	r2,r2,1011
    c31c:	0085c83a 	sub	r2,zero,r2
    c320:	000f883a 	mov	r7,zero
    c324:	003f8106 	br	c12c <__alt_data_end+0xfffdb3ec>
    c328:	3027883a 	mov	r19,r6
    c32c:	0081ffc4 	movi	r2,2047
    c330:	0021883a 	mov	r16,zero
    c334:	002d883a 	mov	r22,zero
    c338:	003faa06 	br	c1e4 <__alt_data_end+0xfffdb4a4>
    c33c:	0023883a 	mov	r17,zero
    c340:	0025883a 	mov	r18,zero
    c344:	01c00044 	movi	r7,1
    c348:	003f7806 	br	c12c <__alt_data_end+0xfffdb3ec>
    c34c:	01c000c4 	movi	r7,3
    c350:	003f7606 	br	c12c <__alt_data_end+0xfffdb3ec>
    c354:	05400104 	movi	r21,4
    c358:	0021883a 	mov	r16,zero
    c35c:	002d883a 	mov	r22,zero
    c360:	01400044 	movi	r5,1
    c364:	003f5f06 	br	c0e4 <__alt_data_end+0xfffdb3a4>
    c368:	05400304 	movi	r21,12
    c36c:	014000c4 	movi	r5,3
    c370:	003f5c06 	br	c0e4 <__alt_data_end+0xfffdb3a4>
    c374:	04000434 	movhi	r16,16
    c378:	0027883a 	mov	r19,zero
    c37c:	843fffc4 	addi	r16,r16,-1
    c380:	05bfffc4 	movi	r22,-1
    c384:	0081ffc4 	movi	r2,2047
    c388:	003f9606 	br	c1e4 <__alt_data_end+0xfffdb4a4>
    c38c:	8023883a 	mov	r17,r16
    c390:	b025883a 	mov	r18,r22
    c394:	280f883a 	mov	r7,r5
    c398:	003f8806 	br	c1bc <__alt_data_end+0xfffdb47c>
    c39c:	8023883a 	mov	r17,r16
    c3a0:	b025883a 	mov	r18,r22
    c3a4:	480d883a 	mov	r6,r9
    c3a8:	280f883a 	mov	r7,r5
    c3ac:	003f8306 	br	c1bc <__alt_data_end+0xfffdb47c>
    c3b0:	b026d43a 	srli	r19,r22,16
    c3b4:	902ed43a 	srli	r23,r18,16
    c3b8:	b5bfffcc 	andi	r22,r22,65535
    c3bc:	94bfffcc 	andi	r18,r18,65535
    c3c0:	b00b883a 	mov	r5,r22
    c3c4:	9009883a 	mov	r4,r18
    c3c8:	d8c00515 	stw	r3,20(sp)
    c3cc:	d9800715 	stw	r6,28(sp)
    c3d0:	da000615 	stw	r8,24(sp)
    c3d4:	000ab6c0 	call	ab6c <__mulsi3>
    c3d8:	980b883a 	mov	r5,r19
    c3dc:	9009883a 	mov	r4,r18
    c3e0:	1029883a 	mov	r20,r2
    c3e4:	000ab6c0 	call	ab6c <__mulsi3>
    c3e8:	b80b883a 	mov	r5,r23
    c3ec:	9809883a 	mov	r4,r19
    c3f0:	102b883a 	mov	r21,r2
    c3f4:	000ab6c0 	call	ab6c <__mulsi3>
    c3f8:	b809883a 	mov	r4,r23
    c3fc:	b00b883a 	mov	r5,r22
    c400:	1039883a 	mov	fp,r2
    c404:	000ab6c0 	call	ab6c <__mulsi3>
    c408:	a008d43a 	srli	r4,r20,16
    c40c:	1545883a 	add	r2,r2,r21
    c410:	d8c00517 	ldw	r3,20(sp)
    c414:	2085883a 	add	r2,r4,r2
    c418:	d9800717 	ldw	r6,28(sp)
    c41c:	da000617 	ldw	r8,24(sp)
    c420:	1540022e 	bgeu	r2,r21,c42c <__muldf3+0x3c4>
    c424:	01000074 	movhi	r4,1
    c428:	e139883a 	add	fp,fp,r4
    c42c:	100e943a 	slli	r7,r2,16
    c430:	1004d43a 	srli	r2,r2,16
    c434:	882ad43a 	srli	r21,r17,16
    c438:	a53fffcc 	andi	r20,r20,65535
    c43c:	8c7fffcc 	andi	r17,r17,65535
    c440:	3d29883a 	add	r20,r7,r20
    c444:	b00b883a 	mov	r5,r22
    c448:	8809883a 	mov	r4,r17
    c44c:	d8c00515 	stw	r3,20(sp)
    c450:	d9800715 	stw	r6,28(sp)
    c454:	da000615 	stw	r8,24(sp)
    c458:	dd000115 	stw	r20,4(sp)
    c45c:	d8800015 	stw	r2,0(sp)
    c460:	000ab6c0 	call	ab6c <__mulsi3>
    c464:	980b883a 	mov	r5,r19
    c468:	8809883a 	mov	r4,r17
    c46c:	d8800215 	stw	r2,8(sp)
    c470:	000ab6c0 	call	ab6c <__mulsi3>
    c474:	9809883a 	mov	r4,r19
    c478:	a80b883a 	mov	r5,r21
    c47c:	1029883a 	mov	r20,r2
    c480:	000ab6c0 	call	ab6c <__mulsi3>
    c484:	b00b883a 	mov	r5,r22
    c488:	a809883a 	mov	r4,r21
    c48c:	d8800415 	stw	r2,16(sp)
    c490:	000ab6c0 	call	ab6c <__mulsi3>
    c494:	d9c00217 	ldw	r7,8(sp)
    c498:	1505883a 	add	r2,r2,r20
    c49c:	d8c00517 	ldw	r3,20(sp)
    c4a0:	3826d43a 	srli	r19,r7,16
    c4a4:	d9800717 	ldw	r6,28(sp)
    c4a8:	da000617 	ldw	r8,24(sp)
    c4ac:	9885883a 	add	r2,r19,r2
    c4b0:	da400417 	ldw	r9,16(sp)
    c4b4:	1500022e 	bgeu	r2,r20,c4c0 <__muldf3+0x458>
    c4b8:	01000074 	movhi	r4,1
    c4bc:	4913883a 	add	r9,r9,r4
    c4c0:	1028d43a 	srli	r20,r2,16
    c4c4:	1004943a 	slli	r2,r2,16
    c4c8:	802cd43a 	srli	r22,r16,16
    c4cc:	843fffcc 	andi	r16,r16,65535
    c4d0:	3cffffcc 	andi	r19,r7,65535
    c4d4:	9009883a 	mov	r4,r18
    c4d8:	800b883a 	mov	r5,r16
    c4dc:	a269883a 	add	r20,r20,r9
    c4e0:	d8c00515 	stw	r3,20(sp)
    c4e4:	d9800715 	stw	r6,28(sp)
    c4e8:	da000615 	stw	r8,24(sp)
    c4ec:	14e7883a 	add	r19,r2,r19
    c4f0:	000ab6c0 	call	ab6c <__mulsi3>
    c4f4:	9009883a 	mov	r4,r18
    c4f8:	b00b883a 	mov	r5,r22
    c4fc:	d8800315 	stw	r2,12(sp)
    c500:	000ab6c0 	call	ab6c <__mulsi3>
    c504:	b809883a 	mov	r4,r23
    c508:	b00b883a 	mov	r5,r22
    c50c:	d8800215 	stw	r2,8(sp)
    c510:	000ab6c0 	call	ab6c <__mulsi3>
    c514:	b80b883a 	mov	r5,r23
    c518:	8009883a 	mov	r4,r16
    c51c:	d8800415 	stw	r2,16(sp)
    c520:	000ab6c0 	call	ab6c <__mulsi3>
    c524:	da800317 	ldw	r10,12(sp)
    c528:	d9c00217 	ldw	r7,8(sp)
    c52c:	d9000017 	ldw	r4,0(sp)
    c530:	502ed43a 	srli	r23,r10,16
    c534:	11c5883a 	add	r2,r2,r7
    c538:	24e5883a 	add	r18,r4,r19
    c53c:	b885883a 	add	r2,r23,r2
    c540:	d8c00517 	ldw	r3,20(sp)
    c544:	d9800717 	ldw	r6,28(sp)
    c548:	da000617 	ldw	r8,24(sp)
    c54c:	da400417 	ldw	r9,16(sp)
    c550:	11c0022e 	bgeu	r2,r7,c55c <__muldf3+0x4f4>
    c554:	01000074 	movhi	r4,1
    c558:	4913883a 	add	r9,r9,r4
    c55c:	100ed43a 	srli	r7,r2,16
    c560:	1004943a 	slli	r2,r2,16
    c564:	55ffffcc 	andi	r23,r10,65535
    c568:	3a53883a 	add	r9,r7,r9
    c56c:	8809883a 	mov	r4,r17
    c570:	800b883a 	mov	r5,r16
    c574:	d8c00515 	stw	r3,20(sp)
    c578:	d9800715 	stw	r6,28(sp)
    c57c:	da000615 	stw	r8,24(sp)
    c580:	da400415 	stw	r9,16(sp)
    c584:	15ef883a 	add	r23,r2,r23
    c588:	000ab6c0 	call	ab6c <__mulsi3>
    c58c:	8809883a 	mov	r4,r17
    c590:	b00b883a 	mov	r5,r22
    c594:	d8800215 	stw	r2,8(sp)
    c598:	000ab6c0 	call	ab6c <__mulsi3>
    c59c:	b00b883a 	mov	r5,r22
    c5a0:	a809883a 	mov	r4,r21
    c5a4:	d8800315 	stw	r2,12(sp)
    c5a8:	000ab6c0 	call	ab6c <__mulsi3>
    c5ac:	8009883a 	mov	r4,r16
    c5b0:	a80b883a 	mov	r5,r21
    c5b4:	1023883a 	mov	r17,r2
    c5b8:	000ab6c0 	call	ab6c <__mulsi3>
    c5bc:	d9c00217 	ldw	r7,8(sp)
    c5c0:	da800317 	ldw	r10,12(sp)
    c5c4:	d8c00517 	ldw	r3,20(sp)
    c5c8:	3808d43a 	srli	r4,r7,16
    c5cc:	1285883a 	add	r2,r2,r10
    c5d0:	d9800717 	ldw	r6,28(sp)
    c5d4:	2085883a 	add	r2,r4,r2
    c5d8:	da000617 	ldw	r8,24(sp)
    c5dc:	da400417 	ldw	r9,16(sp)
    c5e0:	1280022e 	bgeu	r2,r10,c5ec <__muldf3+0x584>
    c5e4:	01000074 	movhi	r4,1
    c5e8:	8923883a 	add	r17,r17,r4
    c5ec:	1008943a 	slli	r4,r2,16
    c5f0:	39ffffcc 	andi	r7,r7,65535
    c5f4:	e4b9883a 	add	fp,fp,r18
    c5f8:	21cf883a 	add	r7,r4,r7
    c5fc:	e4e7803a 	cmpltu	r19,fp,r19
    c600:	3d0f883a 	add	r7,r7,r20
    c604:	bf39883a 	add	fp,r23,fp
    c608:	99c9883a 	add	r4,r19,r7
    c60c:	e5ef803a 	cmpltu	r23,fp,r23
    c610:	490b883a 	add	r5,r9,r4
    c614:	1004d43a 	srli	r2,r2,16
    c618:	b965883a 	add	r18,r23,r5
    c61c:	24c9803a 	cmpltu	r4,r4,r19
    c620:	3d29803a 	cmpltu	r20,r7,r20
    c624:	a128b03a 	or	r20,r20,r4
    c628:	95ef803a 	cmpltu	r23,r18,r23
    c62c:	2a53803a 	cmpltu	r9,r5,r9
    c630:	a0a9883a 	add	r20,r20,r2
    c634:	4deeb03a 	or	r23,r9,r23
    c638:	a5ef883a 	add	r23,r20,r23
    c63c:	bc63883a 	add	r17,r23,r17
    c640:	e004927a 	slli	r2,fp,9
    c644:	d9000117 	ldw	r4,4(sp)
    c648:	882e927a 	slli	r23,r17,9
    c64c:	9022d5fa 	srli	r17,r18,23
    c650:	e038d5fa 	srli	fp,fp,23
    c654:	1104b03a 	or	r2,r2,r4
    c658:	9024927a 	slli	r18,r18,9
    c65c:	1004c03a 	cmpne	r2,r2,zero
    c660:	bc62b03a 	or	r17,r23,r17
    c664:	1738b03a 	or	fp,r2,fp
    c668:	8880402c 	andhi	r2,r17,256
    c66c:	e4a4b03a 	or	r18,fp,r18
    c670:	10000726 	beq	r2,zero,c690 <__muldf3+0x628>
    c674:	9006d07a 	srli	r3,r18,1
    c678:	880497fa 	slli	r2,r17,31
    c67c:	9480004c 	andi	r18,r18,1
    c680:	8822d07a 	srli	r17,r17,1
    c684:	1ca4b03a 	or	r18,r3,r18
    c688:	14a4b03a 	or	r18,r2,r18
    c68c:	4007883a 	mov	r3,r8
    c690:	1880ffc4 	addi	r2,r3,1023
    c694:	0080460e 	bge	zero,r2,c7b0 <__muldf3+0x748>
    c698:	910001cc 	andi	r4,r18,7
    c69c:	20000726 	beq	r4,zero,c6bc <__muldf3+0x654>
    c6a0:	910003cc 	andi	r4,r18,15
    c6a4:	01400104 	movi	r5,4
    c6a8:	21400426 	beq	r4,r5,c6bc <__muldf3+0x654>
    c6ac:	9149883a 	add	r4,r18,r5
    c6b0:	24a5803a 	cmpltu	r18,r4,r18
    c6b4:	8ca3883a 	add	r17,r17,r18
    c6b8:	2025883a 	mov	r18,r4
    c6bc:	8900402c 	andhi	r4,r17,256
    c6c0:	20000426 	beq	r4,zero,c6d4 <__muldf3+0x66c>
    c6c4:	18810004 	addi	r2,r3,1024
    c6c8:	00ffc034 	movhi	r3,65280
    c6cc:	18ffffc4 	addi	r3,r3,-1
    c6d0:	88e2703a 	and	r17,r17,r3
    c6d4:	00c1ff84 	movi	r3,2046
    c6d8:	18bf1316 	blt	r3,r2,c328 <__alt_data_end+0xfffdb5e8>
    c6dc:	882c977a 	slli	r22,r17,29
    c6e0:	9024d0fa 	srli	r18,r18,3
    c6e4:	8822927a 	slli	r17,r17,9
    c6e8:	1081ffcc 	andi	r2,r2,2047
    c6ec:	b4acb03a 	or	r22,r22,r18
    c6f0:	8820d33a 	srli	r16,r17,12
    c6f4:	3027883a 	mov	r19,r6
    c6f8:	003eba06 	br	c1e4 <__alt_data_end+0xfffdb4a4>
    c6fc:	8080022c 	andhi	r2,r16,8
    c700:	10000926 	beq	r2,zero,c728 <__muldf3+0x6c0>
    c704:	8880022c 	andhi	r2,r17,8
    c708:	1000071e 	bne	r2,zero,c728 <__muldf3+0x6c0>
    c70c:	00800434 	movhi	r2,16
    c710:	8c000234 	orhi	r16,r17,8
    c714:	10bfffc4 	addi	r2,r2,-1
    c718:	e027883a 	mov	r19,fp
    c71c:	80a0703a 	and	r16,r16,r2
    c720:	902d883a 	mov	r22,r18
    c724:	003f1706 	br	c384 <__alt_data_end+0xfffdb644>
    c728:	00800434 	movhi	r2,16
    c72c:	84000234 	orhi	r16,r16,8
    c730:	10bfffc4 	addi	r2,r2,-1
    c734:	80a0703a 	and	r16,r16,r2
    c738:	003f1206 	br	c384 <__alt_data_end+0xfffdb644>
    c73c:	147ff604 	addi	r17,r2,-40
    c740:	3462983a 	sll	r17,r6,r17
    c744:	0025883a 	mov	r18,zero
    c748:	003ef306 	br	c318 <__alt_data_end+0xfffdb5d8>
    c74c:	3009883a 	mov	r4,r6
    c750:	d9400215 	stw	r5,8(sp)
    c754:	d9800715 	stw	r6,28(sp)
    c758:	da400415 	stw	r9,16(sp)
    c75c:	da800315 	stw	r10,12(sp)
    c760:	000d3d40 	call	d3d4 <__clzsi2>
    c764:	10800804 	addi	r2,r2,32
    c768:	da800317 	ldw	r10,12(sp)
    c76c:	da400417 	ldw	r9,16(sp)
    c770:	d9800717 	ldw	r6,28(sp)
    c774:	d9400217 	ldw	r5,8(sp)
    c778:	003edd06 	br	c2f0 <__alt_data_end+0xfffdb5b0>
    c77c:	143ff604 	addi	r16,r2,-40
    c780:	ac20983a 	sll	r16,r21,r16
    c784:	002d883a 	mov	r22,zero
    c788:	003ec106 	br	c290 <__alt_data_end+0xfffdb550>
    c78c:	d9800715 	stw	r6,28(sp)
    c790:	d9c00215 	stw	r7,8(sp)
    c794:	da400415 	stw	r9,16(sp)
    c798:	000d3d40 	call	d3d4 <__clzsi2>
    c79c:	10800804 	addi	r2,r2,32
    c7a0:	da400417 	ldw	r9,16(sp)
    c7a4:	d9c00217 	ldw	r7,8(sp)
    c7a8:	d9800717 	ldw	r6,28(sp)
    c7ac:	003eae06 	br	c268 <__alt_data_end+0xfffdb528>
    c7b0:	00c00044 	movi	r3,1
    c7b4:	1887c83a 	sub	r3,r3,r2
    c7b8:	01000e04 	movi	r4,56
    c7bc:	20fe8516 	blt	r4,r3,c1d4 <__alt_data_end+0xfffdb494>
    c7c0:	010007c4 	movi	r4,31
    c7c4:	20c01b16 	blt	r4,r3,c834 <__muldf3+0x7cc>
    c7c8:	00800804 	movi	r2,32
    c7cc:	10c5c83a 	sub	r2,r2,r3
    c7d0:	888a983a 	sll	r5,r17,r2
    c7d4:	90c8d83a 	srl	r4,r18,r3
    c7d8:	9084983a 	sll	r2,r18,r2
    c7dc:	88e2d83a 	srl	r17,r17,r3
    c7e0:	2906b03a 	or	r3,r5,r4
    c7e4:	1004c03a 	cmpne	r2,r2,zero
    c7e8:	1886b03a 	or	r3,r3,r2
    c7ec:	188001cc 	andi	r2,r3,7
    c7f0:	10000726 	beq	r2,zero,c810 <__muldf3+0x7a8>
    c7f4:	188003cc 	andi	r2,r3,15
    c7f8:	01000104 	movi	r4,4
    c7fc:	11000426 	beq	r2,r4,c810 <__muldf3+0x7a8>
    c800:	1805883a 	mov	r2,r3
    c804:	10c00104 	addi	r3,r2,4
    c808:	1885803a 	cmpltu	r2,r3,r2
    c80c:	88a3883a 	add	r17,r17,r2
    c810:	8880202c 	andhi	r2,r17,128
    c814:	10001c26 	beq	r2,zero,c888 <__muldf3+0x820>
    c818:	3027883a 	mov	r19,r6
    c81c:	00800044 	movi	r2,1
    c820:	0021883a 	mov	r16,zero
    c824:	002d883a 	mov	r22,zero
    c828:	003e6e06 	br	c1e4 <__alt_data_end+0xfffdb4a4>
    c82c:	4007883a 	mov	r3,r8
    c830:	003f9706 	br	c690 <__alt_data_end+0xfffdb950>
    c834:	017ff844 	movi	r5,-31
    c838:	2885c83a 	sub	r2,r5,r2
    c83c:	888ad83a 	srl	r5,r17,r2
    c840:	00800804 	movi	r2,32
    c844:	18801a26 	beq	r3,r2,c8b0 <__muldf3+0x848>
    c848:	01001004 	movi	r4,64
    c84c:	20c7c83a 	sub	r3,r4,r3
    c850:	88e2983a 	sll	r17,r17,r3
    c854:	8ca4b03a 	or	r18,r17,r18
    c858:	9004c03a 	cmpne	r2,r18,zero
    c85c:	2884b03a 	or	r2,r5,r2
    c860:	144001cc 	andi	r17,r2,7
    c864:	88000d1e 	bne	r17,zero,c89c <__muldf3+0x834>
    c868:	0021883a 	mov	r16,zero
    c86c:	102cd0fa 	srli	r22,r2,3
    c870:	3027883a 	mov	r19,r6
    c874:	0005883a 	mov	r2,zero
    c878:	b46cb03a 	or	r22,r22,r17
    c87c:	003e5906 	br	c1e4 <__alt_data_end+0xfffdb4a4>
    c880:	1007883a 	mov	r3,r2
    c884:	0023883a 	mov	r17,zero
    c888:	8820927a 	slli	r16,r17,9
    c88c:	1805883a 	mov	r2,r3
    c890:	8822977a 	slli	r17,r17,29
    c894:	8020d33a 	srli	r16,r16,12
    c898:	003ff406 	br	c86c <__alt_data_end+0xfffdbb2c>
    c89c:	10c003cc 	andi	r3,r2,15
    c8a0:	01000104 	movi	r4,4
    c8a4:	193ff626 	beq	r3,r4,c880 <__alt_data_end+0xfffdbb40>
    c8a8:	0023883a 	mov	r17,zero
    c8ac:	003fd506 	br	c804 <__alt_data_end+0xfffdbac4>
    c8b0:	0023883a 	mov	r17,zero
    c8b4:	003fe706 	br	c854 <__alt_data_end+0xfffdbb14>
    c8b8:	00800434 	movhi	r2,16
    c8bc:	8c000234 	orhi	r16,r17,8
    c8c0:	10bfffc4 	addi	r2,r2,-1
    c8c4:	3027883a 	mov	r19,r6
    c8c8:	80a0703a 	and	r16,r16,r2
    c8cc:	902d883a 	mov	r22,r18
    c8d0:	003eac06 	br	c384 <__alt_data_end+0xfffdb644>

0000c8d4 <__subdf3>:
    c8d4:	02000434 	movhi	r8,16
    c8d8:	423fffc4 	addi	r8,r8,-1
    c8dc:	defffb04 	addi	sp,sp,-20
    c8e0:	2a14703a 	and	r10,r5,r8
    c8e4:	3812d53a 	srli	r9,r7,20
    c8e8:	3a10703a 	and	r8,r7,r8
    c8ec:	2006d77a 	srli	r3,r4,29
    c8f0:	3004d77a 	srli	r2,r6,29
    c8f4:	dc000015 	stw	r16,0(sp)
    c8f8:	501490fa 	slli	r10,r10,3
    c8fc:	2820d53a 	srli	r16,r5,20
    c900:	401090fa 	slli	r8,r8,3
    c904:	dc800215 	stw	r18,8(sp)
    c908:	dc400115 	stw	r17,4(sp)
    c90c:	dfc00415 	stw	ra,16(sp)
    c910:	202290fa 	slli	r17,r4,3
    c914:	dcc00315 	stw	r19,12(sp)
    c918:	4a41ffcc 	andi	r9,r9,2047
    c91c:	0101ffc4 	movi	r4,2047
    c920:	2824d7fa 	srli	r18,r5,31
    c924:	8401ffcc 	andi	r16,r16,2047
    c928:	50c6b03a 	or	r3,r10,r3
    c92c:	380ed7fa 	srli	r7,r7,31
    c930:	408ab03a 	or	r5,r8,r2
    c934:	300c90fa 	slli	r6,r6,3
    c938:	49009626 	beq	r9,r4,cb94 <__subdf3+0x2c0>
    c93c:	39c0005c 	xori	r7,r7,1
    c940:	8245c83a 	sub	r2,r16,r9
    c944:	3c807426 	beq	r7,r18,cb18 <__subdf3+0x244>
    c948:	0080af0e 	bge	zero,r2,cc08 <__subdf3+0x334>
    c94c:	48002a1e 	bne	r9,zero,c9f8 <__subdf3+0x124>
    c950:	2988b03a 	or	r4,r5,r6
    c954:	20009a1e 	bne	r4,zero,cbc0 <__subdf3+0x2ec>
    c958:	888001cc 	andi	r2,r17,7
    c95c:	10000726 	beq	r2,zero,c97c <__subdf3+0xa8>
    c960:	888003cc 	andi	r2,r17,15
    c964:	01000104 	movi	r4,4
    c968:	11000426 	beq	r2,r4,c97c <__subdf3+0xa8>
    c96c:	890b883a 	add	r5,r17,r4
    c970:	2c63803a 	cmpltu	r17,r5,r17
    c974:	1c47883a 	add	r3,r3,r17
    c978:	2823883a 	mov	r17,r5
    c97c:	1880202c 	andhi	r2,r3,128
    c980:	10005926 	beq	r2,zero,cae8 <__subdf3+0x214>
    c984:	84000044 	addi	r16,r16,1
    c988:	0081ffc4 	movi	r2,2047
    c98c:	8080be26 	beq	r16,r2,cc88 <__subdf3+0x3b4>
    c990:	017fe034 	movhi	r5,65408
    c994:	297fffc4 	addi	r5,r5,-1
    c998:	1946703a 	and	r3,r3,r5
    c99c:	1804977a 	slli	r2,r3,29
    c9a0:	1806927a 	slli	r3,r3,9
    c9a4:	8822d0fa 	srli	r17,r17,3
    c9a8:	8401ffcc 	andi	r16,r16,2047
    c9ac:	180ad33a 	srli	r5,r3,12
    c9b0:	9100004c 	andi	r4,r18,1
    c9b4:	1444b03a 	or	r2,r2,r17
    c9b8:	80c1ffcc 	andi	r3,r16,2047
    c9bc:	1820953a 	slli	r16,r3,20
    c9c0:	20c03fcc 	andi	r3,r4,255
    c9c4:	180897fa 	slli	r4,r3,31
    c9c8:	00c00434 	movhi	r3,16
    c9cc:	18ffffc4 	addi	r3,r3,-1
    c9d0:	28c6703a 	and	r3,r5,r3
    c9d4:	1c06b03a 	or	r3,r3,r16
    c9d8:	1906b03a 	or	r3,r3,r4
    c9dc:	dfc00417 	ldw	ra,16(sp)
    c9e0:	dcc00317 	ldw	r19,12(sp)
    c9e4:	dc800217 	ldw	r18,8(sp)
    c9e8:	dc400117 	ldw	r17,4(sp)
    c9ec:	dc000017 	ldw	r16,0(sp)
    c9f0:	dec00504 	addi	sp,sp,20
    c9f4:	f800283a 	ret
    c9f8:	0101ffc4 	movi	r4,2047
    c9fc:	813fd626 	beq	r16,r4,c958 <__alt_data_end+0xfffdbc18>
    ca00:	29402034 	orhi	r5,r5,128
    ca04:	01000e04 	movi	r4,56
    ca08:	2080a316 	blt	r4,r2,cc98 <__subdf3+0x3c4>
    ca0c:	010007c4 	movi	r4,31
    ca10:	2080c616 	blt	r4,r2,cd2c <__subdf3+0x458>
    ca14:	01000804 	movi	r4,32
    ca18:	2089c83a 	sub	r4,r4,r2
    ca1c:	2910983a 	sll	r8,r5,r4
    ca20:	308ed83a 	srl	r7,r6,r2
    ca24:	3108983a 	sll	r4,r6,r4
    ca28:	2884d83a 	srl	r2,r5,r2
    ca2c:	41ccb03a 	or	r6,r8,r7
    ca30:	2008c03a 	cmpne	r4,r4,zero
    ca34:	310cb03a 	or	r6,r6,r4
    ca38:	898dc83a 	sub	r6,r17,r6
    ca3c:	89a3803a 	cmpltu	r17,r17,r6
    ca40:	1887c83a 	sub	r3,r3,r2
    ca44:	1c47c83a 	sub	r3,r3,r17
    ca48:	3023883a 	mov	r17,r6
    ca4c:	1880202c 	andhi	r2,r3,128
    ca50:	10002326 	beq	r2,zero,cae0 <__subdf3+0x20c>
    ca54:	04c02034 	movhi	r19,128
    ca58:	9cffffc4 	addi	r19,r19,-1
    ca5c:	1ce6703a 	and	r19,r3,r19
    ca60:	98007a26 	beq	r19,zero,cc4c <__subdf3+0x378>
    ca64:	9809883a 	mov	r4,r19
    ca68:	000d3d40 	call	d3d4 <__clzsi2>
    ca6c:	113ffe04 	addi	r4,r2,-8
    ca70:	00c007c4 	movi	r3,31
    ca74:	19007b16 	blt	r3,r4,cc64 <__subdf3+0x390>
    ca78:	00800804 	movi	r2,32
    ca7c:	1105c83a 	sub	r2,r2,r4
    ca80:	8884d83a 	srl	r2,r17,r2
    ca84:	9906983a 	sll	r3,r19,r4
    ca88:	8922983a 	sll	r17,r17,r4
    ca8c:	10c4b03a 	or	r2,r2,r3
    ca90:	24007816 	blt	r4,r16,cc74 <__subdf3+0x3a0>
    ca94:	2421c83a 	sub	r16,r4,r16
    ca98:	80c00044 	addi	r3,r16,1
    ca9c:	010007c4 	movi	r4,31
    caa0:	20c09516 	blt	r4,r3,ccf8 <__subdf3+0x424>
    caa4:	01400804 	movi	r5,32
    caa8:	28cbc83a 	sub	r5,r5,r3
    caac:	88c8d83a 	srl	r4,r17,r3
    cab0:	8962983a 	sll	r17,r17,r5
    cab4:	114a983a 	sll	r5,r2,r5
    cab8:	10c6d83a 	srl	r3,r2,r3
    cabc:	8804c03a 	cmpne	r2,r17,zero
    cac0:	290ab03a 	or	r5,r5,r4
    cac4:	28a2b03a 	or	r17,r5,r2
    cac8:	0021883a 	mov	r16,zero
    cacc:	003fa206 	br	c958 <__alt_data_end+0xfffdbc18>
    cad0:	2090b03a 	or	r8,r4,r2
    cad4:	40018e26 	beq	r8,zero,d110 <__subdf3+0x83c>
    cad8:	1007883a 	mov	r3,r2
    cadc:	2023883a 	mov	r17,r4
    cae0:	888001cc 	andi	r2,r17,7
    cae4:	103f9e1e 	bne	r2,zero,c960 <__alt_data_end+0xfffdbc20>
    cae8:	1804977a 	slli	r2,r3,29
    caec:	8822d0fa 	srli	r17,r17,3
    caf0:	1810d0fa 	srli	r8,r3,3
    caf4:	9100004c 	andi	r4,r18,1
    caf8:	1444b03a 	or	r2,r2,r17
    cafc:	00c1ffc4 	movi	r3,2047
    cb00:	80c02826 	beq	r16,r3,cba4 <__subdf3+0x2d0>
    cb04:	01400434 	movhi	r5,16
    cb08:	297fffc4 	addi	r5,r5,-1
    cb0c:	80e0703a 	and	r16,r16,r3
    cb10:	414a703a 	and	r5,r8,r5
    cb14:	003fa806 	br	c9b8 <__alt_data_end+0xfffdbc78>
    cb18:	0080630e 	bge	zero,r2,cca8 <__subdf3+0x3d4>
    cb1c:	48003026 	beq	r9,zero,cbe0 <__subdf3+0x30c>
    cb20:	0101ffc4 	movi	r4,2047
    cb24:	813f8c26 	beq	r16,r4,c958 <__alt_data_end+0xfffdbc18>
    cb28:	29402034 	orhi	r5,r5,128
    cb2c:	01000e04 	movi	r4,56
    cb30:	2080a90e 	bge	r4,r2,cdd8 <__subdf3+0x504>
    cb34:	298cb03a 	or	r6,r5,r6
    cb38:	3012c03a 	cmpne	r9,r6,zero
    cb3c:	0005883a 	mov	r2,zero
    cb40:	4c53883a 	add	r9,r9,r17
    cb44:	4c63803a 	cmpltu	r17,r9,r17
    cb48:	10c7883a 	add	r3,r2,r3
    cb4c:	88c7883a 	add	r3,r17,r3
    cb50:	4823883a 	mov	r17,r9
    cb54:	1880202c 	andhi	r2,r3,128
    cb58:	1000d026 	beq	r2,zero,ce9c <__subdf3+0x5c8>
    cb5c:	84000044 	addi	r16,r16,1
    cb60:	0081ffc4 	movi	r2,2047
    cb64:	8080fe26 	beq	r16,r2,cf60 <__subdf3+0x68c>
    cb68:	00bfe034 	movhi	r2,65408
    cb6c:	10bfffc4 	addi	r2,r2,-1
    cb70:	1886703a 	and	r3,r3,r2
    cb74:	880ad07a 	srli	r5,r17,1
    cb78:	180497fa 	slli	r2,r3,31
    cb7c:	8900004c 	andi	r4,r17,1
    cb80:	2922b03a 	or	r17,r5,r4
    cb84:	1806d07a 	srli	r3,r3,1
    cb88:	1462b03a 	or	r17,r2,r17
    cb8c:	3825883a 	mov	r18,r7
    cb90:	003f7106 	br	c958 <__alt_data_end+0xfffdbc18>
    cb94:	2984b03a 	or	r2,r5,r6
    cb98:	103f6826 	beq	r2,zero,c93c <__alt_data_end+0xfffdbbfc>
    cb9c:	39c03fcc 	andi	r7,r7,255
    cba0:	003f6706 	br	c940 <__alt_data_end+0xfffdbc00>
    cba4:	4086b03a 	or	r3,r8,r2
    cba8:	18015226 	beq	r3,zero,d0f4 <__subdf3+0x820>
    cbac:	00c00434 	movhi	r3,16
    cbb0:	41400234 	orhi	r5,r8,8
    cbb4:	18ffffc4 	addi	r3,r3,-1
    cbb8:	28ca703a 	and	r5,r5,r3
    cbbc:	003f7e06 	br	c9b8 <__alt_data_end+0xfffdbc78>
    cbc0:	10bfffc4 	addi	r2,r2,-1
    cbc4:	1000491e 	bne	r2,zero,ccec <__subdf3+0x418>
    cbc8:	898fc83a 	sub	r7,r17,r6
    cbcc:	89e3803a 	cmpltu	r17,r17,r7
    cbd0:	1947c83a 	sub	r3,r3,r5
    cbd4:	1c47c83a 	sub	r3,r3,r17
    cbd8:	3823883a 	mov	r17,r7
    cbdc:	003f9b06 	br	ca4c <__alt_data_end+0xfffdbd0c>
    cbe0:	2988b03a 	or	r4,r5,r6
    cbe4:	203f5c26 	beq	r4,zero,c958 <__alt_data_end+0xfffdbc18>
    cbe8:	10bfffc4 	addi	r2,r2,-1
    cbec:	1000931e 	bne	r2,zero,ce3c <__subdf3+0x568>
    cbf0:	898d883a 	add	r6,r17,r6
    cbf4:	3463803a 	cmpltu	r17,r6,r17
    cbf8:	1947883a 	add	r3,r3,r5
    cbfc:	88c7883a 	add	r3,r17,r3
    cc00:	3023883a 	mov	r17,r6
    cc04:	003fd306 	br	cb54 <__alt_data_end+0xfffdbe14>
    cc08:	1000541e 	bne	r2,zero,cd5c <__subdf3+0x488>
    cc0c:	80800044 	addi	r2,r16,1
    cc10:	1081ffcc 	andi	r2,r2,2047
    cc14:	01000044 	movi	r4,1
    cc18:	2080a20e 	bge	r4,r2,cea4 <__subdf3+0x5d0>
    cc1c:	8989c83a 	sub	r4,r17,r6
    cc20:	8905803a 	cmpltu	r2,r17,r4
    cc24:	1967c83a 	sub	r19,r3,r5
    cc28:	98a7c83a 	sub	r19,r19,r2
    cc2c:	9880202c 	andhi	r2,r19,128
    cc30:	10006326 	beq	r2,zero,cdc0 <__subdf3+0x4ec>
    cc34:	3463c83a 	sub	r17,r6,r17
    cc38:	28c7c83a 	sub	r3,r5,r3
    cc3c:	344d803a 	cmpltu	r6,r6,r17
    cc40:	19a7c83a 	sub	r19,r3,r6
    cc44:	3825883a 	mov	r18,r7
    cc48:	983f861e 	bne	r19,zero,ca64 <__alt_data_end+0xfffdbd24>
    cc4c:	8809883a 	mov	r4,r17
    cc50:	000d3d40 	call	d3d4 <__clzsi2>
    cc54:	10800804 	addi	r2,r2,32
    cc58:	113ffe04 	addi	r4,r2,-8
    cc5c:	00c007c4 	movi	r3,31
    cc60:	193f850e 	bge	r3,r4,ca78 <__alt_data_end+0xfffdbd38>
    cc64:	10bff604 	addi	r2,r2,-40
    cc68:	8884983a 	sll	r2,r17,r2
    cc6c:	0023883a 	mov	r17,zero
    cc70:	243f880e 	bge	r4,r16,ca94 <__alt_data_end+0xfffdbd54>
    cc74:	00ffe034 	movhi	r3,65408
    cc78:	18ffffc4 	addi	r3,r3,-1
    cc7c:	8121c83a 	sub	r16,r16,r4
    cc80:	10c6703a 	and	r3,r2,r3
    cc84:	003f3406 	br	c958 <__alt_data_end+0xfffdbc18>
    cc88:	9100004c 	andi	r4,r18,1
    cc8c:	000b883a 	mov	r5,zero
    cc90:	0005883a 	mov	r2,zero
    cc94:	003f4806 	br	c9b8 <__alt_data_end+0xfffdbc78>
    cc98:	298cb03a 	or	r6,r5,r6
    cc9c:	300cc03a 	cmpne	r6,r6,zero
    cca0:	0005883a 	mov	r2,zero
    cca4:	003f6406 	br	ca38 <__alt_data_end+0xfffdbcf8>
    cca8:	10009a1e 	bne	r2,zero,cf14 <__subdf3+0x640>
    ccac:	82400044 	addi	r9,r16,1
    ccb0:	4881ffcc 	andi	r2,r9,2047
    ccb4:	02800044 	movi	r10,1
    ccb8:	5080670e 	bge	r10,r2,ce58 <__subdf3+0x584>
    ccbc:	0081ffc4 	movi	r2,2047
    ccc0:	4880af26 	beq	r9,r2,cf80 <__subdf3+0x6ac>
    ccc4:	898d883a 	add	r6,r17,r6
    ccc8:	1945883a 	add	r2,r3,r5
    cccc:	3447803a 	cmpltu	r3,r6,r17
    ccd0:	1887883a 	add	r3,r3,r2
    ccd4:	182297fa 	slli	r17,r3,31
    ccd8:	300cd07a 	srli	r6,r6,1
    ccdc:	1806d07a 	srli	r3,r3,1
    cce0:	4821883a 	mov	r16,r9
    cce4:	89a2b03a 	or	r17,r17,r6
    cce8:	003f1b06 	br	c958 <__alt_data_end+0xfffdbc18>
    ccec:	0101ffc4 	movi	r4,2047
    ccf0:	813f441e 	bne	r16,r4,ca04 <__alt_data_end+0xfffdbcc4>
    ccf4:	003f1806 	br	c958 <__alt_data_end+0xfffdbc18>
    ccf8:	843ff844 	addi	r16,r16,-31
    ccfc:	01400804 	movi	r5,32
    cd00:	1408d83a 	srl	r4,r2,r16
    cd04:	19405026 	beq	r3,r5,ce48 <__subdf3+0x574>
    cd08:	01401004 	movi	r5,64
    cd0c:	28c7c83a 	sub	r3,r5,r3
    cd10:	10c4983a 	sll	r2,r2,r3
    cd14:	88a2b03a 	or	r17,r17,r2
    cd18:	8822c03a 	cmpne	r17,r17,zero
    cd1c:	2462b03a 	or	r17,r4,r17
    cd20:	0007883a 	mov	r3,zero
    cd24:	0021883a 	mov	r16,zero
    cd28:	003f6d06 	br	cae0 <__alt_data_end+0xfffdbda0>
    cd2c:	11fff804 	addi	r7,r2,-32
    cd30:	01000804 	movi	r4,32
    cd34:	29ced83a 	srl	r7,r5,r7
    cd38:	11004526 	beq	r2,r4,ce50 <__subdf3+0x57c>
    cd3c:	01001004 	movi	r4,64
    cd40:	2089c83a 	sub	r4,r4,r2
    cd44:	2904983a 	sll	r2,r5,r4
    cd48:	118cb03a 	or	r6,r2,r6
    cd4c:	300cc03a 	cmpne	r6,r6,zero
    cd50:	398cb03a 	or	r6,r7,r6
    cd54:	0005883a 	mov	r2,zero
    cd58:	003f3706 	br	ca38 <__alt_data_end+0xfffdbcf8>
    cd5c:	80002a26 	beq	r16,zero,ce08 <__subdf3+0x534>
    cd60:	0101ffc4 	movi	r4,2047
    cd64:	49006626 	beq	r9,r4,cf00 <__subdf3+0x62c>
    cd68:	0085c83a 	sub	r2,zero,r2
    cd6c:	18c02034 	orhi	r3,r3,128
    cd70:	01000e04 	movi	r4,56
    cd74:	20807e16 	blt	r4,r2,cf70 <__subdf3+0x69c>
    cd78:	010007c4 	movi	r4,31
    cd7c:	2080e716 	blt	r4,r2,d11c <__subdf3+0x848>
    cd80:	01000804 	movi	r4,32
    cd84:	2089c83a 	sub	r4,r4,r2
    cd88:	1914983a 	sll	r10,r3,r4
    cd8c:	8890d83a 	srl	r8,r17,r2
    cd90:	8908983a 	sll	r4,r17,r4
    cd94:	1884d83a 	srl	r2,r3,r2
    cd98:	5222b03a 	or	r17,r10,r8
    cd9c:	2006c03a 	cmpne	r3,r4,zero
    cda0:	88e2b03a 	or	r17,r17,r3
    cda4:	3463c83a 	sub	r17,r6,r17
    cda8:	2885c83a 	sub	r2,r5,r2
    cdac:	344d803a 	cmpltu	r6,r6,r17
    cdb0:	1187c83a 	sub	r3,r2,r6
    cdb4:	4821883a 	mov	r16,r9
    cdb8:	3825883a 	mov	r18,r7
    cdbc:	003f2306 	br	ca4c <__alt_data_end+0xfffdbd0c>
    cdc0:	24d0b03a 	or	r8,r4,r19
    cdc4:	40001b1e 	bne	r8,zero,ce34 <__subdf3+0x560>
    cdc8:	0005883a 	mov	r2,zero
    cdcc:	0009883a 	mov	r4,zero
    cdd0:	0021883a 	mov	r16,zero
    cdd4:	003f4906 	br	cafc <__alt_data_end+0xfffdbdbc>
    cdd8:	010007c4 	movi	r4,31
    cddc:	20803a16 	blt	r4,r2,cec8 <__subdf3+0x5f4>
    cde0:	01000804 	movi	r4,32
    cde4:	2089c83a 	sub	r4,r4,r2
    cde8:	2912983a 	sll	r9,r5,r4
    cdec:	3090d83a 	srl	r8,r6,r2
    cdf0:	3108983a 	sll	r4,r6,r4
    cdf4:	2884d83a 	srl	r2,r5,r2
    cdf8:	4a12b03a 	or	r9,r9,r8
    cdfc:	2008c03a 	cmpne	r4,r4,zero
    ce00:	4912b03a 	or	r9,r9,r4
    ce04:	003f4e06 	br	cb40 <__alt_data_end+0xfffdbe00>
    ce08:	1c48b03a 	or	r4,r3,r17
    ce0c:	20003c26 	beq	r4,zero,cf00 <__subdf3+0x62c>
    ce10:	0084303a 	nor	r2,zero,r2
    ce14:	1000381e 	bne	r2,zero,cef8 <__subdf3+0x624>
    ce18:	3463c83a 	sub	r17,r6,r17
    ce1c:	28c5c83a 	sub	r2,r5,r3
    ce20:	344d803a 	cmpltu	r6,r6,r17
    ce24:	1187c83a 	sub	r3,r2,r6
    ce28:	4821883a 	mov	r16,r9
    ce2c:	3825883a 	mov	r18,r7
    ce30:	003f0606 	br	ca4c <__alt_data_end+0xfffdbd0c>
    ce34:	2023883a 	mov	r17,r4
    ce38:	003f0906 	br	ca60 <__alt_data_end+0xfffdbd20>
    ce3c:	0101ffc4 	movi	r4,2047
    ce40:	813f3a1e 	bne	r16,r4,cb2c <__alt_data_end+0xfffdbdec>
    ce44:	003ec406 	br	c958 <__alt_data_end+0xfffdbc18>
    ce48:	0005883a 	mov	r2,zero
    ce4c:	003fb106 	br	cd14 <__alt_data_end+0xfffdbfd4>
    ce50:	0005883a 	mov	r2,zero
    ce54:	003fbc06 	br	cd48 <__alt_data_end+0xfffdc008>
    ce58:	1c44b03a 	or	r2,r3,r17
    ce5c:	80008e1e 	bne	r16,zero,d098 <__subdf3+0x7c4>
    ce60:	1000c826 	beq	r2,zero,d184 <__subdf3+0x8b0>
    ce64:	2984b03a 	or	r2,r5,r6
    ce68:	103ebb26 	beq	r2,zero,c958 <__alt_data_end+0xfffdbc18>
    ce6c:	8989883a 	add	r4,r17,r6
    ce70:	1945883a 	add	r2,r3,r5
    ce74:	2447803a 	cmpltu	r3,r4,r17
    ce78:	1887883a 	add	r3,r3,r2
    ce7c:	1880202c 	andhi	r2,r3,128
    ce80:	2023883a 	mov	r17,r4
    ce84:	103f1626 	beq	r2,zero,cae0 <__alt_data_end+0xfffdbda0>
    ce88:	00bfe034 	movhi	r2,65408
    ce8c:	10bfffc4 	addi	r2,r2,-1
    ce90:	5021883a 	mov	r16,r10
    ce94:	1886703a 	and	r3,r3,r2
    ce98:	003eaf06 	br	c958 <__alt_data_end+0xfffdbc18>
    ce9c:	3825883a 	mov	r18,r7
    cea0:	003f0f06 	br	cae0 <__alt_data_end+0xfffdbda0>
    cea4:	1c44b03a 	or	r2,r3,r17
    cea8:	8000251e 	bne	r16,zero,cf40 <__subdf3+0x66c>
    ceac:	1000661e 	bne	r2,zero,d048 <__subdf3+0x774>
    ceb0:	2990b03a 	or	r8,r5,r6
    ceb4:	40009626 	beq	r8,zero,d110 <__subdf3+0x83c>
    ceb8:	2807883a 	mov	r3,r5
    cebc:	3023883a 	mov	r17,r6
    cec0:	3825883a 	mov	r18,r7
    cec4:	003ea406 	br	c958 <__alt_data_end+0xfffdbc18>
    cec8:	127ff804 	addi	r9,r2,-32
    cecc:	01000804 	movi	r4,32
    ced0:	2a52d83a 	srl	r9,r5,r9
    ced4:	11008c26 	beq	r2,r4,d108 <__subdf3+0x834>
    ced8:	01001004 	movi	r4,64
    cedc:	2085c83a 	sub	r2,r4,r2
    cee0:	2884983a 	sll	r2,r5,r2
    cee4:	118cb03a 	or	r6,r2,r6
    cee8:	300cc03a 	cmpne	r6,r6,zero
    ceec:	4992b03a 	or	r9,r9,r6
    cef0:	0005883a 	mov	r2,zero
    cef4:	003f1206 	br	cb40 <__alt_data_end+0xfffdbe00>
    cef8:	0101ffc4 	movi	r4,2047
    cefc:	493f9c1e 	bne	r9,r4,cd70 <__alt_data_end+0xfffdc030>
    cf00:	2807883a 	mov	r3,r5
    cf04:	3023883a 	mov	r17,r6
    cf08:	4821883a 	mov	r16,r9
    cf0c:	3825883a 	mov	r18,r7
    cf10:	003e9106 	br	c958 <__alt_data_end+0xfffdbc18>
    cf14:	80001f1e 	bne	r16,zero,cf94 <__subdf3+0x6c0>
    cf18:	1c48b03a 	or	r4,r3,r17
    cf1c:	20005a26 	beq	r4,zero,d088 <__subdf3+0x7b4>
    cf20:	0084303a 	nor	r2,zero,r2
    cf24:	1000561e 	bne	r2,zero,d080 <__subdf3+0x7ac>
    cf28:	89a3883a 	add	r17,r17,r6
    cf2c:	1945883a 	add	r2,r3,r5
    cf30:	898d803a 	cmpltu	r6,r17,r6
    cf34:	3087883a 	add	r3,r6,r2
    cf38:	4821883a 	mov	r16,r9
    cf3c:	003f0506 	br	cb54 <__alt_data_end+0xfffdbe14>
    cf40:	10002b1e 	bne	r2,zero,cff0 <__subdf3+0x71c>
    cf44:	2984b03a 	or	r2,r5,r6
    cf48:	10008026 	beq	r2,zero,d14c <__subdf3+0x878>
    cf4c:	2807883a 	mov	r3,r5
    cf50:	3023883a 	mov	r17,r6
    cf54:	3825883a 	mov	r18,r7
    cf58:	0401ffc4 	movi	r16,2047
    cf5c:	003e7e06 	br	c958 <__alt_data_end+0xfffdbc18>
    cf60:	3809883a 	mov	r4,r7
    cf64:	0011883a 	mov	r8,zero
    cf68:	0005883a 	mov	r2,zero
    cf6c:	003ee306 	br	cafc <__alt_data_end+0xfffdbdbc>
    cf70:	1c62b03a 	or	r17,r3,r17
    cf74:	8822c03a 	cmpne	r17,r17,zero
    cf78:	0005883a 	mov	r2,zero
    cf7c:	003f8906 	br	cda4 <__alt_data_end+0xfffdc064>
    cf80:	3809883a 	mov	r4,r7
    cf84:	4821883a 	mov	r16,r9
    cf88:	0011883a 	mov	r8,zero
    cf8c:	0005883a 	mov	r2,zero
    cf90:	003eda06 	br	cafc <__alt_data_end+0xfffdbdbc>
    cf94:	0101ffc4 	movi	r4,2047
    cf98:	49003b26 	beq	r9,r4,d088 <__subdf3+0x7b4>
    cf9c:	0085c83a 	sub	r2,zero,r2
    cfa0:	18c02034 	orhi	r3,r3,128
    cfa4:	01000e04 	movi	r4,56
    cfa8:	20806e16 	blt	r4,r2,d164 <__subdf3+0x890>
    cfac:	010007c4 	movi	r4,31
    cfb0:	20807716 	blt	r4,r2,d190 <__subdf3+0x8bc>
    cfb4:	01000804 	movi	r4,32
    cfb8:	2089c83a 	sub	r4,r4,r2
    cfbc:	1914983a 	sll	r10,r3,r4
    cfc0:	8890d83a 	srl	r8,r17,r2
    cfc4:	8908983a 	sll	r4,r17,r4
    cfc8:	1884d83a 	srl	r2,r3,r2
    cfcc:	5222b03a 	or	r17,r10,r8
    cfd0:	2006c03a 	cmpne	r3,r4,zero
    cfd4:	88e2b03a 	or	r17,r17,r3
    cfd8:	89a3883a 	add	r17,r17,r6
    cfdc:	1145883a 	add	r2,r2,r5
    cfe0:	898d803a 	cmpltu	r6,r17,r6
    cfe4:	3087883a 	add	r3,r6,r2
    cfe8:	4821883a 	mov	r16,r9
    cfec:	003ed906 	br	cb54 <__alt_data_end+0xfffdbe14>
    cff0:	2984b03a 	or	r2,r5,r6
    cff4:	10004226 	beq	r2,zero,d100 <__subdf3+0x82c>
    cff8:	1808d0fa 	srli	r4,r3,3
    cffc:	8822d0fa 	srli	r17,r17,3
    d000:	1806977a 	slli	r3,r3,29
    d004:	2080022c 	andhi	r2,r4,8
    d008:	1c62b03a 	or	r17,r3,r17
    d00c:	10000826 	beq	r2,zero,d030 <__subdf3+0x75c>
    d010:	2812d0fa 	srli	r9,r5,3
    d014:	4880022c 	andhi	r2,r9,8
    d018:	1000051e 	bne	r2,zero,d030 <__subdf3+0x75c>
    d01c:	300cd0fa 	srli	r6,r6,3
    d020:	2804977a 	slli	r2,r5,29
    d024:	4809883a 	mov	r4,r9
    d028:	3825883a 	mov	r18,r7
    d02c:	11a2b03a 	or	r17,r2,r6
    d030:	8806d77a 	srli	r3,r17,29
    d034:	200890fa 	slli	r4,r4,3
    d038:	882290fa 	slli	r17,r17,3
    d03c:	0401ffc4 	movi	r16,2047
    d040:	1906b03a 	or	r3,r3,r4
    d044:	003e4406 	br	c958 <__alt_data_end+0xfffdbc18>
    d048:	2984b03a 	or	r2,r5,r6
    d04c:	103e4226 	beq	r2,zero,c958 <__alt_data_end+0xfffdbc18>
    d050:	8989c83a 	sub	r4,r17,r6
    d054:	8911803a 	cmpltu	r8,r17,r4
    d058:	1945c83a 	sub	r2,r3,r5
    d05c:	1205c83a 	sub	r2,r2,r8
    d060:	1200202c 	andhi	r8,r2,128
    d064:	403e9a26 	beq	r8,zero,cad0 <__alt_data_end+0xfffdbd90>
    d068:	3463c83a 	sub	r17,r6,r17
    d06c:	28c5c83a 	sub	r2,r5,r3
    d070:	344d803a 	cmpltu	r6,r6,r17
    d074:	1187c83a 	sub	r3,r2,r6
    d078:	3825883a 	mov	r18,r7
    d07c:	003e3606 	br	c958 <__alt_data_end+0xfffdbc18>
    d080:	0101ffc4 	movi	r4,2047
    d084:	493fc71e 	bne	r9,r4,cfa4 <__alt_data_end+0xfffdc264>
    d088:	2807883a 	mov	r3,r5
    d08c:	3023883a 	mov	r17,r6
    d090:	4821883a 	mov	r16,r9
    d094:	003e3006 	br	c958 <__alt_data_end+0xfffdbc18>
    d098:	10003626 	beq	r2,zero,d174 <__subdf3+0x8a0>
    d09c:	2984b03a 	or	r2,r5,r6
    d0a0:	10001726 	beq	r2,zero,d100 <__subdf3+0x82c>
    d0a4:	1808d0fa 	srli	r4,r3,3
    d0a8:	8822d0fa 	srli	r17,r17,3
    d0ac:	1806977a 	slli	r3,r3,29
    d0b0:	2080022c 	andhi	r2,r4,8
    d0b4:	1c62b03a 	or	r17,r3,r17
    d0b8:	10000726 	beq	r2,zero,d0d8 <__subdf3+0x804>
    d0bc:	2812d0fa 	srli	r9,r5,3
    d0c0:	4880022c 	andhi	r2,r9,8
    d0c4:	1000041e 	bne	r2,zero,d0d8 <__subdf3+0x804>
    d0c8:	300cd0fa 	srli	r6,r6,3
    d0cc:	2804977a 	slli	r2,r5,29
    d0d0:	4809883a 	mov	r4,r9
    d0d4:	11a2b03a 	or	r17,r2,r6
    d0d8:	8806d77a 	srli	r3,r17,29
    d0dc:	200890fa 	slli	r4,r4,3
    d0e0:	882290fa 	slli	r17,r17,3
    d0e4:	3825883a 	mov	r18,r7
    d0e8:	1906b03a 	or	r3,r3,r4
    d0ec:	0401ffc4 	movi	r16,2047
    d0f0:	003e1906 	br	c958 <__alt_data_end+0xfffdbc18>
    d0f4:	000b883a 	mov	r5,zero
    d0f8:	0005883a 	mov	r2,zero
    d0fc:	003e2e06 	br	c9b8 <__alt_data_end+0xfffdbc78>
    d100:	0401ffc4 	movi	r16,2047
    d104:	003e1406 	br	c958 <__alt_data_end+0xfffdbc18>
    d108:	0005883a 	mov	r2,zero
    d10c:	003f7506 	br	cee4 <__alt_data_end+0xfffdc1a4>
    d110:	0005883a 	mov	r2,zero
    d114:	0009883a 	mov	r4,zero
    d118:	003e7806 	br	cafc <__alt_data_end+0xfffdbdbc>
    d11c:	123ff804 	addi	r8,r2,-32
    d120:	01000804 	movi	r4,32
    d124:	1a10d83a 	srl	r8,r3,r8
    d128:	11002526 	beq	r2,r4,d1c0 <__subdf3+0x8ec>
    d12c:	01001004 	movi	r4,64
    d130:	2085c83a 	sub	r2,r4,r2
    d134:	1884983a 	sll	r2,r3,r2
    d138:	1444b03a 	or	r2,r2,r17
    d13c:	1004c03a 	cmpne	r2,r2,zero
    d140:	40a2b03a 	or	r17,r8,r2
    d144:	0005883a 	mov	r2,zero
    d148:	003f1606 	br	cda4 <__alt_data_end+0xfffdc064>
    d14c:	02000434 	movhi	r8,16
    d150:	0009883a 	mov	r4,zero
    d154:	423fffc4 	addi	r8,r8,-1
    d158:	00bfffc4 	movi	r2,-1
    d15c:	0401ffc4 	movi	r16,2047
    d160:	003e6606 	br	cafc <__alt_data_end+0xfffdbdbc>
    d164:	1c62b03a 	or	r17,r3,r17
    d168:	8822c03a 	cmpne	r17,r17,zero
    d16c:	0005883a 	mov	r2,zero
    d170:	003f9906 	br	cfd8 <__alt_data_end+0xfffdc298>
    d174:	2807883a 	mov	r3,r5
    d178:	3023883a 	mov	r17,r6
    d17c:	0401ffc4 	movi	r16,2047
    d180:	003df506 	br	c958 <__alt_data_end+0xfffdbc18>
    d184:	2807883a 	mov	r3,r5
    d188:	3023883a 	mov	r17,r6
    d18c:	003df206 	br	c958 <__alt_data_end+0xfffdbc18>
    d190:	123ff804 	addi	r8,r2,-32
    d194:	01000804 	movi	r4,32
    d198:	1a10d83a 	srl	r8,r3,r8
    d19c:	11000a26 	beq	r2,r4,d1c8 <__subdf3+0x8f4>
    d1a0:	01001004 	movi	r4,64
    d1a4:	2085c83a 	sub	r2,r4,r2
    d1a8:	1884983a 	sll	r2,r3,r2
    d1ac:	1444b03a 	or	r2,r2,r17
    d1b0:	1004c03a 	cmpne	r2,r2,zero
    d1b4:	40a2b03a 	or	r17,r8,r2
    d1b8:	0005883a 	mov	r2,zero
    d1bc:	003f8606 	br	cfd8 <__alt_data_end+0xfffdc298>
    d1c0:	0005883a 	mov	r2,zero
    d1c4:	003fdc06 	br	d138 <__alt_data_end+0xfffdc3f8>
    d1c8:	0005883a 	mov	r2,zero
    d1cc:	003ff706 	br	d1ac <__alt_data_end+0xfffdc46c>

0000d1d0 <__fixdfsi>:
    d1d0:	280cd53a 	srli	r6,r5,20
    d1d4:	00c00434 	movhi	r3,16
    d1d8:	18ffffc4 	addi	r3,r3,-1
    d1dc:	3181ffcc 	andi	r6,r6,2047
    d1e0:	01c0ff84 	movi	r7,1022
    d1e4:	28c6703a 	and	r3,r5,r3
    d1e8:	280ad7fa 	srli	r5,r5,31
    d1ec:	3980120e 	bge	r7,r6,d238 <__fixdfsi+0x68>
    d1f0:	00810744 	movi	r2,1053
    d1f4:	11800c16 	blt	r2,r6,d228 <__fixdfsi+0x58>
    d1f8:	00810cc4 	movi	r2,1075
    d1fc:	1185c83a 	sub	r2,r2,r6
    d200:	01c007c4 	movi	r7,31
    d204:	18c00434 	orhi	r3,r3,16
    d208:	38800d16 	blt	r7,r2,d240 <__fixdfsi+0x70>
    d20c:	31befb44 	addi	r6,r6,-1043
    d210:	2084d83a 	srl	r2,r4,r2
    d214:	1986983a 	sll	r3,r3,r6
    d218:	1884b03a 	or	r2,r3,r2
    d21c:	28000726 	beq	r5,zero,d23c <__fixdfsi+0x6c>
    d220:	0085c83a 	sub	r2,zero,r2
    d224:	f800283a 	ret
    d228:	00a00034 	movhi	r2,32768
    d22c:	10bfffc4 	addi	r2,r2,-1
    d230:	2885883a 	add	r2,r5,r2
    d234:	f800283a 	ret
    d238:	0005883a 	mov	r2,zero
    d23c:	f800283a 	ret
    d240:	008104c4 	movi	r2,1043
    d244:	1185c83a 	sub	r2,r2,r6
    d248:	1884d83a 	srl	r2,r3,r2
    d24c:	003ff306 	br	d21c <__alt_data_end+0xfffdc4dc>

0000d250 <__floatsidf>:
    d250:	defffd04 	addi	sp,sp,-12
    d254:	dfc00215 	stw	ra,8(sp)
    d258:	dc400115 	stw	r17,4(sp)
    d25c:	dc000015 	stw	r16,0(sp)
    d260:	20002b26 	beq	r4,zero,d310 <__floatsidf+0xc0>
    d264:	2023883a 	mov	r17,r4
    d268:	2020d7fa 	srli	r16,r4,31
    d26c:	20002d16 	blt	r4,zero,d324 <__floatsidf+0xd4>
    d270:	8809883a 	mov	r4,r17
    d274:	000d3d40 	call	d3d4 <__clzsi2>
    d278:	01410784 	movi	r5,1054
    d27c:	288bc83a 	sub	r5,r5,r2
    d280:	01010cc4 	movi	r4,1075
    d284:	2149c83a 	sub	r4,r4,r5
    d288:	00c007c4 	movi	r3,31
    d28c:	1900160e 	bge	r3,r4,d2e8 <__floatsidf+0x98>
    d290:	00c104c4 	movi	r3,1043
    d294:	1947c83a 	sub	r3,r3,r5
    d298:	88c6983a 	sll	r3,r17,r3
    d29c:	00800434 	movhi	r2,16
    d2a0:	10bfffc4 	addi	r2,r2,-1
    d2a4:	1886703a 	and	r3,r3,r2
    d2a8:	2941ffcc 	andi	r5,r5,2047
    d2ac:	800d883a 	mov	r6,r16
    d2b0:	0005883a 	mov	r2,zero
    d2b4:	280a953a 	slli	r5,r5,20
    d2b8:	31803fcc 	andi	r6,r6,255
    d2bc:	01000434 	movhi	r4,16
    d2c0:	300c97fa 	slli	r6,r6,31
    d2c4:	213fffc4 	addi	r4,r4,-1
    d2c8:	1906703a 	and	r3,r3,r4
    d2cc:	1946b03a 	or	r3,r3,r5
    d2d0:	1986b03a 	or	r3,r3,r6
    d2d4:	dfc00217 	ldw	ra,8(sp)
    d2d8:	dc400117 	ldw	r17,4(sp)
    d2dc:	dc000017 	ldw	r16,0(sp)
    d2e0:	dec00304 	addi	sp,sp,12
    d2e4:	f800283a 	ret
    d2e8:	00c002c4 	movi	r3,11
    d2ec:	1887c83a 	sub	r3,r3,r2
    d2f0:	88c6d83a 	srl	r3,r17,r3
    d2f4:	8904983a 	sll	r2,r17,r4
    d2f8:	01000434 	movhi	r4,16
    d2fc:	213fffc4 	addi	r4,r4,-1
    d300:	2941ffcc 	andi	r5,r5,2047
    d304:	1906703a 	and	r3,r3,r4
    d308:	800d883a 	mov	r6,r16
    d30c:	003fe906 	br	d2b4 <__alt_data_end+0xfffdc574>
    d310:	000d883a 	mov	r6,zero
    d314:	000b883a 	mov	r5,zero
    d318:	0007883a 	mov	r3,zero
    d31c:	0005883a 	mov	r2,zero
    d320:	003fe406 	br	d2b4 <__alt_data_end+0xfffdc574>
    d324:	0123c83a 	sub	r17,zero,r4
    d328:	003fd106 	br	d270 <__alt_data_end+0xfffdc530>

0000d32c <__floatunsidf>:
    d32c:	defffe04 	addi	sp,sp,-8
    d330:	dc000015 	stw	r16,0(sp)
    d334:	dfc00115 	stw	ra,4(sp)
    d338:	2021883a 	mov	r16,r4
    d33c:	20002226 	beq	r4,zero,d3c8 <__floatunsidf+0x9c>
    d340:	000d3d40 	call	d3d4 <__clzsi2>
    d344:	01010784 	movi	r4,1054
    d348:	2089c83a 	sub	r4,r4,r2
    d34c:	01810cc4 	movi	r6,1075
    d350:	310dc83a 	sub	r6,r6,r4
    d354:	00c007c4 	movi	r3,31
    d358:	1980120e 	bge	r3,r6,d3a4 <__floatunsidf+0x78>
    d35c:	00c104c4 	movi	r3,1043
    d360:	1907c83a 	sub	r3,r3,r4
    d364:	80ca983a 	sll	r5,r16,r3
    d368:	00800434 	movhi	r2,16
    d36c:	10bfffc4 	addi	r2,r2,-1
    d370:	2101ffcc 	andi	r4,r4,2047
    d374:	0021883a 	mov	r16,zero
    d378:	288a703a 	and	r5,r5,r2
    d37c:	2008953a 	slli	r4,r4,20
    d380:	00c00434 	movhi	r3,16
    d384:	18ffffc4 	addi	r3,r3,-1
    d388:	28c6703a 	and	r3,r5,r3
    d38c:	8005883a 	mov	r2,r16
    d390:	1906b03a 	or	r3,r3,r4
    d394:	dfc00117 	ldw	ra,4(sp)
    d398:	dc000017 	ldw	r16,0(sp)
    d39c:	dec00204 	addi	sp,sp,8
    d3a0:	f800283a 	ret
    d3a4:	00c002c4 	movi	r3,11
    d3a8:	188bc83a 	sub	r5,r3,r2
    d3ac:	814ad83a 	srl	r5,r16,r5
    d3b0:	00c00434 	movhi	r3,16
    d3b4:	18ffffc4 	addi	r3,r3,-1
    d3b8:	81a0983a 	sll	r16,r16,r6
    d3bc:	2101ffcc 	andi	r4,r4,2047
    d3c0:	28ca703a 	and	r5,r5,r3
    d3c4:	003fed06 	br	d37c <__alt_data_end+0xfffdc63c>
    d3c8:	0009883a 	mov	r4,zero
    d3cc:	000b883a 	mov	r5,zero
    d3d0:	003fea06 	br	d37c <__alt_data_end+0xfffdc63c>

0000d3d4 <__clzsi2>:
    d3d4:	00bfffd4 	movui	r2,65535
    d3d8:	11000536 	bltu	r2,r4,d3f0 <__clzsi2+0x1c>
    d3dc:	00803fc4 	movi	r2,255
    d3e0:	11000f36 	bltu	r2,r4,d420 <__clzsi2+0x4c>
    d3e4:	00800804 	movi	r2,32
    d3e8:	0007883a 	mov	r3,zero
    d3ec:	00000506 	br	d404 <__clzsi2+0x30>
    d3f0:	00804034 	movhi	r2,256
    d3f4:	10bfffc4 	addi	r2,r2,-1
    d3f8:	11000c2e 	bgeu	r2,r4,d42c <__clzsi2+0x58>
    d3fc:	00800204 	movi	r2,8
    d400:	00c00604 	movi	r3,24
    d404:	20c8d83a 	srl	r4,r4,r3
    d408:	00c00074 	movhi	r3,1
    d40c:	18fbc104 	addi	r3,r3,-4348
    d410:	1909883a 	add	r4,r3,r4
    d414:	20c00003 	ldbu	r3,0(r4)
    d418:	10c5c83a 	sub	r2,r2,r3
    d41c:	f800283a 	ret
    d420:	00800604 	movi	r2,24
    d424:	00c00204 	movi	r3,8
    d428:	003ff606 	br	d404 <__alt_data_end+0xfffdc6c4>
    d42c:	00800404 	movi	r2,16
    d430:	1007883a 	mov	r3,r2
    d434:	003ff306 	br	d404 <__alt_data_end+0xfffdc6c4>

0000d438 <alt_alarm_start>:
                     void* context)
{
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  
  if (alt_ticks_per_second ())
    d438:	d0a6f917 	ldw	r2,-25628(gp)
    d43c:	10001a26 	beq	r2,zero,d4a8 <alt_alarm_start+0x70>
  {
    if (alarm)
    d440:	20001b26 	beq	r4,zero,d4b0 <alt_alarm_start+0x78>
    {
      alarm->callback = callback;
    d444:	21800315 	stw	r6,12(r4)
      alarm->context  = context;
    d448:	21c00515 	stw	r7,20(r4)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d44c:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d450:	00bfff84 	movi	r2,-2
    d454:	1884703a 	and	r2,r3,r2
    d458:	1001703a 	wrctl	status,r2
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    d45c:	d0a6f817 	ldw	r2,-25632(gp)
 
      irq_context = alt_irq_disable_all ();
      
      current_nticks = alt_nticks();
      
      alarm->time = nticks + current_nticks + 1; 
    d460:	11800044 	addi	r6,r2,1
    d464:	314b883a 	add	r5,r6,r5
    d468:	21400215 	stw	r5,8(r4)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    d46c:	2880032e 	bgeu	r5,r2,d47c <alt_alarm_start+0x44>
      {
        alarm->rollover = 1;
    d470:	00800044 	movi	r2,1
    d474:	20800405 	stb	r2,16(r4)
    d478:	00000106 	br	d480 <alt_alarm_start+0x48>
      }
      else
      {
        alarm->rollover = 0;
    d47c:	20000405 	stb	zero,16(r4)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    d480:	d0a01004 	addi	r2,gp,-32704
    d484:	20800115 	stw	r2,4(r4)
  entry->next     = list->next;
    d488:	11400017 	ldw	r5,0(r2)
    d48c:	21400015 	stw	r5,0(r4)

  list->next->previous = entry;
    d490:	11400017 	ldw	r5,0(r2)
    d494:	29000115 	stw	r4,4(r5)
  list->next           = entry;
    d498:	11000015 	stw	r4,0(r2)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d49c:	1801703a 	wrctl	status,r3
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
      alt_irq_enable_all (irq_context);

      return 0;
    d4a0:	0005883a 	mov	r2,zero
    d4a4:	f800283a 	ret
      return -EINVAL;
    }
  }
  else
  {
    return -ENOTSUP;
    d4a8:	00bfde84 	movi	r2,-134
    d4ac:	f800283a 	ret

      return 0;
    }
    else
    {
      return -EINVAL;
    d4b0:	00bffa84 	movi	r2,-22
  }
  else
  {
    return -ENOTSUP;
  }
}
    d4b4:	f800283a 	ret

0000d4b8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d4b8:	defffd04 	addi	sp,sp,-12
    d4bc:	dfc00215 	stw	ra,8(sp)
    d4c0:	dc400115 	stw	r17,4(sp)
    d4c4:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d4c8:	20002016 	blt	r4,zero,d54c <close+0x94>
    d4cc:	2021883a 	mov	r16,r4
    d4d0:	01400304 	movi	r5,12
    d4d4:	000ab6c0 	call	ab6c <__mulsi3>
    d4d8:	04400074 	movhi	r17,1
    d4dc:	8c7e3604 	addi	r17,r17,-1832
    d4e0:	1463883a 	add	r17,r2,r17

  if (fd)
    d4e4:	88001926 	beq	r17,zero,d54c <close+0x94>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d4e8:	01400304 	movi	r5,12
    d4ec:	8009883a 	mov	r4,r16
    d4f0:	000ab6c0 	call	ab6c <__mulsi3>
    d4f4:	00c00074 	movhi	r3,1
    d4f8:	18fe3604 	addi	r3,r3,-1832
    d4fc:	1885883a 	add	r2,r3,r2
    d500:	10800017 	ldw	r2,0(r2)
    d504:	10800417 	ldw	r2,16(r2)
    d508:	10001926 	beq	r2,zero,d570 <close+0xb8>
    d50c:	8809883a 	mov	r4,r17
    d510:	103ee83a 	callr	r2
    d514:	1023883a 	mov	r17,r2

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d518:	8009883a 	mov	r4,r16
    d51c:	000db740 	call	db74 <alt_release_fd>
    if (rval < 0)
    {
      ALT_ERRNO = -rval;
      return -1;
    }
    return 0;
    d520:	0005883a 	mov	r2,zero
    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    if (rval < 0)
    d524:	8800150e 	bge	r17,zero,d57c <close+0xc4>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
    d528:	d0a00d17 	ldw	r2,-32716(gp)
    d52c:	10000226 	beq	r2,zero,d538 <close+0x80>
    d530:	103ee83a 	callr	r2
    d534:	00000106 	br	d53c <close+0x84>
    d538:	d0a6f304 	addi	r2,gp,-25652
    {
      ALT_ERRNO = -rval;
    d53c:	0463c83a 	sub	r17,zero,r17
    d540:	14400015 	stw	r17,0(r2)
      return -1;
    d544:	00bfffc4 	movi	r2,-1
    d548:	00000c06 	br	d57c <close+0xc4>
    d54c:	d0a00d17 	ldw	r2,-32716(gp)
    d550:	10000226 	beq	r2,zero,d55c <close+0xa4>
    d554:	103ee83a 	callr	r2
    d558:	00000106 	br	d560 <close+0xa8>
    d55c:	d0a6f304 	addi	r2,gp,-25652
    }
    return 0;
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d560:	00c01444 	movi	r3,81
    d564:	10c00015 	stw	r3,0(r2)
    return -1;
    d568:	00bfffc4 	movi	r2,-1
    d56c:	00000306 	br	d57c <close+0xc4>

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d570:	8009883a 	mov	r4,r16
    d574:	000db740 	call	db74 <alt_release_fd>
    if (rval < 0)
    {
      ALT_ERRNO = -rval;
      return -1;
    }
    return 0;
    d578:	0005883a 	mov	r2,zero
  else
  {
    ALT_ERRNO = EBADFD;
    return -1;
  }
}
    d57c:	dfc00217 	ldw	ra,8(sp)
    d580:	dc400117 	ldw	r17,4(sp)
    d584:	dc000017 	ldw	r16,0(sp)
    d588:	dec00304 	addi	sp,sp,12
    d58c:	f800283a 	ret

0000d590 <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
    d590:	3005883a 	mov	r2,r6
    d594:	f800283a 	ret

0000d598 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d598:	defffc04 	addi	sp,sp,-16
    d59c:	dfc00315 	stw	ra,12(sp)
    d5a0:	dc800215 	stw	r18,8(sp)
    d5a4:	dc400115 	stw	r17,4(sp)
    d5a8:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d5ac:	20001916 	blt	r4,zero,d614 <fstat+0x7c>
    d5b0:	2021883a 	mov	r16,r4
    d5b4:	2825883a 	mov	r18,r5
    d5b8:	01400304 	movi	r5,12
    d5bc:	000ab6c0 	call	ab6c <__mulsi3>
    d5c0:	04400074 	movhi	r17,1
    d5c4:	8c7e3604 	addi	r17,r17,-1832
    d5c8:	1463883a 	add	r17,r2,r17
  
  if (fd)
    d5cc:	88001126 	beq	r17,zero,d614 <fstat+0x7c>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d5d0:	01400304 	movi	r5,12
    d5d4:	8009883a 	mov	r4,r16
    d5d8:	000ab6c0 	call	ab6c <__mulsi3>
    d5dc:	00c00074 	movhi	r3,1
    d5e0:	18fe3604 	addi	r3,r3,-1832
    d5e4:	1885883a 	add	r2,r3,r2
    d5e8:	10800017 	ldw	r2,0(r2)
    d5ec:	10800817 	ldw	r2,32(r2)
    d5f0:	10000426 	beq	r2,zero,d604 <fstat+0x6c>
    {
      return fd->dev->fstat(fd, st);
    d5f4:	900b883a 	mov	r5,r18
    d5f8:	8809883a 	mov	r4,r17
    d5fc:	103ee83a 	callr	r2
    d600:	00000c06 	br	d634 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d604:	00880004 	movi	r2,8192
    d608:	90800115 	stw	r2,4(r18)
      return 0;
    d60c:	0005883a 	mov	r2,zero
    d610:	00000806 	br	d634 <fstat+0x9c>
    d614:	d0a00d17 	ldw	r2,-32716(gp)
    d618:	10000226 	beq	r2,zero,d624 <fstat+0x8c>
    d61c:	103ee83a 	callr	r2
    d620:	00000106 	br	d628 <fstat+0x90>
    d624:	d0a6f304 	addi	r2,gp,-25652
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d628:	00c01444 	movi	r3,81
    d62c:	10c00015 	stw	r3,0(r2)
    return -1;
    d630:	00bfffc4 	movi	r2,-1
  }
}
    d634:	dfc00317 	ldw	ra,12(sp)
    d638:	dc800217 	ldw	r18,8(sp)
    d63c:	dc400117 	ldw	r17,4(sp)
    d640:	dc000017 	ldw	r16,0(sp)
    d644:	dec00404 	addi	sp,sp,16
    d648:	f800283a 	ret

0000d64c <alt_irq_register>:
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
  alt_irq_context status;

  if (id < ALT_NIRQ)
    d64c:	008007c4 	movi	r2,31
    d650:	11002736 	bltu	r2,r4,d6f0 <alt_irq_register+0xa4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d654:	000f303a 	rdctl	r7,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d658:	00bfff84 	movi	r2,-2
    d65c:	3884703a 	and	r2,r7,r2
    d660:	1001703a 	wrctl	status,r2
     * state.
     */

    status = alt_irq_disable_all ();

    alt_irq[id].handler = handler;
    d664:	200490fa 	slli	r2,r4,3
    d668:	00c00074 	movhi	r3,1
    d66c:	18c9c904 	addi	r3,r3,10020
    d670:	1885883a 	add	r2,r3,r2
    d674:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = context;
    d678:	11400115 	stw	r5,4(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
    d67c:	30000d26 	beq	r6,zero,d6b4 <alt_irq_register+0x68>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d680:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d684:	00bfff84 	movi	r2,-2
    d688:	2884703a 	and	r2,r5,r2
    d68c:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
    d690:	d0a6f417 	ldw	r2,-25648(gp)
    d694:	00c00044 	movi	r3,1
    d698:	1908983a 	sll	r4,r3,r4
    d69c:	2088b03a 	or	r4,r4,r2
    d6a0:	d126f415 	stw	r4,-25648(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    d6a4:	d0a6f417 	ldw	r2,-25648(gp)
    d6a8:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d6ac:	2801703a 	wrctl	status,r5
    d6b0:	00000c06 	br	d6e4 <alt_irq_register+0x98>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d6b4:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d6b8:	00bfff84 	movi	r2,-2
    d6bc:	2884703a 	and	r2,r5,r2
    d6c0:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
    d6c4:	d0a6f417 	ldw	r2,-25648(gp)
    d6c8:	00ffff84 	movi	r3,-2
    d6cc:	1908183a 	rol	r4,r3,r4
    d6d0:	2088703a 	and	r4,r4,r2
    d6d4:	d126f415 	stw	r4,-25648(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    d6d8:	d0a6f417 	ldw	r2,-25648(gp)
    d6dc:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d6e0:	2801703a 	wrctl	status,r5
    d6e4:	3801703a 	wrctl	status,r7
    d6e8:	0005883a 	mov	r2,zero
    d6ec:	f800283a 	ret
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
    d6f0:	00bffa84 	movi	r2,-22
    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);

    alt_irq_enable_all(status);
  }
  return rc; 
}
    d6f4:	f800283a 	ret

0000d6f8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d6f8:	deffef04 	addi	sp,sp,-68
    d6fc:	dfc01015 	stw	ra,64(sp)
    d700:	dc000f15 	stw	r16,60(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d704:	20001616 	blt	r4,zero,d760 <isatty+0x68>
    d708:	2021883a 	mov	r16,r4
    d70c:	01400304 	movi	r5,12
    d710:	000ab6c0 	call	ab6c <__mulsi3>
    d714:	00c00074 	movhi	r3,1
    d718:	18fe3604 	addi	r3,r3,-1832
    d71c:	10c5883a 	add	r2,r2,r3
  
  if (fd)
    d720:	10000f26 	beq	r2,zero,d760 <isatty+0x68>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d724:	01400304 	movi	r5,12
    d728:	8009883a 	mov	r4,r16
    d72c:	000ab6c0 	call	ab6c <__mulsi3>
    d730:	00c00074 	movhi	r3,1
    d734:	18fe3604 	addi	r3,r3,-1832
    d738:	1885883a 	add	r2,r3,r2
    d73c:	10800017 	ldw	r2,0(r2)
    d740:	10800817 	ldw	r2,32(r2)
    d744:	10000f26 	beq	r2,zero,d784 <isatty+0x8c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d748:	d80b883a 	mov	r5,sp
    d74c:	8009883a 	mov	r4,r16
    d750:	000d5980 	call	d598 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d754:	d8800117 	ldw	r2,4(sp)
    d758:	10880020 	cmpeqi	r2,r2,8192
    d75c:	00000a06 	br	d788 <isatty+0x90>
    d760:	d0a00d17 	ldw	r2,-32716(gp)
    d764:	10000226 	beq	r2,zero,d770 <isatty+0x78>
    d768:	103ee83a 	callr	r2
    d76c:	00000106 	br	d774 <isatty+0x7c>
    d770:	d0a6f304 	addi	r2,gp,-25652
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d774:	00c01444 	movi	r3,81
    d778:	10c00015 	stw	r3,0(r2)
    return 0;
    d77c:	0005883a 	mov	r2,zero
    d780:	00000106 	br	d788 <isatty+0x90>
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    {
      return 1;
    d784:	00800044 	movi	r2,1
  else
  {
    ALT_ERRNO = EBADFD;
    return 0;
  }
}
    d788:	dfc01017 	ldw	ra,64(sp)
    d78c:	dc000f17 	ldw	r16,60(sp)
    d790:	dec01104 	addi	sp,sp,68
    d794:	f800283a 	ret

0000d798 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d798:	deffff04 	addi	sp,sp,-4
    d79c:	dfc00015 	stw	ra,0(sp)

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d7a0:	00800074 	movhi	r2,1
    d7a4:	1082d604 	addi	r2,r2,2904
    d7a8:	00c00074 	movhi	r3,1
    d7ac:	18fc0d04 	addi	r3,r3,-4044
    d7b0:	18801926 	beq	r3,r2,d818 <alt_load+0x80>
  {
    while( to != end )
    d7b4:	00800074 	movhi	r2,1
    d7b8:	1082d604 	addi	r2,r2,2904
    d7bc:	00c00074 	movhi	r3,1
    d7c0:	18fc0d04 	addi	r3,r3,-4044
    d7c4:	18801426 	beq	r3,r2,d818 <alt_load+0x80>
    d7c8:	00c00074 	movhi	r3,1
    d7cc:	18fc0e04 	addi	r3,r3,-4040
    d7d0:	00800074 	movhi	r2,1
    d7d4:	1082d604 	addi	r2,r2,2904
    d7d8:	10c7c83a 	sub	r3,r2,r3
    d7dc:	1806d0ba 	srli	r3,r3,2
    d7e0:	18c00044 	addi	r3,r3,1
    d7e4:	18c7883a 	add	r3,r3,r3
    d7e8:	18c7883a 	add	r3,r3,r3
    d7ec:	0005883a 	mov	r2,zero
    {
      *to++ = *from++;
    d7f0:	01c00074 	movhi	r7,1
    d7f4:	39fc0d04 	addi	r7,r7,-4044
    d7f8:	01800074 	movhi	r6,1
    d7fc:	3182d604 	addi	r6,r6,2904
    d800:	11c9883a 	add	r4,r2,r7
    d804:	118b883a 	add	r5,r2,r6
    d808:	29400017 	ldw	r5,0(r5)
    d80c:	21400015 	stw	r5,0(r4)
    d810:	10800104 	addi	r2,r2,4
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d814:	10fffa1e 	bne	r2,r3,d800 <__alt_data_end+0xfffdcac0>

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d818:	00800034 	movhi	r2,0
    d81c:	10800804 	addi	r2,r2,32
    d820:	00c00034 	movhi	r3,0
    d824:	18c00804 	addi	r3,r3,32
    d828:	18801926 	beq	r3,r2,d890 <alt_load+0xf8>
  {
    while( to != end )
    d82c:	00800034 	movhi	r2,0
    d830:	10806a04 	addi	r2,r2,424
    d834:	00c00034 	movhi	r3,0
    d838:	18c00804 	addi	r3,r3,32
    d83c:	18801426 	beq	r3,r2,d890 <alt_load+0xf8>
    d840:	00c00034 	movhi	r3,0
    d844:	18c00904 	addi	r3,r3,36
    d848:	00800034 	movhi	r2,0
    d84c:	10806a04 	addi	r2,r2,424
    d850:	10c7c83a 	sub	r3,r2,r3
    d854:	1806d0ba 	srli	r3,r3,2
    d858:	18c00044 	addi	r3,r3,1
    d85c:	18c7883a 	add	r3,r3,r3
    d860:	18c7883a 	add	r3,r3,r3
    d864:	0005883a 	mov	r2,zero
    {
      *to++ = *from++;
    d868:	01c00034 	movhi	r7,0
    d86c:	39c00804 	addi	r7,r7,32
    d870:	01800034 	movhi	r6,0
    d874:	31800804 	addi	r6,r6,32
    d878:	11c9883a 	add	r4,r2,r7
    d87c:	118b883a 	add	r5,r2,r6
    d880:	29400017 	ldw	r5,0(r5)
    d884:	21400015 	stw	r5,0(r4)
    d888:	10800104 	addi	r2,r2,4
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d88c:	18bffa1e 	bne	r3,r2,d878 <__alt_data_end+0xfffdcb38>

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d890:	00800074 	movhi	r2,1
    d894:	10bb4e04 	addi	r2,r2,-4808
    d898:	00c00074 	movhi	r3,1
    d89c:	18fb4e04 	addi	r3,r3,-4808
    d8a0:	18801926 	beq	r3,r2,d908 <alt_load+0x170>
  {
    while( to != end )
    d8a4:	00800074 	movhi	r2,1
    d8a8:	10bc0d04 	addi	r2,r2,-4044
    d8ac:	00c00074 	movhi	r3,1
    d8b0:	18fb4e04 	addi	r3,r3,-4808
    d8b4:	18801426 	beq	r3,r2,d908 <alt_load+0x170>
    d8b8:	00c00074 	movhi	r3,1
    d8bc:	18fb4f04 	addi	r3,r3,-4804
    d8c0:	00800074 	movhi	r2,1
    d8c4:	10bc0d04 	addi	r2,r2,-4044
    d8c8:	10c7c83a 	sub	r3,r2,r3
    d8cc:	1806d0ba 	srli	r3,r3,2
    d8d0:	18c00044 	addi	r3,r3,1
    d8d4:	18c7883a 	add	r3,r3,r3
    d8d8:	18c7883a 	add	r3,r3,r3
    d8dc:	0005883a 	mov	r2,zero
    {
      *to++ = *from++;
    d8e0:	01c00074 	movhi	r7,1
    d8e4:	39fb4e04 	addi	r7,r7,-4808
    d8e8:	01800074 	movhi	r6,1
    d8ec:	31bb4e04 	addi	r6,r6,-4808
    d8f0:	11c9883a 	add	r4,r2,r7
    d8f4:	118b883a 	add	r5,r2,r6
    d8f8:	29400017 	ldw	r5,0(r5)
    d8fc:	21400015 	stw	r5,0(r4)
    d900:	10800104 	addi	r2,r2,4
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d904:	18bffa1e 	bne	r3,r2,d8f0 <__alt_data_end+0xfffdcbb0>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d908:	000e5540 	call	e554 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d90c:	000e5cc0 	call	e5cc <alt_icache_flush_all>
}
    d910:	dfc00017 	ldw	ra,0(sp)
    d914:	dec00104 	addi	sp,sp,4
    d918:	f800283a 	ret

0000d91c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d91c:	defffb04 	addi	sp,sp,-20
    d920:	dfc00415 	stw	ra,16(sp)
    d924:	dcc00315 	stw	r19,12(sp)
    d928:	dc800215 	stw	r18,8(sp)
    d92c:	dc400115 	stw	r17,4(sp)
    d930:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d934:	20001916 	blt	r4,zero,d99c <lseek+0x80>
    d938:	2021883a 	mov	r16,r4
    d93c:	2825883a 	mov	r18,r5
    d940:	3027883a 	mov	r19,r6
    d944:	01400304 	movi	r5,12
    d948:	000ab6c0 	call	ab6c <__mulsi3>
    d94c:	04400074 	movhi	r17,1
    d950:	8c7e3604 	addi	r17,r17,-1832
    d954:	1463883a 	add	r17,r2,r17
  
  if (fd) 
    d958:	88001a26 	beq	r17,zero,d9c4 <lseek+0xa8>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d95c:	01400304 	movi	r5,12
    d960:	8009883a 	mov	r4,r16
    d964:	000ab6c0 	call	ab6c <__mulsi3>
    d968:	00c00074 	movhi	r3,1
    d96c:	18fe3604 	addi	r3,r3,-1832
    d970:	1885883a 	add	r2,r3,r2
    d974:	10800017 	ldw	r2,0(r2)
    d978:	10800717 	ldw	r2,28(r2)
    d97c:	10001326 	beq	r2,zero,d9cc <lseek+0xb0>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d980:	980d883a 	mov	r6,r19
    d984:	900b883a 	mov	r5,r18
    d988:	8809883a 	mov	r4,r17
    d98c:	103ee83a 	callr	r2
    d990:	1021883a 	mov	r16,r2
  else  
  {
    rc = -EBADFD;
  }

  if (rc < 0)
    d994:	10000f0e 	bge	r2,zero,d9d4 <lseek+0xb8>
    d998:	00000106 	br	d9a0 <lseek+0x84>
      rc = -ENOTSUP;
    }
  }
  else  
  {
    rc = -EBADFD;
    d99c:	043febc4 	movi	r16,-81
    d9a0:	d0a00d17 	ldw	r2,-32716(gp)
    d9a4:	10000226 	beq	r2,zero,d9b0 <lseek+0x94>
    d9a8:	103ee83a 	callr	r2
    d9ac:	00000106 	br	d9b4 <lseek+0x98>
    d9b0:	d0a6f304 	addi	r2,gp,-25652
  }

  if (rc < 0)
  {
    ALT_ERRNO = -rc;
    d9b4:	0421c83a 	sub	r16,zero,r16
    d9b8:	14000015 	stw	r16,0(r2)
    rc = -1;
    d9bc:	043fffc4 	movi	r16,-1
  }

  return rc;
    d9c0:	00000406 	br	d9d4 <lseek+0xb8>
      rc = -ENOTSUP;
    }
  }
  else  
  {
    rc = -EBADFD;
    d9c4:	043febc4 	movi	r16,-81
    d9c8:	003ff506 	br	d9a0 <__alt_data_end+0xfffdcc60>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d9cc:	043fde84 	movi	r16,-134
    d9d0:	003ff306 	br	d9a0 <__alt_data_end+0xfffdcc60>
    ALT_ERRNO = -rc;
    rc = -1;
  }

  return rc;
}
    d9d4:	8005883a 	mov	r2,r16
    d9d8:	dfc00417 	ldw	ra,16(sp)
    d9dc:	dcc00317 	ldw	r19,12(sp)
    d9e0:	dc800217 	ldw	r18,8(sp)
    d9e4:	dc400117 	ldw	r17,4(sp)
    d9e8:	dc000017 	ldw	r16,0(sp)
    d9ec:	dec00504 	addi	sp,sp,20
    d9f0:	f800283a 	ret

0000d9f4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d9f4:	defffe04 	addi	sp,sp,-8
    d9f8:	dfc00115 	stw	ra,4(sp)
    d9fc:	dc000015 	stw	r16,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    da00:	0009883a 	mov	r4,zero
    da04:	000de440 	call	de44 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    da08:	000de640 	call	de64 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    da0c:	01000074 	movhi	r4,1
    da10:	213c0404 	addi	r4,r4,-4080
    da14:	200d883a 	mov	r6,r4
    da18:	200b883a 	mov	r5,r4
    da1c:	000e6500 	call	e650 <alt_io_redirect>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    da20:	d1a6f517 	ldw	r6,-25644(gp)
    da24:	d166f617 	ldw	r5,-25640(gp)
    da28:	d126f717 	ldw	r4,-25636(gp)
    da2c:	00004c00 	call	4c0 <main>
    da30:	1021883a 	mov	r16,r2
  close(STDOUT_FILENO);
    da34:	01000044 	movi	r4,1
    da38:	000d4b80 	call	d4b8 <close>
  exit (result);
    da3c:	8009883a 	mov	r4,r16
    da40:	000eaf00 	call	eaf0 <exit>

0000da44 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    da44:	f800283a 	ret

0000da48 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    da48:	f800283a 	ret

0000da4c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    da4c:	defffb04 	addi	sp,sp,-20
    da50:	dfc00415 	stw	ra,16(sp)
    da54:	dcc00315 	stw	r19,12(sp)
    da58:	dc800215 	stw	r18,8(sp)
    da5c:	dc400115 	stw	r17,4(sp)
    da60:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    da64:	20003416 	blt	r4,zero,db38 <read+0xec>
    da68:	2021883a 	mov	r16,r4
    da6c:	2825883a 	mov	r18,r5
    da70:	3027883a 	mov	r19,r6
    da74:	01400304 	movi	r5,12
    da78:	000ab6c0 	call	ab6c <__mulsi3>
    da7c:	04400074 	movhi	r17,1
    da80:	8c7e3604 	addi	r17,r17,-1832
    da84:	1463883a 	add	r17,r2,r17
  
  if (fd)
    da88:	88002b26 	beq	r17,zero,db38 <read+0xec>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    da8c:	01400304 	movi	r5,12
    da90:	8009883a 	mov	r4,r16
    da94:	000ab6c0 	call	ab6c <__mulsi3>
    da98:	00c00074 	movhi	r3,1
    da9c:	18fe3804 	addi	r3,r3,-1824
    daa0:	10c5883a 	add	r2,r2,r3
    daa4:	10800017 	ldw	r2,0(r2)
    daa8:	108000cc 	andi	r2,r2,3
    daac:	00c00044 	movi	r3,1
    dab0:	10c01826 	beq	r2,r3,db14 <read+0xc8>
        (fd->dev->read))
    dab4:	01400304 	movi	r5,12
    dab8:	8009883a 	mov	r4,r16
    dabc:	000ab6c0 	call	ab6c <__mulsi3>
    dac0:	00c00074 	movhi	r3,1
    dac4:	18fe3604 	addi	r3,r3,-1832
    dac8:	1885883a 	add	r2,r3,r2
    dacc:	10800017 	ldw	r2,0(r2)
    dad0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    dad4:	10000f26 	beq	r2,zero,db14 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    dad8:	980d883a 	mov	r6,r19
    dadc:	900b883a 	mov	r5,r18
    dae0:	8809883a 	mov	r4,r17
    dae4:	103ee83a 	callr	r2
    dae8:	1021883a 	mov	r16,r2
    daec:	10001a0e 	bge	r2,zero,db58 <read+0x10c>
    daf0:	d0a00d17 	ldw	r2,-32716(gp)
    daf4:	10000226 	beq	r2,zero,db00 <read+0xb4>
    daf8:	103ee83a 	callr	r2
    dafc:	00000106 	br	db04 <read+0xb8>
    db00:	d0a6f304 	addi	r2,gp,-25652
        {
          ALT_ERRNO = -rval;
    db04:	0421c83a 	sub	r16,zero,r16
    db08:	14000015 	stw	r16,0(r2)
          return -1;
    db0c:	00bfffc4 	movi	r2,-1
    db10:	00001106 	br	db58 <read+0x10c>
    db14:	d0a00d17 	ldw	r2,-32716(gp)
    db18:	10000226 	beq	r2,zero,db24 <read+0xd8>
    db1c:	103ee83a 	callr	r2
    db20:	00000106 	br	db28 <read+0xdc>
    db24:	d0a6f304 	addi	r2,gp,-25652
        }
        return rval;
      }
      else
      {
        ALT_ERRNO = EACCES;
    db28:	00c00344 	movi	r3,13
    db2c:	10c00015 	stw	r3,0(r2)
    }
  else
  {
    ALT_ERRNO = EBADFD;
  }
  return -1;
    db30:	00bfffc4 	movi	r2,-1
    db34:	00000806 	br	db58 <read+0x10c>
    db38:	d0a00d17 	ldw	r2,-32716(gp)
    db3c:	10000226 	beq	r2,zero,db48 <read+0xfc>
    db40:	103ee83a 	callr	r2
    db44:	00000106 	br	db4c <read+0x100>
    db48:	d0a6f304 	addi	r2,gp,-25652
        ALT_ERRNO = EACCES;
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    db4c:	00c01444 	movi	r3,81
    db50:	10c00015 	stw	r3,0(r2)
  }
  return -1;
    db54:	00bfffc4 	movi	r2,-1
}
    db58:	dfc00417 	ldw	ra,16(sp)
    db5c:	dcc00317 	ldw	r19,12(sp)
    db60:	dc800217 	ldw	r18,8(sp)
    db64:	dc400117 	ldw	r17,4(sp)
    db68:	dc000017 	ldw	r16,0(sp)
    db6c:	dec00504 	addi	sp,sp,20
    db70:	f800283a 	ret

0000db74 <alt_release_fd>:
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  if (fd > 2)
    db74:	00800084 	movi	r2,2
    db78:	1100140e 	bge	r2,r4,dbcc <alt_release_fd+0x58>
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    db7c:	defffd04 	addi	sp,sp,-12
    db80:	dfc00215 	stw	ra,8(sp)
    db84:	dc400115 	stw	r17,4(sp)
    db88:	dc000015 	stw	r16,0(sp)
    db8c:	2021883a 	mov	r16,r4
  if (fd > 2)
  {
    alt_fd_list[fd].fd_flags = 0;
    db90:	04400074 	movhi	r17,1
    db94:	8c7e3604 	addi	r17,r17,-1832
    db98:	01400304 	movi	r5,12
    db9c:	000ab6c0 	call	ab6c <__mulsi3>
    dba0:	8885883a 	add	r2,r17,r2
    dba4:	10000215 	stw	zero,8(r2)
    alt_fd_list[fd].dev      = 0;
    dba8:	01400304 	movi	r5,12
    dbac:	8009883a 	mov	r4,r16
    dbb0:	000ab6c0 	call	ab6c <__mulsi3>
    dbb4:	8885883a 	add	r2,r17,r2
    dbb8:	10000015 	stw	zero,0(r2)
  }
}
    dbbc:	dfc00217 	ldw	ra,8(sp)
    dbc0:	dc400117 	ldw	r17,4(sp)
    dbc4:	dc000017 	ldw	r16,0(sp)
    dbc8:	dec00304 	addi	sp,sp,12
    dbcc:	f800283a 	ret

0000dbd0 <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dbd0:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dbd4:	00bfff84 	movi	r2,-2
    dbd8:	2884703a 	and	r2,r5,r2
    dbdc:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    dbe0:	d0a00f17 	ldw	r2,-32708(gp)
    dbe4:	108000c4 	addi	r2,r2,3
    dbe8:	00ffff04 	movi	r3,-4
    dbec:	10c4703a 	and	r2,r2,r3
    dbf0:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    dbf4:	1109883a 	add	r4,r2,r4
    dbf8:	00c000f4 	movhi	r3,3
    dbfc:	18c35004 	addi	r3,r3,3392
    dc00:	1900032e 	bgeu	r3,r4,dc10 <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dc04:	2801703a 	wrctl	status,r5
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    dc08:	00bfffc4 	movi	r2,-1
    dc0c:	f800283a 	ret
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
    dc10:	d1200f15 	stw	r4,-32708(gp)
    dc14:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
    dc18:	f800283a 	ret

0000dc1c <alt_alarm_stop>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dc1c:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dc20:	00bfff84 	movi	r2,-2
    dc24:	1884703a 	and	r2,r3,r2
    dc28:	1001703a 	wrctl	status,r2
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    dc2c:	20800017 	ldw	r2,0(r4)
    dc30:	21400117 	ldw	r5,4(r4)
    dc34:	11400115 	stw	r5,4(r2)
  entry->previous->next = entry->next;
    dc38:	20800117 	ldw	r2,4(r4)
    dc3c:	21400017 	ldw	r5,0(r4)
    dc40:	11400015 	stw	r5,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    dc44:	21000115 	stw	r4,4(r4)
  entry->next     = entry;
    dc48:	21000015 	stw	r4,0(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dc4c:	1801703a 	wrctl	status,r3
    dc50:	f800283a 	ret

0000dc54 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    dc54:	defffb04 	addi	sp,sp,-20
    dc58:	dfc00415 	stw	ra,16(sp)
    dc5c:	dcc00315 	stw	r19,12(sp)
    dc60:	dc800215 	stw	r18,8(sp)
    dc64:	dc400115 	stw	r17,4(sp)
    dc68:	dc000015 	stw	r16,0(sp)
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    dc6c:	d0e01004 	addi	r3,gp,-32704
    dc70:	1c000017 	ldw	r16,0(r3)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    dc74:	d0a6f817 	ldw	r2,-25632(gp)
    dc78:	10800044 	addi	r2,r2,1
    dc7c:	d0a6f815 	stw	r2,-25632(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dc80:	80c02026 	beq	r16,r3,dd04 <alt_tick+0xb0>
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
        {
          alarm->rollover = 1;
    dc84:	04c00044 	movi	r19,1

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dc88:	1825883a 	mov	r18,r3
  {
    next = (alt_alarm*) alarm->llist.next;
    dc8c:	84400017 	ldw	r17,0(r16)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    dc90:	80800403 	ldbu	r2,16(r16)
    dc94:	10001526 	beq	r2,zero,dcec <alt_tick+0x98>
    dc98:	d0a6f817 	ldw	r2,-25632(gp)
    dc9c:	1000171e 	bne	r2,zero,dcfc <alt_tick+0xa8>
    {
      alarm->rollover = 0;
    dca0:	80000405 	stb	zero,16(r16)
    dca4:	00001106 	br	dcec <alt_tick+0x98>

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
      {
        alt_alarm_stop (alarm);
    dca8:	8009883a 	mov	r4,r16
    dcac:	000dc1c0 	call	dc1c <alt_alarm_stop>
    dcb0:	00000606 	br	dccc <alt_tick+0x78>
      }
      else
      {
        alarm->time += next_callback;
    dcb4:	80c00217 	ldw	r3,8(r16)
    dcb8:	10c5883a 	add	r2,r2,r3
    dcbc:	80800215 	stw	r2,8(r16)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    dcc0:	d0e6f817 	ldw	r3,-25632(gp)
    dcc4:	10c0012e 	bgeu	r2,r3,dccc <alt_tick+0x78>
        {
          alarm->rollover = 1;
    dcc8:	84c00405 	stb	r19,16(r16)
    dccc:	8821883a 	mov	r16,r17

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dcd0:	8cbfee1e 	bne	r17,r18,dc8c <__alt_data_end+0xfffdcf4c>
    dcd4:	00000b06 	br	dd04 <alt_tick+0xb0>
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    {
      next_callback = alarm->callback (alarm->context);
    dcd8:	80800317 	ldw	r2,12(r16)
    dcdc:	81000517 	ldw	r4,20(r16)
    dce0:	103ee83a 	callr	r2

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    dce4:	103ff31e 	bne	r2,zero,dcb4 <__alt_data_end+0xfffdcf74>
    dce8:	003fef06 	br	dca8 <__alt_data_end+0xfffdcf68>
    {
      alarm->rollover = 0;
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    dcec:	d0e6f817 	ldw	r3,-25632(gp)
    dcf0:	80800217 	ldw	r2,8(r16)
    dcf4:	18bff536 	bltu	r3,r2,dccc <__alt_data_end+0xfffdcf8c>
    dcf8:	003ff706 	br	dcd8 <__alt_data_end+0xfffdcf98>
    dcfc:	d0a6f817 	ldw	r2,-25632(gp)
    dd00:	003ff206 	br	dccc <__alt_data_end+0xfffdcf8c>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
    dd04:	dfc00417 	ldw	ra,16(sp)
    dd08:	dcc00317 	ldw	r19,12(sp)
    dd0c:	dc800217 	ldw	r18,8(sp)
    dd10:	dc400117 	ldw	r17,4(sp)
    dd14:	dc000017 	ldw	r16,0(sp)
    dd18:	dec00504 	addi	sp,sp,20
    dd1c:	f800283a 	ret

0000dd20 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    dd20:	defffb04 	addi	sp,sp,-20
    dd24:	dfc00415 	stw	ra,16(sp)
    dd28:	dcc00315 	stw	r19,12(sp)
    dd2c:	dc800215 	stw	r18,8(sp)
    dd30:	dc400115 	stw	r17,4(sp)
    dd34:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dd38:	20003316 	blt	r4,zero,de08 <write+0xe8>
    dd3c:	2021883a 	mov	r16,r4
    dd40:	2825883a 	mov	r18,r5
    dd44:	3027883a 	mov	r19,r6
    dd48:	01400304 	movi	r5,12
    dd4c:	000ab6c0 	call	ab6c <__mulsi3>
    dd50:	04400074 	movhi	r17,1
    dd54:	8c7e3604 	addi	r17,r17,-1832
    dd58:	1463883a 	add	r17,r2,r17
  
  if (fd)
    dd5c:	88002a26 	beq	r17,zero,de08 <write+0xe8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dd60:	01400304 	movi	r5,12
    dd64:	8009883a 	mov	r4,r16
    dd68:	000ab6c0 	call	ab6c <__mulsi3>
    dd6c:	00c00074 	movhi	r3,1
    dd70:	18fe3804 	addi	r3,r3,-1824
    dd74:	10c5883a 	add	r2,r2,r3
    dd78:	10800017 	ldw	r2,0(r2)
    dd7c:	108000cc 	andi	r2,r2,3
    dd80:	10001826 	beq	r2,zero,dde4 <write+0xc4>
    dd84:	01400304 	movi	r5,12
    dd88:	8009883a 	mov	r4,r16
    dd8c:	000ab6c0 	call	ab6c <__mulsi3>
    dd90:	00c00074 	movhi	r3,1
    dd94:	18fe3604 	addi	r3,r3,-1832
    dd98:	1885883a 	add	r2,r3,r2
    dd9c:	10800017 	ldw	r2,0(r2)
    dda0:	10800617 	ldw	r2,24(r2)
    dda4:	10000f26 	beq	r2,zero,dde4 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dda8:	980d883a 	mov	r6,r19
    ddac:	900b883a 	mov	r5,r18
    ddb0:	8809883a 	mov	r4,r17
    ddb4:	103ee83a 	callr	r2
    ddb8:	1021883a 	mov	r16,r2
    ddbc:	10001a0e 	bge	r2,zero,de28 <write+0x108>
    ddc0:	d0a00d17 	ldw	r2,-32716(gp)
    ddc4:	10000226 	beq	r2,zero,ddd0 <write+0xb0>
    ddc8:	103ee83a 	callr	r2
    ddcc:	00000106 	br	ddd4 <write+0xb4>
    ddd0:	d0a6f304 	addi	r2,gp,-25652
      {
        ALT_ERRNO = -rval;
    ddd4:	0421c83a 	sub	r16,zero,r16
    ddd8:	14000015 	stw	r16,0(r2)
        return -1;
    dddc:	00bfffc4 	movi	r2,-1
    dde0:	00001106 	br	de28 <write+0x108>
    dde4:	d0a00d17 	ldw	r2,-32716(gp)
    dde8:	10000226 	beq	r2,zero,ddf4 <write+0xd4>
    ddec:	103ee83a 	callr	r2
    ddf0:	00000106 	br	ddf8 <write+0xd8>
    ddf4:	d0a6f304 	addi	r2,gp,-25652
      }
      return rval;
    }
    else
    {
      ALT_ERRNO = EACCES;
    ddf8:	00c00344 	movi	r3,13
    ddfc:	10c00015 	stw	r3,0(r2)
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  }
  return -1;
    de00:	00bfffc4 	movi	r2,-1
    de04:	00000806 	br	de28 <write+0x108>
    de08:	d0a00d17 	ldw	r2,-32716(gp)
    de0c:	10000226 	beq	r2,zero,de18 <write+0xf8>
    de10:	103ee83a 	callr	r2
    de14:	00000106 	br	de1c <write+0xfc>
    de18:	d0a6f304 	addi	r2,gp,-25652
      ALT_ERRNO = EACCES;
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    de1c:	00c01444 	movi	r3,81
    de20:	10c00015 	stw	r3,0(r2)
  }
  return -1;
    de24:	00bfffc4 	movi	r2,-1
}
    de28:	dfc00417 	ldw	ra,16(sp)
    de2c:	dcc00317 	ldw	r19,12(sp)
    de30:	dc800217 	ldw	r18,8(sp)
    de34:	dc400117 	ldw	r17,4(sp)
    de38:	dc000017 	ldw	r16,0(sp)
    de3c:	dec00504 	addi	sp,sp,20
    de40:	f800283a 	ret

0000de44 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    de44:	deffff04 	addi	sp,sp,-4
    de48:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    de4c:	000e8a00 	call	e8a0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    de50:	00800044 	movi	r2,1
    de54:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    de58:	dfc00017 	ldw	ra,0(sp)
    de5c:	dec00104 	addi	sp,sp,4
    de60:	f800283a 	ret

0000de64 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    de64:	defffd04 	addi	sp,sp,-12
    de68:	dfc00215 	stw	ra,8(sp)
    de6c:	dc400115 	stw	r17,4(sp)
    de70:	dc000015 	stw	r16,0(sp)
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    de74:	01c0fa04 	movi	r7,1000
    de78:	01800044 	movi	r6,1
    de7c:	000b883a 	mov	r5,zero
    de80:	01000134 	movhi	r4,4
    de84:	21040004 	addi	r4,r4,4096
    de88:	000e5180 	call	e518 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    de8c:	04400074 	movhi	r17,1
    de90:	8c7eb604 	addi	r17,r17,-1320
    de94:	000d883a 	mov	r6,zero
    de98:	000b883a 	mov	r5,zero
    de9c:	8809883a 	mov	r4,r17
    dea0:	000e0b40 	call	e0b4 <altera_avalon_jtag_uart_init>

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    dea4:	d4200904 	addi	r16,gp,-32732
    dea8:	800b883a 	mov	r5,r16
    deac:	893ff604 	addi	r4,r17,-40
    deb0:	000e5580 	call	e558 <alt_dev_llist_insert>
    deb4:	800b883a 	mov	r5,r16
    deb8:	01000074 	movhi	r4,1
    debc:	213ea004 	addi	r4,r4,-1408
    dec0:	000e5580 	call	e558 <alt_dev_llist_insert>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_0, audio_0);
}
    dec4:	dfc00217 	ldw	ra,8(sp)
    dec8:	dc400117 	ldw	r17,4(sp)
    decc:	dc000017 	ldw	r16,0(sp)
    ded0:	dec00304 	addi	sp,sp,12
    ded4:	f800283a 	ret

0000ded8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    ded8:	deffff04 	addi	sp,sp,-4
    dedc:	dfc00015 	stw	ra,0(sp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    dee0:	20800017 	ldw	r2,0(r4)
    dee4:	21c00217 	ldw	r7,8(r4)
    dee8:	11000a04 	addi	r4,r2,40
    deec:	000e1e80 	call	e1e8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    def0:	dfc00017 	ldw	ra,0(sp)
    def4:	dec00104 	addi	sp,sp,4
    def8:	f800283a 	ret

0000defc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    defc:	deffff04 	addi	sp,sp,-4
    df00:	dfc00015 	stw	ra,0(sp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    df04:	20800017 	ldw	r2,0(r4)
    df08:	21c00217 	ldw	r7,8(r4)
    df0c:	11000a04 	addi	r4,r2,40
    df10:	000e3400 	call	e340 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    df14:	dfc00017 	ldw	ra,0(sp)
    df18:	dec00104 	addi	sp,sp,4
    df1c:	f800283a 	ret

0000df20 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    df20:	deffff04 	addi	sp,sp,-4
    df24:	dfc00015 	stw	ra,0(sp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    df28:	20800017 	ldw	r2,0(r4)
    df2c:	21400217 	ldw	r5,8(r4)
    df30:	11000a04 	addi	r4,r2,40
    df34:	000e1240 	call	e124 <altera_avalon_jtag_uart_close>
}
    df38:	dfc00017 	ldw	ra,0(sp)
    df3c:	dec00104 	addi	sp,sp,4
    df40:	f800283a 	ret

0000df44 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    df44:	deffff04 	addi	sp,sp,-4
    df48:	dfc00015 	stw	ra,0(sp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    df4c:	21000017 	ldw	r4,0(r4)
    df50:	21000a04 	addi	r4,r4,40
    df54:	000e1600 	call	e160 <altera_avalon_jtag_uart_ioctl>
}
    df58:	dfc00017 	ldw	ra,0(sp)
    df5c:	dec00104 	addi	sp,sp,4
    df60:	f800283a 	ret

0000df64 <altera_avalon_jtag_uart_timeout>:
static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    df64:	20800017 	ldw	r2,0(r4)
    df68:	10800137 	ldwio	r2,4(r2)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    df6c:	1081000c 	andi	r2,r2,1024
    df70:	10000626 	beq	r2,zero,df8c <altera_avalon_jtag_uart_timeout+0x28>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    df74:	20c00017 	ldw	r3,0(r4)
    df78:	20800817 	ldw	r2,32(r4)
    df7c:	10810014 	ori	r2,r2,1024
    df80:	18800135 	stwio	r2,4(r3)
    sp->host_inactive = 0;
    df84:	20000915 	stw	zero,36(r4)
    df88:	00000606 	br	dfa4 <altera_avalon_jtag_uart_timeout+0x40>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    df8c:	20800917 	ldw	r2,36(r4)
    df90:	00e00034 	movhi	r3,32768
    df94:	18ffff04 	addi	r3,r3,-4
    df98:	18800236 	bltu	r3,r2,dfa4 <altera_avalon_jtag_uart_timeout+0x40>
    sp->host_inactive++;
    df9c:	10800044 	addi	r2,r2,1
    dfa0:	20800915 	stw	r2,36(r4)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    dfa4:	d0a6f917 	ldw	r2,-25628(gp)
    dfa8:	f800283a 	ret

0000dfac <altera_avalon_jtag_uart_irq>:
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  unsigned int base = sp->base;
    dfac:	21800017 	ldw	r6,0(r4)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dfb0:	32000104 	addi	r8,r6,4
      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dfb4:	02bfff84 	movi	r10,-2
      }

      if (space > 0)
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    dfb8:	02ffff44 	movi	r11,-3
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dfbc:	4013883a 	mov	r9,r8
    dfc0:	41c00037 	ldwio	r7,0(r8)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    dfc4:	3880c00c 	andi	r2,r7,768
    dfc8:	10003926 	beq	r2,zero,e0b0 <altera_avalon_jtag_uart_irq+0x104>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dfcc:	3880400c 	andi	r2,r7,256
    dfd0:	10001c26 	beq	r2,zero,e044 <altera_avalon_jtag_uart_irq+0x98>
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dfd4:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    dfd8:	10800044 	addi	r2,r2,1
    dfdc:	1081ffcc 	andi	r2,r2,2047
    dfe0:	20c00b17 	ldw	r3,44(r4)
    dfe4:	10c01226 	beq	r2,r3,e030 <altera_avalon_jtag_uart_irq+0x84>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    dfe8:	30800037 	ldwio	r2,0(r6)
    dfec:	100b883a 	mov	r5,r2
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    dff0:	10e0000c 	andi	r3,r2,32768
    dff4:	18000c26 	beq	r3,zero,e028 <altera_avalon_jtag_uart_irq+0x7c>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    dff8:	20c00a17 	ldw	r3,40(r4)
    dffc:	20c7883a 	add	r3,r4,r3
    e000:	18800e05 	stb	r2,56(r3)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e004:	20800a17 	ldw	r2,40(r4)
    e008:	10800044 	addi	r2,r2,1
    e00c:	1081ffcc 	andi	r2,r2,2047
    e010:	20800a15 	stw	r2,40(r4)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e014:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e018:	10800044 	addi	r2,r2,1
    e01c:	1081ffcc 	andi	r2,r2,2047
    e020:	20c00b17 	ldw	r3,44(r4)
    e024:	10fff01e 	bne	r2,r3,dfe8 <__alt_data_end+0xfffdd2a8>

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e028:	297fffec 	andhi	r5,r5,65535
    e02c:	28000526 	beq	r5,zero,e044 <altera_avalon_jtag_uart_irq+0x98>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e030:	20800817 	ldw	r2,32(r4)
    e034:	1284703a 	and	r2,r2,r10
    e038:	20800815 	stw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e03c:	40800035 	stwio	r2,0(r8)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e040:	40800037 	ldwio	r2,0(r8)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e044:	3880800c 	andi	r2,r7,512
    e048:	103fdc26 	beq	r2,zero,dfbc <__alt_data_end+0xfffdd27c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e04c:	380ed43a 	srli	r7,r7,16

      while (space > 0 && sp->tx_out != sp->tx_in)
    e050:	383fda26 	beq	r7,zero,dfbc <__alt_data_end+0xfffdd27c>
    e054:	20c00d17 	ldw	r3,52(r4)
    e058:	20800c17 	ldw	r2,48(r4)
    e05c:	18800d26 	beq	r3,r2,e094 <altera_avalon_jtag_uart_irq+0xe8>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e060:	20800d17 	ldw	r2,52(r4)
    e064:	2085883a 	add	r2,r4,r2
    e068:	10820e07 	ldb	r2,2104(r2)
    e06c:	30800035 	stwio	r2,0(r6)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e070:	20800d17 	ldw	r2,52(r4)
    e074:	10800044 	addi	r2,r2,1
    e078:	1081ffcc 	andi	r2,r2,2047
    e07c:	20800d15 	stw	r2,52(r4)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e080:	39ffffc4 	addi	r7,r7,-1
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e084:	383fcd26 	beq	r7,zero,dfbc <__alt_data_end+0xfffdd27c>
    e088:	20c00d17 	ldw	r3,52(r4)
    e08c:	20800c17 	ldw	r2,48(r4)
    e090:	18bff31e 	bne	r3,r2,e060 <__alt_data_end+0xfffdd320>
      }

      if (space > 0)
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e094:	20800817 	ldw	r2,32(r4)
    e098:	12c4703a 	and	r2,r2,r11
    e09c:	20800815 	stw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e0a0:	20c00017 	ldw	r3,0(r4)
    e0a4:	18800135 	stwio	r2,4(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e0a8:	48800037 	ldwio	r2,0(r9)
    e0ac:	003fc306 	br	dfbc <__alt_data_end+0xfffdd27c>
    e0b0:	f800283a 	ret

0000e0b4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e0b4:	defffe04 	addi	sp,sp,-8
    e0b8:	dfc00115 	stw	ra,4(sp)
    e0bc:	dc000015 	stw	r16,0(sp)
    e0c0:	2021883a 	mov	r16,r4
    e0c4:	3009883a 	mov	r4,r6
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e0c8:	00800044 	movi	r2,1
    e0cc:	80800815 	stw	r2,32(r16)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e0d0:	80c00017 	ldw	r3,0(r16)
    e0d4:	18800135 	stwio	r2,4(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
    e0d8:	01800074 	movhi	r6,1
    e0dc:	31b7eb04 	addi	r6,r6,-8276
    e0e0:	800b883a 	mov	r5,r16
    e0e4:	000d64c0 	call	d64c <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e0e8:	80000915 	stw	zero,36(r16)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e0ec:	800f883a 	mov	r7,r16
    e0f0:	01800074 	movhi	r6,1
    e0f4:	31b7d904 	addi	r6,r6,-8348
    e0f8:	d166f917 	ldw	r5,-25628(gp)
    e0fc:	81000204 	addi	r4,r16,8
    e100:	000d4380 	call	d438 <alt_alarm_start>
    e104:	1000030e 	bge	r2,zero,e114 <altera_avalon_jtag_uart_init+0x60>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e108:	00a00034 	movhi	r2,32768
    e10c:	10bfffc4 	addi	r2,r2,-1
    e110:	80800115 	stw	r2,4(r16)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e114:	dfc00117 	ldw	ra,4(sp)
    e118:	dc000017 	ldw	r16,0(sp)
    e11c:	dec00204 	addi	sp,sp,8
    e120:	f800283a 	ret

0000e124 <altera_avalon_jtag_uart_close>:
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e124:	21800c17 	ldw	r6,48(r4)
    if (flags & O_NONBLOCK) {
    e128:	2950000c 	andi	r5,r5,16384
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e12c:	00000106 	br	e134 <altera_avalon_jtag_uart_close+0x10>
    if (flags & O_NONBLOCK) {
    e130:	2800071e 	bne	r5,zero,e150 <altera_avalon_jtag_uart_close+0x2c>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e134:	20800d17 	ldw	r2,52(r4)
    e138:	11800726 	beq	r2,r6,e158 <altera_avalon_jtag_uart_close+0x34>
    e13c:	20c00917 	ldw	r3,36(r4)
    e140:	20800117 	ldw	r2,4(r4)
    e144:	18bffa36 	bltu	r3,r2,e130 <__alt_data_end+0xfffdd3f0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e148:	0005883a 	mov	r2,zero
    e14c:	f800283a 	ret
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    e150:	00bffd44 	movi	r2,-11
    e154:	f800283a 	ret
    }
  }

  return 0;
    e158:	0005883a 	mov	r2,zero
}
    e15c:	f800283a 	ret

0000e160 <altera_avalon_jtag_uart_ioctl>:
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  int rc = -ENOTTY;

  switch (req)
    e160:	009a8044 	movi	r2,27137
    e164:	28800326 	beq	r5,r2,e174 <altera_avalon_jtag_uart_ioctl+0x14>
    e168:	009a8084 	movi	r2,27138
    e16c:	28800f26 	beq	r5,r2,e1ac <altera_avalon_jtag_uart_ioctl+0x4c>
    e170:	00001706 	br	e1d0 <altera_avalon_jtag_uart_ioctl+0x70>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e174:	20c00117 	ldw	r3,4(r4)
    e178:	00a00034 	movhi	r2,32768
    e17c:	10bfffc4 	addi	r2,r2,-1
    e180:	18801526 	beq	r3,r2,e1d8 <altera_avalon_jtag_uart_ioctl+0x78>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e184:	30800017 	ldw	r2,0(r6)
    e188:	10ffff84 	addi	r3,r2,-2
    e18c:	01600034 	movhi	r5,32768
    e190:	297fff04 	addi	r5,r5,-4
    e194:	28c0022e 	bgeu	r5,r3,e1a0 <altera_avalon_jtag_uart_ioctl+0x40>
    e198:	00a00034 	movhi	r2,32768
    e19c:	10bfff84 	addi	r2,r2,-2
    e1a0:	20800115 	stw	r2,4(r4)
      rc = 0;
    e1a4:	0005883a 	mov	r2,zero
    e1a8:	f800283a 	ret
    }
    break;

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e1ac:	20c00117 	ldw	r3,4(r4)
    e1b0:	00a00034 	movhi	r2,32768
    e1b4:	10bfffc4 	addi	r2,r2,-1
    e1b8:	18800926 	beq	r3,r2,e1e0 <altera_avalon_jtag_uart_ioctl+0x80>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e1bc:	20800917 	ldw	r2,36(r4)
    e1c0:	10c5803a 	cmpltu	r2,r2,r3
    e1c4:	30800015 	stw	r2,0(r6)
      rc = 0;
    e1c8:	0005883a 	mov	r2,zero
    e1cc:	f800283a 	ret

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  int rc = -ENOTTY;
    e1d0:	00bff9c4 	movi	r2,-25
    e1d4:	f800283a 	ret
    e1d8:	00bff9c4 	movi	r2,-25
    e1dc:	f800283a 	ret
    e1e0:	00bff9c4 	movi	r2,-25
  default:
    break;
  }

  return rc;
}
    e1e4:	f800283a 	ret

0000e1e8 <altera_avalon_jtag_uart_read>:
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e1e8:	0180450e 	bge	zero,r6,e300 <altera_avalon_jtag_uart_read+0x118>
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e1ec:	defff504 	addi	sp,sp,-44
    e1f0:	dfc00a15 	stw	ra,40(sp)
    e1f4:	df000915 	stw	fp,36(sp)
    e1f8:	ddc00815 	stw	r23,32(sp)
    e1fc:	dd800715 	stw	r22,28(sp)
    e200:	dd400615 	stw	r21,24(sp)
    e204:	dd000515 	stw	r20,20(sp)
    e208:	dcc00415 	stw	r19,16(sp)
    e20c:	dc800315 	stw	r18,12(sp)
    e210:	dc400215 	stw	r17,8(sp)
    e214:	dc000115 	stw	r16,4(sp)
    e218:	2023883a 	mov	r17,r4
    e21c:	2839883a 	mov	fp,r5
      out = sp->rx_out;

      if (in >= out)
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e220:	05c20004 	movi	r23,2048
        break; /* No more data available */

      if (n > space)
        n = space;

      memcpy(ptr, sp->rx_buf + out, n);
    e224:	25800e04 	addi	r22,r4,56
    /* If we read any data then return it */
    if (ptr != buffer)
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e228:	39d0000c 	andi	r7,r7,16384
    e22c:	d9c00015 	stw	r7,0(sp)
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e230:	e029883a 	mov	r20,fp
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e234:	8cc00a17 	ldw	r19,40(r17)
      out = sp->rx_out;
    e238:	8c800b17 	ldw	r18,44(r17)

      if (in >= out)
    e23c:	9c800236 	bltu	r19,r18,e248 <altera_avalon_jtag_uart_read+0x60>
        n = in - out;
    e240:	9ca1c83a 	sub	r16,r19,r18
    e244:	00000106 	br	e24c <altera_avalon_jtag_uart_read+0x64>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e248:	bca1c83a 	sub	r16,r23,r18

      if (n == 0)
    e24c:	80000d26 	beq	r16,zero,e284 <altera_avalon_jtag_uart_read+0x9c>
        break; /* No more data available */

      if (n > space)
    e250:	302b883a 	mov	r21,r6
    e254:	3400012e 	bgeu	r6,r16,e25c <altera_avalon_jtag_uart_read+0x74>
    e258:	3021883a 	mov	r16,r6
        n = space;

      memcpy(ptr, sp->rx_buf + out, n);
    e25c:	800d883a 	mov	r6,r16
    e260:	b48b883a 	add	r5,r22,r18
    e264:	a009883a 	mov	r4,r20
    e268:	0005d400 	call	5d40 <memcpy>
      ptr   += n;
    e26c:	a429883a 	add	r20,r20,r16
      space -= n;
    e270:	ac0dc83a 	sub	r6,r21,r16

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e274:	9421883a 	add	r16,r18,r16
    e278:	8401ffcc 	andi	r16,r16,2047
    e27c:	8c000b15 	stw	r16,44(r17)
    }
    while (space > 0);
    e280:	01bfec16 	blt	zero,r6,e234 <__alt_data_end+0xfffdd4f4>

    /* If we read any data then return it */
    if (ptr != buffer)
    e284:	a700121e 	bne	r20,fp,e2d0 <altera_avalon_jtag_uart_read+0xe8>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e288:	d8800017 	ldw	r2,0(sp)
    e28c:	10000a1e 	bne	r2,zero,e2b8 <altera_avalon_jtag_uart_read+0xd0>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e290:	88800a17 	ldw	r2,40(r17)
    e294:	9880031e 	bne	r19,r2,e2a4 <altera_avalon_jtag_uart_read+0xbc>
    e298:	88c00917 	ldw	r3,36(r17)
    e29c:	88800117 	ldw	r2,4(r17)
    e2a0:	18bffb36 	bltu	r3,r2,e290 <__alt_data_end+0xfffdd550>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e2a4:	88800a17 	ldw	r2,40(r17)
    e2a8:	98800526 	beq	r19,r2,e2c0 <altera_avalon_jtag_uart_read+0xd8>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e2ac:	01bfe016 	blt	zero,r6,e230 <__alt_data_end+0xfffdd4f0>
  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
  else
    return -EIO;
    e2b0:	00bffec4 	movi	r2,-5
    e2b4:	00001606 	br	e310 <altera_avalon_jtag_uart_read+0x128>
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
    e2b8:	00bffd44 	movi	r2,-11
    e2bc:	00001406 	br	e310 <altera_avalon_jtag_uart_read+0x128>
  else
    return -EIO;
    e2c0:	00bffec4 	movi	r2,-5
    e2c4:	00001206 	br	e310 <altera_avalon_jtag_uart_read+0x128>
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
    e2c8:	00bffd44 	movi	r2,-11
    e2cc:	f800283a 	ret
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e2d0:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e2d4:	00bfff84 	movi	r2,-2
    e2d8:	1884703a 	and	r2,r3,r2
    e2dc:	1001703a 	wrctl	status,r2

  if (ptr != buffer)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e2e0:	88800817 	ldw	r2,32(r17)
    e2e4:	10800054 	ori	r2,r2,1
    e2e8:	88800815 	stw	r2,32(r17)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e2ec:	89000017 	ldw	r4,0(r17)
    e2f0:	20800135 	stwio	r2,4(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e2f4:	1801703a 	wrctl	status,r3
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    return ptr - buffer;
    e2f8:	a705c83a 	sub	r2,r20,fp
    e2fc:	00000406 	br	e310 <altera_avalon_jtag_uart_read+0x128>
  else if (flags & O_NONBLOCK)
    e300:	39d0000c 	andi	r7,r7,16384
    e304:	383ff01e 	bne	r7,zero,e2c8 <__alt_data_end+0xfffdd588>
    return -EWOULDBLOCK;
  else
    return -EIO;
    e308:	00bffec4 	movi	r2,-5
    e30c:	f800283a 	ret
}
    e310:	dfc00a17 	ldw	ra,40(sp)
    e314:	df000917 	ldw	fp,36(sp)
    e318:	ddc00817 	ldw	r23,32(sp)
    e31c:	dd800717 	ldw	r22,28(sp)
    e320:	dd400617 	ldw	r21,24(sp)
    e324:	dd000517 	ldw	r20,20(sp)
    e328:	dcc00417 	ldw	r19,16(sp)
    e32c:	dc800317 	ldw	r18,12(sp)
    e330:	dc400217 	ldw	r17,8(sp)
    e334:	dc000117 	ldw	r16,4(sp)
    e338:	dec00b04 	addi	sp,sp,44
    e33c:	f800283a 	ret

0000e340 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e340:	defff504 	addi	sp,sp,-44
    e344:	dfc00a15 	stw	ra,40(sp)
    e348:	df000915 	stw	fp,36(sp)
    e34c:	ddc00815 	stw	r23,32(sp)
    e350:	dd800715 	stw	r22,28(sp)
    e354:	dd400615 	stw	r21,24(sp)
    e358:	dd000515 	stw	r20,20(sp)
    e35c:	dcc00415 	stw	r19,16(sp)
    e360:	dc800315 	stw	r18,12(sp)
    e364:	dc400215 	stw	r17,8(sp)
    e368:	dc000115 	stw	r16,4(sp)
    e36c:	2021883a 	mov	r16,r4
    e370:	282f883a 	mov	r23,r5
    e374:	d9c00015 	stw	r7,0(sp)
    e378:	2827883a 	mov	r19,r5
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e37c:	05bfff84 	movi	r22,-2
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
    e380:	3d50000c 	andi	r21,r7,16384
        break;

      if (n > count)
        n = count;

      memcpy(sp->tx_buf + in, ptr, n);
    e384:	27020e04 	addi	fp,r4,2104
    e388:	00001906 	br	e3f0 <altera_avalon_jtag_uart_write+0xb0>
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e38c:	84800c17 	ldw	r18,48(r16)
      out = sp->tx_out;
    e390:	81000d17 	ldw	r4,52(r16)

      if (in < out)
    e394:	9100032e 	bgeu	r18,r4,e3a4 <altera_avalon_jtag_uart_write+0x64>
        n = out - 1 - in;
    e398:	247fffc4 	addi	r17,r4,-1
    e39c:	8ca3c83a 	sub	r17,r17,r18
    e3a0:	00000606 	br	e3bc <altera_avalon_jtag_uart_write+0x7c>
      else if (out > 0)
    e3a4:	20000326 	beq	r4,zero,e3b4 <altera_avalon_jtag_uart_write+0x74>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e3a8:	00820004 	movi	r2,2048
    e3ac:	14a3c83a 	sub	r17,r2,r18
    e3b0:	00000206 	br	e3bc <altera_avalon_jtag_uart_write+0x7c>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e3b4:	00c1ffc4 	movi	r3,2047
    e3b8:	1ca3c83a 	sub	r17,r3,r18

      if (n == 0)
    e3bc:	88002b26 	beq	r17,zero,e46c <altera_avalon_jtag_uart_write+0x12c>
        break;

      if (n > count)
    e3c0:	3029883a 	mov	r20,r6
    e3c4:	3440012e 	bgeu	r6,r17,e3cc <altera_avalon_jtag_uart_write+0x8c>
    e3c8:	3023883a 	mov	r17,r6
        n = count;

      memcpy(sp->tx_buf + in, ptr, n);
    e3cc:	880d883a 	mov	r6,r17
    e3d0:	980b883a 	mov	r5,r19
    e3d4:	e489883a 	add	r4,fp,r18
    e3d8:	0005d400 	call	5d40 <memcpy>
      ptr   += n;
    e3dc:	9c67883a 	add	r19,r19,r17
      count -= n;
    e3e0:	a44dc83a 	sub	r6,r20,r17

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e3e4:	9463883a 	add	r17,r18,r17
    e3e8:	8c41ffcc 	andi	r17,r17,2047
    e3ec:	84400c15 	stw	r17,48(r16)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e3f0:	01bfe616 	blt	zero,r6,e38c <__alt_data_end+0xfffdd64c>
    e3f4:	00001106 	br	e43c <altera_avalon_jtag_uart_write+0xfc>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e3f8:	80800d17 	ldw	r2,52(r16)
    e3fc:	2080031e 	bne	r4,r2,e40c <altera_avalon_jtag_uart_write+0xcc>
    e400:	80c00917 	ldw	r3,36(r16)
    e404:	80800117 	ldw	r2,4(r16)
    e408:	18bffb36 	bltu	r3,r2,e3f8 <__alt_data_end+0xfffdd6b8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e40c:	80800917 	ldw	r2,36(r16)
    e410:	103ff726 	beq	r2,zero,e3f0 <__alt_data_end+0xfffdd6b0>
    e414:	00002006 	br	e498 <altera_avalon_jtag_uart_write+0x158>
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    return ptr - start;
    e418:	9dc5c83a 	sub	r2,r19,r23
    e41c:	00002306 	br	e4ac <altera_avalon_jtag_uart_write+0x16c>
  else if (flags & O_NONBLOCK)
    e420:	d8c00017 	ldw	r3,0(sp)
    e424:	1890000c 	andi	r2,r3,16384
    e428:	1000021e 	bne	r2,zero,e434 <altera_avalon_jtag_uart_write+0xf4>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e42c:	00bffec4 	movi	r2,-5
    e430:	00001e06 	br	e4ac <altera_avalon_jtag_uart_write+0x16c>
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    return ptr - start;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
    e434:	00bffd44 	movi	r2,-11
    e438:	00001c06 	br	e4ac <altera_avalon_jtag_uart_write+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e43c:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e440:	00bfff84 	movi	r2,-2
    e444:	1884703a 	and	r2,r3,r2
    e448:	1001703a 	wrctl	status,r2
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e44c:	80800817 	ldw	r2,32(r16)
    e450:	10800094 	ori	r2,r2,2
    e454:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e458:	81000017 	ldw	r4,0(r16)
    e45c:	20800135 	stwio	r2,4(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e460:	1801703a 	wrctl	status,r3
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e464:	9dffec1e 	bne	r19,r23,e418 <__alt_data_end+0xfffdd6d8>
    e468:	003fed06 	br	e420 <__alt_data_end+0xfffdd6e0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e46c:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e470:	1d84703a 	and	r2,r3,r22
    e474:	1001703a 	wrctl	status,r2
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e478:	80800817 	ldw	r2,32(r16)
    e47c:	10800094 	ori	r2,r2,2
    e480:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e484:	81400017 	ldw	r5,0(r16)
    e488:	28800135 	stwio	r2,4(r5)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e48c:	1801703a 	wrctl	status,r3
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
    e490:	a83fd926 	beq	r21,zero,e3f8 <__alt_data_end+0xfffdd6b8>
    e494:	00000306 	br	e4a4 <altera_avalon_jtag_uart_write+0x164>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e498:	9dffdf1e 	bne	r19,r23,e418 <__alt_data_end+0xfffdd6d8>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e49c:	00bffec4 	movi	r2,-5
    e4a0:	00000206 	br	e4ac <altera_avalon_jtag_uart_write+0x16c>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e4a4:	9dffdc1e 	bne	r19,r23,e418 <__alt_data_end+0xfffdd6d8>
    return ptr - start;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
    e4a8:	00bffd44 	movi	r2,-11
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
}
    e4ac:	dfc00a17 	ldw	ra,40(sp)
    e4b0:	df000917 	ldw	fp,36(sp)
    e4b4:	ddc00817 	ldw	r23,32(sp)
    e4b8:	dd800717 	ldw	r22,28(sp)
    e4bc:	dd400617 	ldw	r21,24(sp)
    e4c0:	dd000517 	ldw	r20,20(sp)
    e4c4:	dcc00417 	ldw	r19,16(sp)
    e4c8:	dc800317 	ldw	r18,12(sp)
    e4cc:	dc400217 	ldw	r17,8(sp)
    e4d0:	dc000117 	ldw	r16,4(sp)
    e4d4:	dec00b04 	addi	sp,sp,44
    e4d8:	f800283a 	ret

0000e4dc <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    e4dc:	defffe04 	addi	sp,sp,-8
    e4e0:	dfc00115 	stw	ra,4(sp)
    e4e4:	dc000015 	stw	r16,0(sp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    e4e8:	20000035 	stwio	zero,0(r4)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    e4ec:	20800137 	ldwio	r2,4(r4)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e4f0:	0021303a 	rdctl	r16,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e4f4:	00bfff84 	movi	r2,-2
    e4f8:	8084703a 	and	r2,r16,r2
    e4fc:	1001703a 	wrctl	status,r2
  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  alt_tick ();
    e500:	000dc540 	call	dc54 <alt_tick>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e504:	8001703a 	wrctl	status,r16
  alt_irq_enable_all(cpu_sr);
}
    e508:	dfc00117 	ldw	ra,4(sp)
    e50c:	dc000017 	ldw	r16,0(sp)
    e510:	dec00204 	addi	sp,sp,8
    e514:	f800283a 	ret

0000e518 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    e518:	deffff04 	addi	sp,sp,-4
    e51c:	dfc00015 	stw	ra,0(sp)
    e520:	200b883a 	mov	r5,r4
    e524:	3009883a 	mov	r4,r6
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    e528:	d0a6f917 	ldw	r2,-25628(gp)
    e52c:	1000011e 	bne	r2,zero,e534 <alt_avalon_timer_sc_init+0x1c>
  {
    _alt_tick_rate = nticks;
    e530:	d1e6f915 	stw	r7,-25628(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    e534:	008001c4 	movi	r2,7
    e538:	28800135 	stwio	r2,4(r5)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
    e53c:	01800074 	movhi	r6,1
    e540:	31b93704 	addi	r6,r6,-6948
    e544:	000d64c0 	call	d64c <alt_irq_register>
#endif  
}
    e548:	dfc00017 	ldw	ra,0(sp)
    e54c:	dec00104 	addi	sp,sp,4
    e550:	f800283a 	ret

0000e554 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e554:	f800283a 	ret

0000e558 <alt_dev_llist_insert>:
{
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e558:	20000226 	beq	r4,zero,e564 <alt_dev_llist_insert+0xc>
    e55c:	20800217 	ldw	r2,8(r4)
    e560:	10000f1e 	bne	r2,zero,e5a0 <alt_dev_llist_insert+0x48>
    e564:	d0a00d17 	ldw	r2,-32716(gp)
    e568:	10000426 	beq	r2,zero,e57c <alt_dev_llist_insert+0x24>
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e56c:	deffff04 	addi	sp,sp,-4
    e570:	dfc00015 	stw	ra,0(sp)
    e574:	103ee83a 	callr	r2
    e578:	00000506 	br	e590 <alt_dev_llist_insert+0x38>
    e57c:	d0a6f304 	addi	r2,gp,-25652
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
    e580:	00c00584 	movi	r3,22
    e584:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
    e588:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
    e58c:	f800283a 	ret
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
    e590:	00c00584 	movi	r3,22
    e594:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
    e598:	00bffa84 	movi	r2,-22
    e59c:	00000806 	br	e5c0 <alt_dev_llist_insert+0x68>
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e5a0:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
    e5a4:	28800017 	ldw	r2,0(r5)
    e5a8:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
    e5ac:	28800017 	ldw	r2,0(r5)
    e5b0:	11000115 	stw	r4,4(r2)
  list->next           = entry;
    e5b4:	29000015 	stw	r4,0(r5)
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
    e5b8:	0005883a 	mov	r2,zero
    e5bc:	f800283a 	ret
}
    e5c0:	dfc00017 	ldw	ra,0(sp)
    e5c4:	dec00104 	addi	sp,sp,4
    e5c8:	f800283a 	ret

0000e5cc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e5cc:	f800283a 	ret

0000e5d0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e5d0:	defffc04 	addi	sp,sp,-16
    e5d4:	dfc00315 	stw	ra,12(sp)
    e5d8:	dc800215 	stw	r18,8(sp)
    e5dc:	dc400115 	stw	r17,4(sp)
    e5e0:	dc000015 	stw	r16,0(sp)
    e5e4:	2025883a 	mov	r18,r4
    e5e8:	2809883a 	mov	r4,r5
    e5ec:	300b883a 	mov	r5,r6
  int old;

  old = open (name, flags, mode);
    e5f0:	380d883a 	mov	r6,r7
    e5f4:	000e6e40 	call	e6e4 <open>

  if (old >= 0)
    e5f8:	10000f16 	blt	r2,zero,e638 <alt_open_fd+0x68>
    e5fc:	1021883a 	mov	r16,r2
  {
    fd->dev      = alt_fd_list[old].dev;
    e600:	01400304 	movi	r5,12
    e604:	1009883a 	mov	r4,r2
    e608:	000ab6c0 	call	ab6c <__mulsi3>
    e60c:	04400074 	movhi	r17,1
    e610:	8c7e3604 	addi	r17,r17,-1832
    e614:	88a3883a 	add	r17,r17,r2
    e618:	88800017 	ldw	r2,0(r17)
    e61c:	90800015 	stw	r2,0(r18)
    fd->priv     = alt_fd_list[old].priv;
    e620:	88800117 	ldw	r2,4(r17)
    e624:	90800115 	stw	r2,4(r18)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e628:	88800217 	ldw	r2,8(r17)
    e62c:	90800215 	stw	r2,8(r18)

    alt_release_fd (old);
    e630:	8009883a 	mov	r4,r16
    e634:	000db740 	call	db74 <alt_release_fd>
  }
} 
    e638:	dfc00317 	ldw	ra,12(sp)
    e63c:	dc800217 	ldw	r18,8(sp)
    e640:	dc400117 	ldw	r17,4(sp)
    e644:	dc000017 	ldw	r16,0(sp)
    e648:	dec00404 	addi	sp,sp,16
    e64c:	f800283a 	ret

0000e650 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e650:	defffa04 	addi	sp,sp,-24
    e654:	dfc00515 	stw	ra,20(sp)
    e658:	dd000415 	stw	r20,16(sp)
    e65c:	dcc00315 	stw	r19,12(sp)
    e660:	dc800215 	stw	r18,8(sp)
    e664:	dc400115 	stw	r17,4(sp)
    e668:	dc000015 	stw	r16,0(sp)
    e66c:	2829883a 	mov	r20,r5
    e670:	3027883a 	mov	r19,r6
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e674:	04407fc4 	movi	r17,511
    e678:	04800044 	movi	r18,1
    e67c:	04000074 	movhi	r16,1
    e680:	843e3904 	addi	r16,r16,-1820
    e684:	880f883a 	mov	r7,r17
    e688:	900d883a 	mov	r6,r18
    e68c:	200b883a 	mov	r5,r4
    e690:	8009883a 	mov	r4,r16
    e694:	000e5d00 	call	e5d0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e698:	843ffd04 	addi	r16,r16,-12
    e69c:	880f883a 	mov	r7,r17
    e6a0:	000d883a 	mov	r6,zero
    e6a4:	a00b883a 	mov	r5,r20
    e6a8:	8009883a 	mov	r4,r16
    e6ac:	000e5d00 	call	e5d0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e6b0:	880f883a 	mov	r7,r17
    e6b4:	900d883a 	mov	r6,r18
    e6b8:	980b883a 	mov	r5,r19
    e6bc:	81000604 	addi	r4,r16,24
    e6c0:	000e5d00 	call	e5d0 <alt_open_fd>
}  
    e6c4:	dfc00517 	ldw	ra,20(sp)
    e6c8:	dd000417 	ldw	r20,16(sp)
    e6cc:	dcc00317 	ldw	r19,12(sp)
    e6d0:	dc800217 	ldw	r18,8(sp)
    e6d4:	dc400117 	ldw	r17,4(sp)
    e6d8:	dc000017 	ldw	r16,0(sp)
    e6dc:	dec00604 	addi	sp,sp,24
    e6e0:	f800283a 	ret

0000e6e4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    e6e4:	defff704 	addi	sp,sp,-36
    e6e8:	dfc00815 	stw	ra,32(sp)
    e6ec:	ddc00715 	stw	r23,28(sp)
    e6f0:	dd800615 	stw	r22,24(sp)
    e6f4:	dd400515 	stw	r21,20(sp)
    e6f8:	dd000415 	stw	r20,16(sp)
    e6fc:	dcc00315 	stw	r19,12(sp)
    e700:	dc800215 	stw	r18,8(sp)
    e704:	dc400115 	stw	r17,4(sp)
    e708:	dc000015 	stw	r16,0(sp)
    e70c:	202b883a 	mov	r21,r4
    e710:	2829883a 	mov	r20,r5
    e714:	302d883a 	mov	r22,r6
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    e718:	d1600904 	addi	r5,gp,-32732
    e71c:	000e8a80 	call	e8a8 <alt_find_dev>
    e720:	10003e1e 	bne	r2,zero,e81c <open+0x138>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    e724:	a809883a 	mov	r4,r21
    e728:	000e9240 	call	e924 <alt_find_file>
    e72c:	1023883a 	mov	r17,r2

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    e730:	10004b1e 	bne	r2,zero,e860 <open+0x17c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    e734:	047ffb44 	movi	r17,-19
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    e738:	043fffc4 	movi	r16,-1
    e73c:	00001506 	br	e794 <open+0xb0>
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e740:	11400017 	ldw	r5,0(r2)
    e744:	2980031e 	bne	r5,r6,e754 <open+0x70>
    e748:	21400017 	ldw	r5,0(r4)
    e74c:	2800010e 	bge	r5,zero,e754 <open+0x70>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    e750:	98800f1e 	bne	r19,r2,e790 <open+0xac>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e754:	18c00044 	addi	r3,r3,1
    e758:	10800304 	addi	r2,r2,12
    e75c:	21000304 	addi	r4,r4,12
    e760:	90fff72e 	bgeu	r18,r3,e740 <__alt_data_end+0xfffdda00>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    e764:	88800317 	ldw	r2,12(r17)
    e768:	10001526 	beq	r2,zero,e7c0 <open+0xdc>
    e76c:	b00f883a 	mov	r7,r22
    e770:	a00d883a 	mov	r6,r20
    e774:	a80b883a 	mov	r5,r21
    e778:	9809883a 	mov	r4,r19
    e77c:	103ee83a 	callr	r2
    e780:	1023883a 	mov	r17,r2
    e784:	8005883a 	mov	r2,r16
    status = -ENODEV;
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    e788:	88003a0e 	bge	r17,zero,e874 <open+0x190>
    e78c:	00000106 	br	e794 <open+0xb0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    e790:	047ffcc4 	movi	r17,-13

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  {
    alt_release_fd (index);  
    e794:	8009883a 	mov	r4,r16
    e798:	000db740 	call	db74 <alt_release_fd>
    e79c:	d0a00d17 	ldw	r2,-32716(gp)
    e7a0:	10000226 	beq	r2,zero,e7ac <open+0xc8>
    e7a4:	103ee83a 	callr	r2
    e7a8:	00000106 	br	e7b0 <open+0xcc>
    e7ac:	d0a6f304 	addi	r2,gp,-25652
    ALT_ERRNO = -status;
    e7b0:	0463c83a 	sub	r17,zero,r17
    e7b4:	14400015 	stw	r17,0(r2)
    return -1;
    e7b8:	00bfffc4 	movi	r2,-1
    e7bc:	00002d06 	br	e874 <open+0x190>
    e7c0:	8005883a 	mov	r2,r16
    e7c4:	00002b06 	br	e874 <open+0x190>
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  {
    if ((index = alt_get_fd (dev)) < 0)
    e7c8:	8023883a 	mov	r17,r16
    e7cc:	003ff106 	br	e794 <__alt_data_end+0xfffdda54>
    e7d0:	8023883a 	mov	r17,r16
    e7d4:	003fef06 	br	e794 <__alt_data_end+0xfffdda54>
    {
      status = index;
    }
    else
    {
      fd = &alt_fd_list[index];
    e7d8:	01400304 	movi	r5,12
    e7dc:	8009883a 	mov	r4,r16
    e7e0:	000ab6c0 	call	ab6c <__mulsi3>
    e7e4:	05c00074 	movhi	r23,1
    e7e8:	bdfe3604 	addi	r23,r23,-1832
    e7ec:	15e7883a 	add	r19,r2,r23

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    e7f0:	00900034 	movhi	r2,16384
    e7f4:	10bfffc4 	addi	r2,r2,-1
    e7f8:	a084703a 	and	r2,r20,r2
    e7fc:	10900034 	orhi	r2,r2,16384
    e800:	98800215 	stw	r2,8(r19)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e804:	d4a00817 	ldw	r18,-32736(gp)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e808:	99800017 	ldw	r6,0(r19)
    e80c:	b805883a 	mov	r2,r23
    e810:	b9000204 	addi	r4,r23,8
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e814:	0007883a 	mov	r3,zero
    e818:	003fc906 	br	e740 <__alt_data_end+0xfffdda00>
    e81c:	1023883a 	mov	r17,r2
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  {
    if ((index = alt_get_fd (dev)) < 0)
    e820:	1009883a 	mov	r4,r2
    e824:	000e9e40 	call	e9e4 <alt_get_fd>
    e828:	1021883a 	mov	r16,r2
    e82c:	103fe616 	blt	r2,zero,e7c8 <__alt_data_end+0xfffdda88>
    e830:	003fe906 	br	e7d8 <__alt_data_end+0xfffdda98>
    {
      status = index;
    }
    else
    {
      fd = &alt_fd_list[index];
    e834:	01400304 	movi	r5,12
    e838:	8009883a 	mov	r4,r16
    e83c:	000ab6c0 	call	ab6c <__mulsi3>
    e840:	04c00074 	movhi	r19,1
    e844:	9cfe3604 	addi	r19,r19,-1832
    e848:	14e7883a 	add	r19,r2,r19
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    e84c:	00900034 	movhi	r2,16384
    e850:	10bfffc4 	addi	r2,r2,-1
    e854:	a084703a 	and	r2,r20,r2
    e858:	98800215 	stw	r2,8(r19)
    e85c:	003fc106 	br	e764 <__alt_data_end+0xfffdda24>
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  {
    if ((index = alt_get_fd (dev)) < 0)
    e860:	1009883a 	mov	r4,r2
    e864:	000e9e40 	call	e9e4 <alt_get_fd>
    e868:	1021883a 	mov	r16,r2
    e86c:	103ff10e 	bge	r2,zero,e834 <__alt_data_end+0xfffddaf4>
    e870:	003fd706 	br	e7d0 <__alt_data_end+0xfffdda90>
  }
  
  /* return the reference upon success */

  return index;
}
    e874:	dfc00817 	ldw	ra,32(sp)
    e878:	ddc00717 	ldw	r23,28(sp)
    e87c:	dd800617 	ldw	r22,24(sp)
    e880:	dd400517 	ldw	r21,20(sp)
    e884:	dd000417 	ldw	r20,16(sp)
    e888:	dcc00317 	ldw	r19,12(sp)
    e88c:	dc800217 	ldw	r18,8(sp)
    e890:	dc400117 	ldw	r17,4(sp)
    e894:	dc000017 	ldw	r16,0(sp)
    e898:	dec00904 	addi	sp,sp,36
    e89c:	f800283a 	ret

0000e8a0 <altera_nios2_gen2_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
    e8a0:	000170fa 	wrctl	ienable,zero
    e8a4:	f800283a 	ret

0000e8a8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    e8a8:	defffb04 	addi	sp,sp,-20
    e8ac:	dfc00415 	stw	ra,16(sp)
    e8b0:	dcc00315 	stw	r19,12(sp)
    e8b4:	dc800215 	stw	r18,8(sp)
    e8b8:	dc400115 	stw	r17,4(sp)
    e8bc:	dc000015 	stw	r16,0(sp)
    e8c0:	2027883a 	mov	r19,r4
    e8c4:	2823883a 	mov	r17,r5
  alt_dev* next = (alt_dev*) llist->next;
    e8c8:	2c000017 	ldw	r16,0(r5)
  alt_32 len;

  len  = strlen(name) + 1;
    e8cc:	00073480 	call	7348 <strlen>
    e8d0:	14800044 	addi	r18,r2,1
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    e8d4:	8c000926 	beq	r17,r16,e8fc <alt_find_dev+0x54>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    e8d8:	900d883a 	mov	r6,r18
    e8dc:	980b883a 	mov	r5,r19
    e8e0:	81000217 	ldw	r4,8(r16)
    e8e4:	000eb280 	call	eb28 <memcmp>
    e8e8:	10000626 	beq	r2,zero,e904 <alt_find_dev+0x5c>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    e8ec:	84000017 	ldw	r16,0(r16)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    e8f0:	8c3ff91e 	bne	r17,r16,e8d8 <__alt_data_end+0xfffddb98>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    e8f4:	0005883a 	mov	r2,zero
    e8f8:	00000306 	br	e908 <alt_find_dev+0x60>
    e8fc:	0005883a 	mov	r2,zero
    e900:	00000106 	br	e908 <alt_find_dev+0x60>
    e904:	8005883a 	mov	r2,r16
}
    e908:	dfc00417 	ldw	ra,16(sp)
    e90c:	dcc00317 	ldw	r19,12(sp)
    e910:	dc800217 	ldw	r18,8(sp)
    e914:	dc400117 	ldw	r17,4(sp)
    e918:	dc000017 	ldw	r16,0(sp)
    e91c:	dec00504 	addi	sp,sp,20
    e920:	f800283a 	ret

0000e924 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    e924:	defffa04 	addi	sp,sp,-24
    e928:	dfc00515 	stw	ra,20(sp)
    e92c:	dd000415 	stw	r20,16(sp)
    e930:	dcc00315 	stw	r19,12(sp)
    e934:	dc800215 	stw	r18,8(sp)
    e938:	dc400115 	stw	r17,4(sp)
    e93c:	dc000015 	stw	r16,0(sp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    e940:	d0a00b04 	addi	r2,gp,-32724
    e944:	14000017 	ldw	r16,0(r2)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    e948:	80801b26 	beq	r16,r2,e9b8 <alt_find_file+0x94>
    e94c:	2027883a 	mov	r19,r4
  {
    len = strlen(next->name);
    
    if (next->name[len-1] == '/')
    e950:	04800bc4 	movi	r18,47
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    e954:	1029883a 	mov	r20,r2
  {
    len = strlen(next->name);
    e958:	84400217 	ldw	r17,8(r16)
    e95c:	8809883a 	mov	r4,r17
    e960:	00073480 	call	7348 <strlen>
    e964:	1007883a 	mov	r3,r2
    
    if (next->name[len-1] == '/')
    e968:	8889883a 	add	r4,r17,r2
    e96c:	213fffc7 	ldb	r4,-1(r4)
    e970:	2480011e 	bne	r4,r18,e978 <alt_find_file+0x54>
    {
      len -= 1;
    e974:	10ffffc4 	addi	r3,r2,-1
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    e978:	180d883a 	mov	r6,r3
    e97c:	98c7883a 	add	r3,r19,r3
    e980:	18800003 	ldbu	r2,0(r3)
    e984:	10c03fcc 	andi	r3,r2,255
    e988:	18c0201c 	xori	r3,r3,128
    e98c:	18ffe004 	addi	r3,r3,-128
    e990:	1c800126 	beq	r3,r18,e998 <alt_find_file+0x74>
    e994:	1800041e 	bne	r3,zero,e9a8 <alt_find_file+0x84>
        !memcmp (next->name, name, len))
    e998:	980b883a 	mov	r5,r19
    e99c:	8809883a 	mov	r4,r17
    e9a0:	000eb280 	call	eb28 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    e9a4:	10000626 	beq	r2,zero,e9c0 <alt_find_file+0x9c>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    e9a8:	84000017 	ldw	r16,0(r16)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    e9ac:	853fea1e 	bne	r16,r20,e958 <__alt_data_end+0xfffddc18>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    e9b0:	0005883a 	mov	r2,zero
    e9b4:	00000306 	br	e9c4 <alt_find_file+0xa0>
    e9b8:	0005883a 	mov	r2,zero
    e9bc:	00000106 	br	e9c4 <alt_find_file+0xa0>
    e9c0:	8005883a 	mov	r2,r16
}
    e9c4:	dfc00517 	ldw	ra,20(sp)
    e9c8:	dd000417 	ldw	r20,16(sp)
    e9cc:	dcc00317 	ldw	r19,12(sp)
    e9d0:	dc800217 	ldw	r18,8(sp)
    e9d4:	dc400117 	ldw	r17,4(sp)
    e9d8:	dc000017 	ldw	r16,0(sp)
    e9dc:	dec00604 	addi	sp,sp,24
    e9e0:	f800283a 	ret

0000e9e4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    e9e4:	defffd04 	addi	sp,sp,-12
    e9e8:	dfc00215 	stw	ra,8(sp)
    e9ec:	dc400115 	stw	r17,4(sp)
    e9f0:	dc000015 	stw	r16,0(sp)
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  {
    if (!alt_fd_list[i].dev)
    e9f4:	00800074 	movhi	r2,1
    e9f8:	10be3604 	addi	r2,r2,-1832
    e9fc:	10800017 	ldw	r2,0(r2)
    ea00:	10000726 	beq	r2,zero,ea20 <alt_get_fd+0x3c>
    ea04:	00800074 	movhi	r2,1
    ea08:	10be3904 	addi	r2,r2,-1820
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ea0c:	04000044 	movi	r16,1
    ea10:	01400804 	movi	r5,32
  {
    if (!alt_fd_list[i].dev)
    ea14:	10c00017 	ldw	r3,0(r2)
    ea18:	18000e1e 	bne	r3,zero,ea54 <alt_get_fd+0x70>
    ea1c:	00000106 	br	ea24 <alt_get_fd+0x40>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ea20:	0021883a 	mov	r16,zero
    ea24:	2023883a 	mov	r17,r4
  {
    if (!alt_fd_list[i].dev)
    {
      alt_fd_list[i].dev = dev;
    ea28:	01400304 	movi	r5,12
    ea2c:	8009883a 	mov	r4,r16
    ea30:	000ab6c0 	call	ab6c <__mulsi3>
    ea34:	00c00074 	movhi	r3,1
    ea38:	18fe3604 	addi	r3,r3,-1832
    ea3c:	1885883a 	add	r2,r3,r2
    ea40:	14400015 	stw	r17,0(r2)
      if (i > alt_max_fd)
    ea44:	d0a00817 	ldw	r2,-32736(gp)
    ea48:	1400060e 	bge	r2,r16,ea64 <alt_get_fd+0x80>
      {
        alt_max_fd = i;
    ea4c:	d4200815 	stw	r16,-32736(gp)
    ea50:	00000406 	br	ea64 <alt_get_fd+0x80>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ea54:	84000044 	addi	r16,r16,1
    ea58:	10800304 	addi	r2,r2,12
    ea5c:	817fed1e 	bne	r16,r5,ea14 <__alt_data_end+0xfffddcd4>
 */

int alt_get_fd (alt_dev* dev)
{
  alt_32 i;
  int rc = -EMFILE;
    ea60:	043ffa04 	movi	r16,-24
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
}
    ea64:	8005883a 	mov	r2,r16
    ea68:	dfc00217 	ldw	ra,8(sp)
    ea6c:	dc400117 	ldw	r17,4(sp)
    ea70:	dc000017 	ldw	r16,0(sp)
    ea74:	dec00304 	addi	sp,sp,12
    ea78:	f800283a 	ret

0000ea7c <alt_exception_cause_generated_bad_addr>:
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  switch (cause) {
    ea7c:	213ffe84 	addi	r4,r4,-6
    ea80:	008003c4 	movi	r2,15
    ea84:	11001636 	bltu	r2,r4,eae0 <alt_exception_cause_generated_bad_addr+0x64>
    ea88:	200890ba 	slli	r4,r4,2
    ea8c:	00800074 	movhi	r2,1
    ea90:	10baa804 	addi	r2,r2,-5472
    ea94:	2089883a 	add	r4,r4,r2
    ea98:	20800017 	ldw	r2,0(r4)
    ea9c:	1000683a 	jmp	r2
    eaa0:	0000eae8 	cmpgeui	zero,zero,939
    eaa4:	0000eae8 	cmpgeui	zero,zero,939
    eaa8:	0000eae0 	cmpeqi	zero,zero,939
    eaac:	0000eae0 	cmpeqi	zero,zero,939
    eab0:	0000eae0 	cmpeqi	zero,zero,939
    eab4:	0000eae8 	cmpgeui	zero,zero,939
    eab8:	0000eae0 	cmpeqi	zero,zero,939
    eabc:	0000eae0 	cmpeqi	zero,zero,939
    eac0:	0000eae8 	cmpgeui	zero,zero,939
    eac4:	0000eae8 	cmpgeui	zero,zero,939
    eac8:	0000eae0 	cmpeqi	zero,zero,939
    eacc:	0000eae8 	cmpgeui	zero,zero,939
    ead0:	0000eae0 	cmpeqi	zero,zero,939
    ead4:	0000eae0 	cmpeqi	zero,zero,939
    ead8:	0000eae0 	cmpeqi	zero,zero,939
    eadc:	0000eae8 	cmpgeui	zero,zero,939
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    eae0:	0005883a 	mov	r2,zero
    eae4:	f800283a 	ret
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    eae8:	00800044 	movi	r2,1
    return 0;

  default:
    return 0;
  }
}
    eaec:	f800283a 	ret

0000eaf0 <exit>:
    eaf0:	defffe04 	addi	sp,sp,-8
    eaf4:	000b883a 	mov	r5,zero
    eaf8:	dc000015 	stw	r16,0(sp)
    eafc:	dfc00115 	stw	ra,4(sp)
    eb00:	2021883a 	mov	r16,r4
    eb04:	000eba40 	call	eba4 <__call_exitprocs>
    eb08:	00800074 	movhi	r2,1
    eb0c:	1082c604 	addi	r2,r2,2840
    eb10:	11000017 	ldw	r4,0(r2)
    eb14:	20800f17 	ldw	r2,60(r4)
    eb18:	10000126 	beq	r2,zero,eb20 <exit+0x30>
    eb1c:	103ee83a 	callr	r2
    eb20:	8009883a 	mov	r4,r16
    eb24:	000ed240 	call	ed24 <_exit>

0000eb28 <memcmp>:
    eb28:	01c000c4 	movi	r7,3
    eb2c:	3980192e 	bgeu	r7,r6,eb94 <memcmp+0x6c>
    eb30:	2144b03a 	or	r2,r4,r5
    eb34:	11c4703a 	and	r2,r2,r7
    eb38:	10000f26 	beq	r2,zero,eb78 <memcmp+0x50>
    eb3c:	20800003 	ldbu	r2,0(r4)
    eb40:	28c00003 	ldbu	r3,0(r5)
    eb44:	10c0151e 	bne	r2,r3,eb9c <memcmp+0x74>
    eb48:	31bfff84 	addi	r6,r6,-2
    eb4c:	01ffffc4 	movi	r7,-1
    eb50:	00000406 	br	eb64 <memcmp+0x3c>
    eb54:	20800003 	ldbu	r2,0(r4)
    eb58:	28c00003 	ldbu	r3,0(r5)
    eb5c:	31bfffc4 	addi	r6,r6,-1
    eb60:	10c00e1e 	bne	r2,r3,eb9c <memcmp+0x74>
    eb64:	21000044 	addi	r4,r4,1
    eb68:	29400044 	addi	r5,r5,1
    eb6c:	31fff91e 	bne	r6,r7,eb54 <__alt_data_end+0xfffdde14>
    eb70:	0005883a 	mov	r2,zero
    eb74:	f800283a 	ret
    eb78:	20c00017 	ldw	r3,0(r4)
    eb7c:	28800017 	ldw	r2,0(r5)
    eb80:	18bfee1e 	bne	r3,r2,eb3c <__alt_data_end+0xfffdddfc>
    eb84:	31bfff04 	addi	r6,r6,-4
    eb88:	21000104 	addi	r4,r4,4
    eb8c:	29400104 	addi	r5,r5,4
    eb90:	39bff936 	bltu	r7,r6,eb78 <__alt_data_end+0xfffdde38>
    eb94:	303fe91e 	bne	r6,zero,eb3c <__alt_data_end+0xfffdddfc>
    eb98:	003ff506 	br	eb70 <__alt_data_end+0xfffdde30>
    eb9c:	10c5c83a 	sub	r2,r2,r3
    eba0:	f800283a 	ret

0000eba4 <__call_exitprocs>:
    eba4:	defff504 	addi	sp,sp,-44
    eba8:	df000915 	stw	fp,36(sp)
    ebac:	dd400615 	stw	r21,24(sp)
    ebb0:	dc800315 	stw	r18,12(sp)
    ebb4:	dfc00a15 	stw	ra,40(sp)
    ebb8:	ddc00815 	stw	r23,32(sp)
    ebbc:	dd800715 	stw	r22,28(sp)
    ebc0:	dd000515 	stw	r20,20(sp)
    ebc4:	dcc00415 	stw	r19,16(sp)
    ebc8:	dc400215 	stw	r17,8(sp)
    ebcc:	dc000115 	stw	r16,4(sp)
    ebd0:	d9000015 	stw	r4,0(sp)
    ebd4:	2839883a 	mov	fp,r5
    ebd8:	04800044 	movi	r18,1
    ebdc:	057fffc4 	movi	r21,-1
    ebe0:	00800074 	movhi	r2,1
    ebe4:	1082c604 	addi	r2,r2,2840
    ebe8:	12000017 	ldw	r8,0(r2)
    ebec:	45005217 	ldw	r20,328(r8)
    ebf0:	44c05204 	addi	r19,r8,328
    ebf4:	a0001c26 	beq	r20,zero,ec68 <__call_exitprocs+0xc4>
    ebf8:	a0800117 	ldw	r2,4(r20)
    ebfc:	15ffffc4 	addi	r23,r2,-1
    ec00:	b8000d16 	blt	r23,zero,ec38 <__call_exitprocs+0x94>
    ec04:	14000044 	addi	r16,r2,1
    ec08:	8421883a 	add	r16,r16,r16
    ec0c:	8421883a 	add	r16,r16,r16
    ec10:	84402004 	addi	r17,r16,128
    ec14:	a463883a 	add	r17,r20,r17
    ec18:	a421883a 	add	r16,r20,r16
    ec1c:	e0001e26 	beq	fp,zero,ec98 <__call_exitprocs+0xf4>
    ec20:	80804017 	ldw	r2,256(r16)
    ec24:	e0801c26 	beq	fp,r2,ec98 <__call_exitprocs+0xf4>
    ec28:	bdffffc4 	addi	r23,r23,-1
    ec2c:	843fff04 	addi	r16,r16,-4
    ec30:	8c7fff04 	addi	r17,r17,-4
    ec34:	bd7ff91e 	bne	r23,r21,ec1c <__alt_data_end+0xfffddedc>
    ec38:	00800034 	movhi	r2,0
    ec3c:	10800004 	addi	r2,r2,0
    ec40:	10000926 	beq	r2,zero,ec68 <__call_exitprocs+0xc4>
    ec44:	a0800117 	ldw	r2,4(r20)
    ec48:	1000301e 	bne	r2,zero,ed0c <__call_exitprocs+0x168>
    ec4c:	a0800017 	ldw	r2,0(r20)
    ec50:	10003226 	beq	r2,zero,ed1c <__call_exitprocs+0x178>
    ec54:	a009883a 	mov	r4,r20
    ec58:	98800015 	stw	r2,0(r19)
    ec5c:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    ec60:	9d000017 	ldw	r20,0(r19)
    ec64:	a03fe41e 	bne	r20,zero,ebf8 <__alt_data_end+0xfffddeb8>
    ec68:	dfc00a17 	ldw	ra,40(sp)
    ec6c:	df000917 	ldw	fp,36(sp)
    ec70:	ddc00817 	ldw	r23,32(sp)
    ec74:	dd800717 	ldw	r22,28(sp)
    ec78:	dd400617 	ldw	r21,24(sp)
    ec7c:	dd000517 	ldw	r20,20(sp)
    ec80:	dcc00417 	ldw	r19,16(sp)
    ec84:	dc800317 	ldw	r18,12(sp)
    ec88:	dc400217 	ldw	r17,8(sp)
    ec8c:	dc000117 	ldw	r16,4(sp)
    ec90:	dec00b04 	addi	sp,sp,44
    ec94:	f800283a 	ret
    ec98:	a0800117 	ldw	r2,4(r20)
    ec9c:	80c00017 	ldw	r3,0(r16)
    eca0:	10bfffc4 	addi	r2,r2,-1
    eca4:	15c01426 	beq	r2,r23,ecf8 <__call_exitprocs+0x154>
    eca8:	80000015 	stw	zero,0(r16)
    ecac:	183fde26 	beq	r3,zero,ec28 <__alt_data_end+0xfffddee8>
    ecb0:	95c8983a 	sll	r4,r18,r23
    ecb4:	a0806217 	ldw	r2,392(r20)
    ecb8:	a5800117 	ldw	r22,4(r20)
    ecbc:	2084703a 	and	r2,r4,r2
    ecc0:	10000b26 	beq	r2,zero,ecf0 <__call_exitprocs+0x14c>
    ecc4:	a0806317 	ldw	r2,396(r20)
    ecc8:	2088703a 	and	r4,r4,r2
    eccc:	20000c1e 	bne	r4,zero,ed00 <__call_exitprocs+0x15c>
    ecd0:	89400017 	ldw	r5,0(r17)
    ecd4:	d9000017 	ldw	r4,0(sp)
    ecd8:	183ee83a 	callr	r3
    ecdc:	a0800117 	ldw	r2,4(r20)
    ece0:	15bfbf1e 	bne	r2,r22,ebe0 <__alt_data_end+0xfffddea0>
    ece4:	98800017 	ldw	r2,0(r19)
    ece8:	153fcf26 	beq	r2,r20,ec28 <__alt_data_end+0xfffddee8>
    ecec:	003fbc06 	br	ebe0 <__alt_data_end+0xfffddea0>
    ecf0:	183ee83a 	callr	r3
    ecf4:	003ff906 	br	ecdc <__alt_data_end+0xfffddf9c>
    ecf8:	a5c00115 	stw	r23,4(r20)
    ecfc:	003feb06 	br	ecac <__alt_data_end+0xfffddf6c>
    ed00:	89000017 	ldw	r4,0(r17)
    ed04:	183ee83a 	callr	r3
    ed08:	003ff406 	br	ecdc <__alt_data_end+0xfffddf9c>
    ed0c:	a0800017 	ldw	r2,0(r20)
    ed10:	a027883a 	mov	r19,r20
    ed14:	1029883a 	mov	r20,r2
    ed18:	003fb606 	br	ebf4 <__alt_data_end+0xfffddeb4>
    ed1c:	0005883a 	mov	r2,zero
    ed20:	003ffb06 	br	ed10 <__alt_data_end+0xfffddfd0>

0000ed24 <_exit>:
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    ed24:	20000226 	beq	r4,zero,ed30 <_exit+0xc>
    ALT_SIM_FAIL();
    ed28:	002af070 	cmpltui	zero,zero,43969
    ed2c:	00000106 	br	ed34 <_exit+0x10>
  } else {
    ALT_SIM_PASS();
    ed30:	002af0b0 	cmpltui	zero,zero,43970
    ed34:	003fff06 	br	ed34 <__alt_data_end+0xfffddff4>
